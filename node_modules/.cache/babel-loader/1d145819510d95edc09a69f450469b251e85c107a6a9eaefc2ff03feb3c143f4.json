{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialTable = ({\n  data,\n  columns,\n  columnHeaders,\n  formatNumber\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowX: \"auto\",\n      marginTop: \"20px\",\n      textAlign: \"left\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: \"max-content\",\n        borderCollapse: \"collapse\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((column, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"8px\",\n              background: \"#f2f2f2\",\n              textAlign: \"center\"\n            },\n            children: columnHeaders[column] || column\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: columns.map((column, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              padding: \"8px\",\n              textAlign: \"center\"\n            },\n            children: formatNumber(column, stock[column])\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = FinancialTable;\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 연도 선택 상태\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\n  const [currentMetric, setCurrentMetric] = useState(null);\n\n  // 표시할 열과 제목 매핑\n  const desiredColumns = ['종목명', '종목코드', '2021.12', '2022.12', '2023.12', '2024.12', '시가총액', '매출액'\n  // 추가적인 재무정보 컬럼명...\n  ];\n  const columnHeaders = {\n    '종목명': '종목명',\n    '종목코드': '종목코드',\n    '2021.12': '21년도',\n    '2022.12': '22년도',\n    '2023.12': '23년도',\n    '2024.12': '24년도',\n    '시가총액': '시가총액 (억)',\n    '매출액': '매출액 (억원)'\n    // 추가적인 컬럼 헤더 매핑...\n  };\n\n  // 숫자 포맷팅 함수 (시가총액: 억 단위, 매출액: 조 및 억 단위)\n  const formatNumber = (key, number) => {\n    if (typeof number === \"string\") {\n      number = parseFloat(number.replace(/,/g, '')); // 쉼표 제거 후 숫자로 변환\n    }\n    if (typeof number !== \"number\" || isNaN(number)) return number;\n    if (key === \"시가총액\") {\n      // 시가총액은 항상 억 단위로 표시\n      return (number / 10 ** 8).toFixed(2) + \"억\";\n    } else if (key === \"매출액\") {\n      // 매출액은 10,000 억 이상일 경우 조와 억 단위, 미만일 경우 억 단위\n      if (number >= 10 ** 12) {\n        const trillion = Math.floor(number / 10 ** 12);\n        const remaining = Math.floor(number % 10 ** 12 / 10 ** 8);\n        return `${trillion}조 ${remaining}억원`;\n      } else if (number >= 10 ** 8) {\n        return (number / 10 ** 8).toFixed(2) + \"억원\";\n      } else {\n        return number.toString();\n      }\n    } else {\n      return number.toString();\n    }\n  };\n\n  // 검색어 강조 표시 함수\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    if (typeof searchQuery !== \"string\") {\n      setError(\"유효하지 않은 검색어입니다.\");\n      return;\n    }\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    setCurrentMetric(null); // 검색 시 현재 메트릭 초기화\n    setIsLoading(true);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // 시가총액 상위 50개 가져오기\n  const fetchTopStocksByMarketCap = () => {\n    setIsLoading(true);\n    axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"시가총액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // 매출액 상위 50개 가져오기 (연도 파라미터 추가)\n  const fetchTopStocksByRevenue = year => {\n    setIsLoading(true);\n    axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n      params: {\n        year\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"매출액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    }).finally(() => {\n      setIsLoading(false);\n    });\n  };\n\n  // 입력값 변경\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n\n  // 초기 상태로 리셋\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setCurrentMetric(null);\n  };\n\n  // 추천 클릭\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n\n  // 엔터 키 동작\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    setCurrentMetric(metric);\n    if (metric === \"시가총액\") {\n      fetchTopStocksByMarketCap();\n    } else if (metric === \"매출액\") {\n      fetchTopStocksByRevenue(selectedYear);\n    } else {\n      // 다른 메트릭에 대한 처리 (필요 시 추가)\n      // 예: axios.get(`http://127.0.0.1:8000/top-${metric.toLowerCase()}`)\n      setError(`\"${metric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n    }\n  };\n\n  // 외부 클릭 이벤트 감지\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n\n  // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\n  useEffect(() => {\n    if (currentMetric === \"매출액\") {\n      fetchTopStocksByRevenue(selectedYear);\n    }\n    // 시가총액에도 연도 적용이 필요하다면 여기에 추가\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      paddingTop: \"50px\",\n      fontFamily: \"Arial, sans-serif\",\n      backgroundColor: \"#f9f9f9\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: \"Stockter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        width: \"80%\",\n        marginBottom: \"20px\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-select\",\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"bold\"\n          },\n          children: \"\\uC5F0\\uB3C4 \\uC120\\uD0DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-select\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          style: {\n            padding: \"10px\",\n            fontSize: \"14px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            minWidth: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2021\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2022\",\n            children: \"2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2023\",\n            children: \"2023\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2024\",\n            children: \"2024\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"시가총액\"),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          minWidth: \"120px\",\n          textAlign: \"center\"\n        },\n        children: \"\\uC2DC\\uAC00\\uCD1D\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"매출액\"),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          minWidth: \"120px\",\n          textAlign: \"center\"\n        },\n        children: \"\\uB9E4\\uCD9C\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }, this), [\"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          minWidth: \"120px\",\n          textAlign: \"center\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: query,\n        onChange: handleQueryChange,\n        onKeyPress: handleKeyPress,\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px 0 0 4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchData(),\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"0 4px 4px 0\",\n          cursor: \"pointer\",\n          minWidth: \"120px\"\n        },\n        children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        style: {\n          position: \"absolute\",\n          top: \"50px\",\n          width: \"100%\",\n          maxWidth: \"600px\",\n          background: \"#fff\",\n          border: \"1px solid #ccc\",\n          zIndex: 1000,\n          maxHeight: \"200px\",\n          overflowY: \"auto\"\n        },\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#e6f7ff\",\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = \"white\",\n          onClick: () => handleSuggestionClick(stock),\n          style: {\n            padding: \"8px\",\n            cursor: \"pointer\",\n            borderBottom: \"1px solid #eee\",\n            transition: \"background-color 0.2s ease\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"], query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목코드\"].toString(), query)\n            },\n            style: {\n              color: \"#666\",\n              fontSize: \"14px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 481,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 23\n    }, this), isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 27\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(FinancialTable, {\n      data: stocks,\n      columns: desiredColumns,\n      columnHeaders: columnHeaders,\n      formatNumber: formatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 308,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"CX2eWa2DI89lbGbwp9bvMuOe1/k=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"FinancialTable\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","FinancialTable","data","columns","columnHeaders","formatNumber","style","overflowX","marginTop","textAlign","width","display","justifyContent","children","border","borderCollapse","backgroundColor","map","column","index","padding","background","fileName","_jsxFileName","lineNumber","columnNumber","stock","idx","_c","App","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","isLoading","setIsLoading","dropdownRef","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","desiredColumns","key","number","parseFloat","replace","isNaN","toFixed","trillion","Math","floor","remaining","toString","highlightMatch","text","regex","RegExp","match","fetchData","searchQuery","trim","get","params","then","response","length","catch","console","finally","fetchTopStocksByMarketCap","fetchTopStocksByRevenue","year","handleQueryChange","e","input","target","value","lowercasedInput","toLowerCase","filtered","filter","stockCode","stockName","includes","startsWithQuery","startsWith","others","slice","resetState","handleSuggestionClick","handleKeyPress","handleButtonClick","metric","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","flexDirection","alignItems","height","paddingTop","fontFamily","onClick","cursor","color","marginBottom","flexWrap","gap","htmlFor","fontSize","fontWeight","id","onChange","borderRadius","minWidth","min","position","type","placeholder","onKeyPress","flex","ref","top","maxWidth","zIndex","maxHeight","overflowY","onMouseEnter","currentTarget","onMouseLeave","borderBottom","transition","dangerouslySetInnerHTML","__html","_c2","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["// src/App.js\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FinancialTable = ({ data, columns, columnHeaders, formatNumber }) => {\r\n    return (\r\n        <div style={{ overflowX: \"auto\", marginTop: \"20px\", textAlign: \"left\", width: \"100%\", display: \"flex\", justifyContent: \"center\" }}>\r\n            <table\r\n                border=\"1\"\r\n                style={{\r\n                    width: \"max-content\",\r\n                    borderCollapse: \"collapse\",\r\n                    backgroundColor: \"#fff\",\r\n                }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        {columns.map((column, index) => (\r\n                            <th\r\n                                key={index}\r\n                                style={{\r\n                                    padding: \"8px\",\r\n                                    background: \"#f2f2f2\",\r\n                                    textAlign: \"center\",\r\n                                }}\r\n                            >\r\n                                {columnHeaders[column] || column}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {data.map((stock, index) => (\r\n                        <tr key={index}>\r\n                            {columns.map((column, idx) => (\r\n                                <td key={idx} style={{ padding: \"8px\", textAlign: \"center\" }}>\r\n                                    {formatNumber(column, stock[column])}\r\n                                </td>\r\n                            ))}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst App = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 연도 선택 상태\r\n    const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n\r\n    // 표시할 열과 제목 매핑\r\n    const desiredColumns = [\r\n        '종목명',\r\n        '종목코드',\r\n        '2021.12',\r\n        '2022.12',\r\n        '2023.12',\r\n        '2024.12',\r\n        '시가총액',\r\n        '매출액',\r\n        // 추가적인 재무정보 컬럼명...\r\n    ];\r\n\r\n    const columnHeaders = {\r\n        '종목명': '종목명',\r\n        '종목코드': '종목코드',\r\n        '2021.12': '21년도',\r\n        '2022.12': '22년도',\r\n        '2023.12': '23년도',\r\n        '2024.12': '24년도',\r\n        '시가총액': '시가총액 (억)',\r\n        '매출액': '매출액 (억원)',\r\n        // 추가적인 컬럼 헤더 매핑...\r\n    };\r\n\r\n    // 숫자 포맷팅 함수 (시가총액: 억 단위, 매출액: 조 및 억 단위)\r\n    const formatNumber = (key, number) => {\r\n        if (typeof number === \"string\") {\r\n            number = parseFloat(number.replace(/,/g, '')); // 쉼표 제거 후 숫자로 변환\r\n        }\r\n        if (typeof number !== \"number\" || isNaN(number)) return number;\r\n\r\n        if (key === \"시가총액\") {\r\n            // 시가총액은 항상 억 단위로 표시\r\n            return (number / 10 ** 8).toFixed(2) + \"억\";\r\n        } else if (key === \"매출액\") {\r\n            // 매출액은 10,000 억 이상일 경우 조와 억 단위, 미만일 경우 억 단위\r\n            if (number >= 10 ** 12) {\r\n                const trillion = Math.floor(number / 10 ** 12);\r\n                const remaining = Math.floor((number % 10 ** 12) / 10 ** 8);\r\n                return `${trillion}조 ${remaining}억원`;\r\n            } else if (number >= 10 ** 8) {\r\n                return (number / 10 ** 8).toFixed(2) + \"억원\";\r\n            } else {\r\n                return number.toString();\r\n            }\r\n        } else {\r\n            return number.toString();\r\n        }\r\n    };\r\n\r\n    // 검색어 강조 표시 함수\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        if (typeof searchQuery !== \"string\") {\r\n            setError(\"유효하지 않은 검색어입니다.\");\r\n            return;\r\n        }\r\n\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n        setCurrentMetric(null); // 검색 시 현재 메트릭 초기화\r\n        setIsLoading(true);\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    // 시가총액 상위 50개 가져오기\r\n    const fetchTopStocksByMarketCap = () => {\r\n        setIsLoading(true);\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"시가총액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    // 매출액 상위 50개 가져오기 (연도 파라미터 추가)\r\n    const fetchTopStocksByRevenue = (year) => {\r\n        setIsLoading(true);\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"매출액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            })\r\n            .finally(() => {\r\n                setIsLoading(false);\r\n            });\r\n    };\r\n\r\n    // 입력값 변경\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    // 초기 상태로 리셋\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setCurrentMetric(null);\r\n    };\r\n\r\n    // 추천 클릭\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    // 엔터 키 동작\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        setCurrentMetric(metric);\r\n        if (metric === \"시가총액\") {\r\n            fetchTopStocksByMarketCap();\r\n        } else if (metric === \"매출액\") {\r\n            fetchTopStocksByRevenue(selectedYear);\r\n        } else {\r\n            // 다른 메트릭에 대한 처리 (필요 시 추가)\r\n            // 예: axios.get(`http://127.0.0.1:8000/top-${metric.toLowerCase()}`)\r\n            setError(`\"${metric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n        }\r\n    };\r\n\r\n    // 외부 클릭 이벤트 감지\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\r\n    useEffect(() => {\r\n        if (currentMetric === \"매출액\") {\r\n            fetchTopStocksByRevenue(selectedYear);\r\n        }\r\n        // 시가총액에도 연도 적용이 필요하다면 여기에 추가\r\n    }, [selectedYear]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                paddingTop: \"50px\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n                backgroundColor: \"#f9f9f9\",\r\n            }}\r\n        >\r\n            <h1\r\n                onClick={resetState}\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                Stockter\r\n            </h1>\r\n\r\n            {/* 메트릭 버튼들과 연도 선택 드롭다운 */}\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    gap: \"10px\",\r\n                    width: \"80%\",\r\n                    marginBottom: \"20px\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                {/* 연도 선택 드롭다운 - 왼쪽에 위치 */}\r\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\r\n                    <label htmlFor=\"year-select\" style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                        연도 선택:\r\n                    </label>\r\n                    <select\r\n                        id=\"year-select\"\r\n                        value={selectedYear}\r\n                        onChange={(e) => setSelectedYear(e.target.value)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            minWidth: \"100px\",\r\n                        }}\r\n                    >\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2022\">2022</option>\r\n                        <option value=\"2023\">2023</option>\r\n                        <option value=\"2024\">2024</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* 시가총액 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"시가총액\")}\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        fontSize: \"14px\",\r\n                        background: \"#f0f0f0\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                        cursor: \"pointer\",\r\n                        minWidth: \"120px\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    시가총액\r\n                </button>\r\n\r\n                {/* 매출액 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"매출액\")}\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        fontSize: \"14px\",\r\n                        background: \"#f0f0f0\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                        cursor: \"pointer\",\r\n                        minWidth: \"120px\",\r\n                        textAlign: \"center\",\r\n                    }}\r\n                >\r\n                    매출액\r\n                </button>\r\n\r\n                {/* 나머지 메트릭 버튼 */}\r\n                {[\"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map((metric) => (\r\n                    <button\r\n                        key={metric}\r\n                        onClick={() => handleButtonClick(metric)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            minWidth: \"120px\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {/* 검색창 */}\r\n            <div\r\n                style={{\r\n                    marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"600px\",\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"종목명 또는 종목코드 입력\"\r\n                    value={query}\r\n                    onChange={handleQueryChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    style={{\r\n                        flex: 1,\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px 0 0 4px\",\r\n                    }}\r\n                />\r\n                {/* onClick 핸들러 수정 */}\r\n                <button\r\n                    onClick={() => fetchData()}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"16px\",\r\n                        background: \"#007bff\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        borderRadius: \"0 4px 4px 0\",\r\n                        cursor: \"pointer\",\r\n                        minWidth: \"120px\",\r\n                    }}\r\n                >\r\n                    종목 검색\r\n                </button>\r\n                {isDropdownOpen && (\r\n                    <div\r\n                        ref={dropdownRef}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50px\",\r\n                            width: \"100%\",\r\n                            maxWidth: \"600px\",\r\n                            background: \"#fff\",\r\n                            border: \"1px solid #ccc\",\r\n                            zIndex: 1000,\r\n                            maxHeight: \"200px\",\r\n                            overflowY: \"auto\",\r\n                        }}\r\n                    >\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#e6f7ff\")}\r\n                                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"white\")}\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                                style={{\r\n                                    padding: \"8px\",\r\n                                    cursor: \"pointer\",\r\n                                    borderBottom: \"1px solid #eee\",\r\n                                    transition: \"background-color 0.2s ease\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"], query),\r\n                                    }}\r\n                                ></span>\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목코드\"].toString(), query),\r\n                                    }}\r\n                                    style={{ color: \"#666\", fontSize: \"14px\" }}\r\n                                ></span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p style={{ color: \"red\", marginBottom: \"20px\" }}>{error}</p>}\r\n\r\n            {/* 로딩 상태 표시 */}\r\n            {isLoading && <p>데이터 로딩 중...</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <FinancialTable\r\n                    data={stocks}\r\n                    columns={desiredColumns}\r\n                    columnHeaders={columnHeaders}\r\n                    formatNumber={formatNumber}\r\n                />\r\n            )}\r\n        </div>\r\n    )};\r\n\r\n    export default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}