{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n  const fetchData = (searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n  const fetchTopStocksByMarketCap = () => {\n    axios.get(\"http://127.0.0.1:8000/top-marketcap\") // 서버에서 시가총액 상위 50개 데이터 제공\n    .then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"시가총액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks); // 상위 50개의 종목 데이터\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = [];\n          response.data.stocks.forEach(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            if (stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput)) {\n              filtered.push(stock);\n            }\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n  const highlightMatch = (text, query) => {\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n  const handleButtonClick = metric => {\n    if (metric === \"시가총액\") {\n      fetchTopStocksByMarketCap(); // 시가총액 상위 50개 불러오기\n    } else {\n      console.log(`${metric} 버튼 클릭됨`);\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"mousedown\", e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    });\n    return () => {\n      document.removeEventListener(\"mousedown\", () => {});\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      paddingTop: \"50px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textAlign: \"center\"\n      },\n      children: \"Stockter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: query,\n        onChange: handleQueryChange,\n        onKeyPress: handleKeyPress,\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px 0 0 4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"0 4px 4px 0\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        style: {\n          position: \"absolute\",\n          top: \"50px\",\n          width: \"100%\",\n          maxWidth: \"600px\",\n          background: \"#fff\",\n          border: \"1px solid #ccc\",\n          zIndex: 1000,\n          maxHeight: \"200px\",\n          overflowY: \"auto\"\n        },\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#e6f7ff\",\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = \"white\",\n          onClick: () => handleSuggestionClick(stock),\n          style: {\n            padding: \"8px\",\n            cursor: \"pointer\",\n            borderBottom: \"1px solid #eee\",\n            transition: \"background-color 0.2s ease\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"], query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목코드\"].toString(), query)\n            },\n            style: {\n              color: \"#666\",\n              fontSize: \"14px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\n        gap: \"10px\",\n        width: \"80%\",\n        marginBottom: \"20px\"\n      },\n      children: [\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 13\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        marginTop: \"20px\",\n        textAlign: \"left\",\n        width: \"100%\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"max-content\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"8px\",\n                background: \"#f2f2f2\",\n                textAlign: \"left\"\n              },\n              children: key\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(stock).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"8px\",\n                textAlign: \"left\"\n              },\n              children: value\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 335,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"U2V+1toZ8IbdJsrXfSf8eT8BMc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","fetchData","searchQuery","trim","get","params","then","response","data","length","catch","console","fetchTopStocksByMarketCap","handleQueryChange","e","input","target","value","lowercasedInput","toLowerCase","filtered","forEach","stock","stockCode","toString","stockName","includes","push","startsWithQuery","filter","startsWith","others","slice","resetState","handleKeyPress","key","handleSuggestionClick","highlightMatch","text","regex","RegExp","replace","match","handleButtonClick","metric","log","document","addEventListener","current","contains","removeEventListener","style","display","flexDirection","justifyContent","alignItems","height","paddingTop","fontFamily","children","onClick","cursor","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","Math","min","position","width","type","placeholder","onChange","onKeyPress","flex","padding","fontSize","border","borderRadius","background","ref","top","maxWidth","zIndex","maxHeight","overflowY","map","index","onMouseEnter","currentTarget","backgroundColor","onMouseLeave","borderBottom","transition","dangerouslySetInnerHTML","__html","gridTemplateColumns","gap","overflowX","marginTop","borderCollapse","Object","keys","values","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    const fetchData = (searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n\r\n        axios.get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    const fetchTopStocksByMarketCap = () => {\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-marketcap\") // 서버에서 시가총액 상위 50개 데이터 제공\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"시가총액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks); // 상위 50개의 종목 데이터\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios.get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = [];\r\n\r\n                        response.data.stocks.forEach((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n\r\n                            if (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            ) {\r\n                                filtered.push(stock);\r\n                            }\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    const highlightMatch = (text, query) => {\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    const handleButtonClick = (metric) => {\r\n        if (metric === \"시가총액\") {\r\n            fetchTopStocksByMarketCap(); // 시가총액 상위 50개 불러오기\r\n        } else {\r\n            console.log(`${metric} 버튼 클릭됨`);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener(\"mousedown\", (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        });\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", () => {});\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                paddingTop: \"50px\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n            }}\r\n        >\r\n            <h1\r\n                onClick={resetState}\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n                Stockter\r\n            </h1>\r\n            <div\r\n                style={{\r\n                    marginBottom: isDropdownOpen\r\n                        ? `${Math.min(filteredStocks.length * 40, 200) + 40}px`\r\n                        : \"20px\",\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"600px\",\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"종목명 또는 종목코드 입력\"\r\n                    value={query}\r\n                    onChange={handleQueryChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    style={{\r\n                        flex: 1,\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px 0 0 4px\",\r\n                    }}\r\n                />\r\n                <button\r\n                    onClick={fetchData}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"16px\",\r\n                        background: \"#007bff\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        borderRadius: \"0 4px 4px 0\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                >\r\n                    종목 검색\r\n                </button>\r\n                {isDropdownOpen && (\r\n                    <div\r\n                        ref={dropdownRef}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50px\",\r\n                            width: \"100%\",\r\n                            maxWidth: \"600px\",\r\n                            background: \"#fff\",\r\n                            border: \"1px solid #ccc\",\r\n                            zIndex: 1000,\r\n                            maxHeight: \"200px\",\r\n                            overflowY: \"auto\",\r\n                        }}\r\n                    >\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#e6f7ff\")}\r\n                                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"white\")}\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                                style={{\r\n                                    padding: \"8px\",\r\n                                    cursor: \"pointer\",\r\n                                    borderBottom: \"1px solid #eee\",\r\n                                    transition: \"background-color 0.2s ease\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"], query),\r\n                                    }}\r\n                                ></span>\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목코드\"].toString(), query),\r\n                                    }}\r\n                                    style={{ color: \"#666\", fontSize: \"14px\" }}\r\n                                ></span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <div\r\n                style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\r\n                    gap: \"10px\",\r\n                    width: \"80%\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                {[\r\n                    \"시가총액\",\r\n                    \"매출액\",\r\n                    \"영업이익률\",\r\n                    \"순이익률\",\r\n                    \"EPS\",\r\n                    \"PER\",\r\n                    \"PBR\",\r\n                    \"시가배당률(%)\",\r\n                ].map((metric) => (\r\n                    <button\r\n                        key={metric}\r\n                        onClick={() => handleButtonClick(metric)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    >\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    style={{\r\n                        overflowX: \"auto\",\r\n                        marginTop: \"20px\",\r\n                        textAlign: \"left\",\r\n                        width: \"100%\",\r\n                    }}\r\n                >\r\n                    <table\r\n                        border=\"1\"\r\n                        style={{\r\n                            width: \"max-content\",\r\n                            borderCollapse: \"collapse\",\r\n                        }}\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                {Object.keys(stocks[0]).map((key, index) => (\r\n                                    <th\r\n                                        key={index}\r\n                                        style={{\r\n                                            padding: \"8px\",\r\n                                            background: \"#f2f2f2\",\r\n                                            textAlign: \"left\",\r\n                                        }}\r\n                                    >\r\n                                        {key}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {stocks.map((stock, index) => (\r\n                                <tr key={index}>\r\n                                    {Object.values(stock).map((value, idx) => (\r\n                                        <td\r\n                                            key={idx}\r\n                                            style={{\r\n                                                padding: \"8px\",\r\n                                                textAlign: \"left\",\r\n                                            }}\r\n                                        >\r\n                                            {value}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMkB,WAAW,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAEhC,MAAMiB,SAAS,GAAGA,CAACC,WAAW,GAAGV,KAAK,KAAK;IACvC,IAAI,CAACU,WAAW,CAACC,IAAI,CAAC,CAAC,EAAE;MACrBN,QAAQ,CAAC,aAAa,CAAC;MACvB;IACJ;IACAA,QAAQ,CAAC,EAAE,CAAC;IACZF,iBAAiB,CAAC,EAAE,CAAC;IACrBI,iBAAiB,CAAC,KAAK,CAAC;IAExBd,KAAK,CAACmB,GAAG,CAAC,4BAA4B,EAAE;MAAEC,MAAM,EAAE;QAAEb,KAAK,EAAEU;MAAY;IAAE,CAAC,CAAC,CACtEI,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACZ,KAAK,IAAIW,QAAQ,CAACC,IAAI,CAAClB,MAAM,CAACmB,MAAM,KAAK,CAAC,EAAE;QAC1DZ,QAAQ,CAAC,cAAc,CAAC;QACxBN,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACHA,SAAS,CAACgB,QAAQ,CAACC,IAAI,CAAClB,MAAM,CAAC;QAC/BO,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,CACDa,KAAK,CAAEd,KAAK,IAAK;MACde,OAAO,CAACf,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BN,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACV,CAAC;EAED,MAAMqB,yBAAyB,GAAGA,CAAA,KAAM;IACpC3B,KAAK,CACAmB,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAAA,CAC3CE,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACZ,KAAK,IAAIW,QAAQ,CAACC,IAAI,CAAClB,MAAM,CAACmB,MAAM,KAAK,CAAC,EAAE;QAC1DZ,QAAQ,CAAC,iBAAiB,CAAC;QAC3BN,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACHA,SAAS,CAACgB,QAAQ,CAACC,IAAI,CAAClB,MAAM,CAAC,CAAC,CAAC;QACjCO,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,CACDa,KAAK,CAAEd,KAAK,IAAK;MACde,OAAO,CAACf,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BN,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACV,CAAC;EAED,MAAMsB,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC5BxB,QAAQ,CAACsB,KAAK,CAAC;IAEf,IAAIA,KAAK,CAACZ,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACrBR,iBAAiB,CAAC,EAAE,CAAC;MACrBI,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC,MAAM;MACHd,KAAK,CAACmB,GAAG,CAAC,4BAA4B,EAAE;QAAEC,MAAM,EAAE;UAAEb,KAAK,EAAEuB;QAAM;MAAE,CAAC,CAAC,CAChET,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAI,CAAClB,MAAM,EAAE;UACtB,MAAM4B,eAAe,GAAGH,KAAK,CAACI,WAAW,CAAC,CAAC;UAC3C,MAAMC,QAAQ,GAAG,EAAE;UAEnBb,QAAQ,CAACC,IAAI,CAAClB,MAAM,CAAC+B,OAAO,CAAEC,KAAK,IAAK;YACpC,MAAMC,SAAS,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;YACxD,MAAMM,SAAS,GAAGH,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC;YAE5C,IACII,SAAS,CAACG,QAAQ,CAACR,eAAe,CAAC,IACnCO,SAAS,CAACC,QAAQ,CAACR,eAAe,CAAC,EACrC;cACEE,QAAQ,CAACO,IAAI,CAACL,KAAK,CAAC;YACxB;UACJ,CAAC,CAAC;UAEF,MAAMM,eAAe,GAAGR,QAAQ,CAACS,MAAM,CAAEP,KAAK,IAAK;YAC/C,MAAMC,SAAS,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;YACxD,MAAMM,SAAS,GAAGH,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC;YAC5C,OACII,SAAS,CAACO,UAAU,CAACZ,eAAe,CAAC,IACrCO,SAAS,CAACK,UAAU,CAACZ,eAAe,CAAC;UAE7C,CAAC,CAAC;UAEF,MAAMa,MAAM,GAAGX,QAAQ,CAACS,MAAM,CAAEP,KAAK,IAAK;YACtC,MAAMC,SAAS,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;YACxD,MAAMM,SAAS,GAAGH,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC;YAC5C,OACI,CAACI,SAAS,CAACO,UAAU,CAACZ,eAAe,CAAC,IACtC,CAACO,SAAS,CAACK,UAAU,CAACZ,eAAe,CAAC;UAE9C,CAAC,CAAC;UAEFvB,iBAAiB,CAAC,CAAC,GAAGiC,eAAe,EAAE,GAAGG,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAC/DjC,iBAAiB,CAAC,IAAI,CAAC;QAC3B;MACJ,CAAC,CAAC,CACDW,KAAK,CAAEd,KAAK,IAAK;QACde,OAAO,CAACf,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ,CAAC;EAED,MAAMqC,UAAU,GAAGA,CAAA,KAAM;IACrBxC,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,EAAE,CAAC;IACbI,iBAAiB,CAAC,EAAE,CAAC;IACrBE,QAAQ,CAAC,EAAE,CAAC;IACZE,iBAAiB,CAAC,KAAK,CAAC;EAC5B,CAAC;EAED,MAAMmC,cAAc,GAAIpB,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACqB,GAAG,KAAK,OAAO,EAAE;MACnBlC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC;EAED,MAAMmC,qBAAqB,GAAId,KAAK,IAAK;IACrC7B,QAAQ,CAAC6B,KAAK,CAAC,KAAK,CAAC,CAAC;IACtBvB,iBAAiB,CAAC,KAAK,CAAC;IACxBE,SAAS,CAACqB,KAAK,CAAC,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,MAAMe,cAAc,GAAGA,CAACC,IAAI,EAAE9C,KAAK,KAAK;IACpC,MAAM+C,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAIhD,KAAK,GAAG,EAAE,IAAI,CAAC;IAC5C,OAAO8C,IAAI,CAACG,OAAO,CAACF,KAAK,EAAGG,KAAK,IAAK,4BAA4BA,KAAK,SAAS,CAAC;EACrF,CAAC;EAED,MAAMC,iBAAiB,GAAIC,MAAM,IAAK;IAClC,IAAIA,MAAM,KAAK,MAAM,EAAE;MACnBhC,yBAAyB,CAAC,CAAC,CAAC,CAAC;IACjC,CAAC,MAAM;MACHD,OAAO,CAACkC,GAAG,CAAC,GAAGD,MAAM,SAAS,CAAC;IACnC;EACJ,CAAC;EAED7D,SAAS,CAAC,MAAM;IACZ+D,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAGjC,CAAC,IAAK;MAC1C,IAAId,WAAW,CAACgD,OAAO,IAAI,CAAChD,WAAW,CAACgD,OAAO,CAACC,QAAQ,CAACnC,CAAC,CAACE,MAAM,CAAC,EAAE;QAChEjB,iBAAiB,CAAC,KAAK,CAAC;MAC5B;IACJ,CAAC,CAAC;IACF,OAAO,MAAM;MACT+C,QAAQ,CAACI,mBAAmB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC,CAAC;IACvD,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI/D,OAAA;IACIgE,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,YAAY;MAC5BC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,OAAO;MACfC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,gBAEFxE,OAAA;MACIyE,OAAO,EAAE3B,UAAW;MACpBkB,KAAK,EAAE;QACHU,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,SAAS,EAAE;MACf,CAAE;MAAAJ,QAAA,EACL;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACLhF,OAAA;MACIgE,KAAK,EAAE;QACHiB,YAAY,EAAEtE,cAAc,GACtB,GAAGuE,IAAI,CAACC,GAAG,CAAC5E,cAAc,CAACe,MAAM,GAAG,EAAE,EAAE,GAAG,CAAC,GAAG,EAAE,IAAI,GACrD,MAAM;QACZ8D,QAAQ,EAAE,UAAU;QACpBnB,OAAO,EAAE,MAAM;QACfG,UAAU,EAAE,QAAQ;QACpBD,cAAc,EAAE,QAAQ;QACxBkB,KAAK,EAAE;MACX,CAAE;MAAAb,QAAA,gBAEFxE,OAAA;QACIsF,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,uEAAgB;QAC5BzD,KAAK,EAAEzB,KAAM;QACbmF,QAAQ,EAAE9D,iBAAkB;QAC5B+D,UAAU,EAAE1C,cAAe;QAC3BiB,KAAK,EAAE;UACH0B,IAAI,EAAE,CAAC;UACPC,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBC,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE;QAClB;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACFhF,OAAA;QACIyE,OAAO,EAAE3D,SAAU;QACnBkD,KAAK,EAAE;UACH2B,OAAO,EAAE,WAAW;UACpBC,QAAQ,EAAE,MAAM;UAChBG,UAAU,EAAE,SAAS;UACrBpB,KAAK,EAAE,MAAM;UACbkB,MAAM,EAAE,MAAM;UACdC,YAAY,EAAE,aAAa;UAC3BpB,MAAM,EAAE;QACZ,CAAE;QAAAF,QAAA,EACL;MAED;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,EACRrE,cAAc,iBACXX,OAAA;QACIgG,GAAG,EAAEnF,WAAY;QACjBmD,KAAK,EAAE;UACHoB,QAAQ,EAAE,UAAU;UACpBa,GAAG,EAAE,MAAM;UACXZ,KAAK,EAAE,MAAM;UACba,QAAQ,EAAE,OAAO;UACjBH,UAAU,EAAE,MAAM;UAClBF,MAAM,EAAE,gBAAgB;UACxBM,MAAM,EAAE,IAAI;UACZC,SAAS,EAAE,OAAO;UAClBC,SAAS,EAAE;QACf,CAAE;QAAA7B,QAAA,EAEDjE,cAAc,CAAC+F,GAAG,CAAC,CAACnE,KAAK,EAAEoE,KAAK,kBAC7BvG,OAAA;UAEIwG,YAAY,EAAG7E,CAAC,IAAMA,CAAC,CAAC8E,aAAa,CAACzC,KAAK,CAAC0C,eAAe,GAAG,SAAW;UACzEC,YAAY,EAAGhF,CAAC,IAAMA,CAAC,CAAC8E,aAAa,CAACzC,KAAK,CAAC0C,eAAe,GAAG,OAAS;UACvEjC,OAAO,EAAEA,CAAA,KAAMxB,qBAAqB,CAACd,KAAK,CAAE;UAC5C6B,KAAK,EAAE;YACH2B,OAAO,EAAE,KAAK;YACdjB,MAAM,EAAE,SAAS;YACjBkC,YAAY,EAAE,gBAAgB;YAC9BC,UAAU,EAAE,4BAA4B;YACxC5C,OAAO,EAAE,MAAM;YACfE,cAAc,EAAE;UACpB,CAAE;UAAAK,QAAA,gBAEFxE,OAAA;YACI8G,uBAAuB,EAAE;cACrBC,MAAM,EAAE7D,cAAc,CAACf,KAAK,CAAC,KAAK,CAAC,EAAE9B,KAAK;YAC9C;UAAE;YAAAwE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACRhF,OAAA;YACI8G,uBAAuB,EAAE;cACrBC,MAAM,EAAE7D,cAAc,CAACf,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,EAAEhC,KAAK;YAC1D,CAAE;YACF2D,KAAK,EAAE;cAAEW,KAAK,EAAE,MAAM;cAAEiB,QAAQ,EAAE;YAAO;UAAE;YAAAf,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACxC,CAAC;QAAA,GAvBHuB,KAAK;UAAA1B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EACLvE,KAAK,iBAAIT,OAAA;MAAGgE,KAAK,EAAE;QAAEW,KAAK,EAAE;MAAM,CAAE;MAAAH,QAAA,EAAE/D;IAAK;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjDhF,OAAA;MACIgE,KAAK,EAAE;QACHC,OAAO,EAAE,MAAM;QACf+C,mBAAmB,EAAE,sCAAsC;QAC3DC,GAAG,EAAE,MAAM;QACX5B,KAAK,EAAE,KAAK;QACZJ,YAAY,EAAE;MAClB,CAAE;MAAAT,QAAA,EAED,CACG,MAAM,EACN,KAAK,EACL,OAAO,EACP,MAAM,EACN,KAAK,EACL,KAAK,EACL,KAAK,EACL,UAAU,CACb,CAAC8B,GAAG,CAAE7C,MAAM,iBACTzD,OAAA;QAEIyE,OAAO,EAAEA,CAAA,KAAMjB,iBAAiB,CAACC,MAAM,CAAE;QACzCO,KAAK,EAAE;UACH2B,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBG,UAAU,EAAE,SAAS;UACrBF,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBpB,MAAM,EAAE;QACZ,CAAE;QAAAF,QAAA,EAEDf;MAAM,GAXFA,MAAM;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYP,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EACL7E,MAAM,CAACmB,MAAM,GAAG,CAAC,iBACdtB,OAAA;MACIgE,KAAK,EAAE;QACHkD,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,MAAM;QACjBvC,SAAS,EAAE,MAAM;QACjBS,KAAK,EAAE;MACX,CAAE;MAAAb,QAAA,eAEFxE,OAAA;QACI6F,MAAM,EAAC,GAAG;QACV7B,KAAK,EAAE;UACHqB,KAAK,EAAE,aAAa;UACpB+B,cAAc,EAAE;QACpB,CAAE;QAAA5C,QAAA,gBAEFxE,OAAA;UAAAwE,QAAA,eACIxE,OAAA;YAAAwE,QAAA,EACK6C,MAAM,CAACC,IAAI,CAACnH,MAAM,CAAC,CAAC,CAAC,CAAC,CAACmG,GAAG,CAAC,CAACtD,GAAG,EAAEuD,KAAK,kBACnCvG,OAAA;cAEIgE,KAAK,EAAE;gBACH2B,OAAO,EAAE,KAAK;gBACdI,UAAU,EAAE,SAAS;gBACrBnB,SAAS,EAAE;cACf,CAAE;cAAAJ,QAAA,EAEDxB;YAAG,GAPCuD,KAAK;cAAA1B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRhF,OAAA;UAAAwE,QAAA,EACKrE,MAAM,CAACmG,GAAG,CAAC,CAACnE,KAAK,EAAEoE,KAAK,kBACrBvG,OAAA;YAAAwE,QAAA,EACK6C,MAAM,CAACE,MAAM,CAACpF,KAAK,CAAC,CAACmE,GAAG,CAAC,CAACxE,KAAK,EAAE0F,GAAG,kBACjCxH,OAAA;cAEIgE,KAAK,EAAE;gBACH2B,OAAO,EAAE,KAAK;gBACdf,SAAS,EAAE;cACf,CAAE;cAAAJ,QAAA,EAED1C;YAAK,GAND0F,GAAG;cAAA3C,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOR,CACP;UAAC,GAXGuB,KAAK;YAAA1B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9E,EAAA,CA7VID,GAAG;AAAAwH,EAAA,GAAHxH,GAAG;AA+VT,eAAeA,GAAG;AAAC,IAAAwH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}