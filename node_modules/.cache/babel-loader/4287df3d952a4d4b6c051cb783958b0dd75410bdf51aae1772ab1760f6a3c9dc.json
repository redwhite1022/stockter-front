{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stockter\\\\front\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chart.js/auto\"; // 자동 등록\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // ========== (1) 연간 데이터 관련 상태 ==========\n  const [annualData, setAnnualData] = useState([]); // 연간 데이터 배열\n  const [annualLoading, setAnnualLoading] = useState(false); // 연간 데이터 로딩 상태\n  const [annualError, setAnnualError] = useState(\"\"); // 연간 데이터 오류 메시지\n  const [annualSelectedButton, setAnnualSelectedButton] = useState(\"\"); // 현재 선택된 연간 버튼\n\n  // ========== (2) 분기 데이터 관련 상태 ==========\n  const [quarterlyData, setQuarterlyData] = useState([]); // 분기별 데이터 배열\n  const [quarterlyLoading, setQuarterlyLoading] = useState(false); // 분기 데이터 로딩 상태\n  const [quarterlyError, setQuarterlyError] = useState(\"\"); // 분기 데이터 오류 메시지\n  const [quarterlySelectedButton, setQuarterlySelectedButton] = useState(\"\"); // 현재 선택된 분기 버튼\n\n  // 분기 라벨 매핑 객체 (예시: 필요시 수정)\n  const quarterLabelMap = {\n    \"2023.Q1\": \"2023-Q1\",\n    \"2023.Q2\": \"2023-Q2\",\n    \"2023.Q3\": \"2023-Q3\",\n    \"2023.Q4\": \"2023-Q4\"\n  };\n\n  // 각각의 차트에 대한 ref (스크롤 용도)\n  const annualChartRef = useRef(null);\n  const quarterlyChartRef = useRef(null);\n\n  // ---------------------------\n  // (추가) 뉴스 관련 상태\n  // ---------------------------\n  const [newsList, setNewsList] = useState([]); // 뉴스 기사 목록\n  const [newsError, setNewsError] = useState(\"\"); // 뉴스 관련 에러메시지\n  const [newsLoading, setNewsLoading] = useState(false); // 뉴스 로딩 상태\n  const [showNews, setShowNews] = useState(false); // 뉴스 목록 표시 여부\n\n  // 공백/쉼표 제거\n  const cleanValue = value => {\n    if (typeof value === \"string\") {\n      return value.replace(/[\\s,]+/g, \"\");\n    }\n    if (value === null || value === undefined) {\n      return \"N/A\";\n    }\n    return value;\n  };\n\n  // 퍼센트 단위인지 확인하는 함수\n  const isPercentage = buttonName => {\n    const percentageButtons = [\"영업이익률\", \"부채비율\"];\n    return percentageButtons.includes(buttonName);\n  };\n\n  // ---------------------------\n  // 1) 검색 함수\n  // ---------------------------\n  const fetchData = useCallback((searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n        setHighlightedStock(null);\n      } else {\n        const mappedData = response.data.stocks.map(stock => ({\n          ...stock,\n          매출액: cleanValue(stock[\"매출액\"]),\n          영업이익: cleanValue(stock[\"영업이익\"]),\n          영업이익률: cleanValue(stock[\"영업이익률\"]),\n          시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\n          부채비율: cleanValue(stock[\"부채비율\"])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0] || null);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 오류:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n    });\n  }, [query]);\n\n  // ---------------------------\n  // 2) 자동완성 로직\n  // ---------------------------\n  const handleQueryChange = useCallback(e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n\n          // 입력값으로 시작하는 종목 우선 정렬\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n\n          // 최대 10개까지만\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  }, []);\n  const handleSuggestionClick = useCallback(stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    setHighlightedStock(stock);\n    fetchData(stock[\"종목명\"]);\n  }, [fetchData]);\n  const handleKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n      setIsDropdownOpen(false);\n    }\n  }, [fetchData]);\n\n  // ---------------------------\n  // 3) 기타 이벤트 (리셋 등)\n  // ---------------------------\n  const resetState = useCallback(() => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n\n    // 연간 / 분기 데이터도 모두 초기화\n    setAnnualData([]);\n    setAnnualLoading(false);\n    setAnnualError(\"\");\n    setAnnualSelectedButton(\"\");\n    setQuarterlyData([]);\n    setQuarterlyLoading(false);\n    setQuarterlyError(\"\");\n    setQuarterlySelectedButton(\"\");\n\n    // 뉴스 관련도 초기화\n    setNewsList([]);\n    setNewsError(\"\");\n    setNewsLoading(false);\n    setShowNews(false);\n  }, []);\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = useCallback((text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  }, []);\n\n  // ---------------------------\n  // 4) 연간 재무데이터 버튼 핸들러\n  // ---------------------------\n  const handleAnnualButtonClick = useCallback(async buttonName => {\n    if (annualLoading) {\n      console.warn(\"연간 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\n      return;\n    }\n    if (!highlightedStock) {\n      setAnnualError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\n      return;\n    }\n    setAnnualLoading(true);\n    setAnnualError(\"\");\n    setAnnualData([]);\n    setAnnualSelectedButton(buttonName);\n\n    // 엔드포인트 결정\n    let endpoint = \"\";\n    if (buttonName === \"매출액\") {\n      endpoint = \"financial-annual-sales\";\n    } else if (buttonName === \"영업이익\") {\n      endpoint = \"financial-operating-profit\";\n    } else if (buttonName === \"영업이익률\") {\n      endpoint = \"financial-operating-income-rate\";\n    } else if (buttonName === \"순이익\") {\n      endpoint = \"financial-net-income\";\n    } else if (buttonName === \"부채비율\") {\n      endpoint = \"financial-debt-ratio\";\n    } else {\n      console.warn(\"지원되지 않는 버튼입니다(연간).\");\n      setAnnualLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`, {\n        params: {\n          stock_name: highlightedStock[\"종목명\"]\n        }\n      });\n      let data = null;\n      if (buttonName === \"매출액\" && response.data.annual_sales) {\n        data = response.data.annual_sales;\n      } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\n        data = response.data.operating_profit;\n      } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\n        data = response.data.operating_income_rate;\n      } else if (buttonName === \"순이익\" && response.data.net_income) {\n        data = response.data.net_income;\n      } else if (buttonName === \"부채비율\" && response.data.debt_ratio) {\n        data = response.data.debt_ratio;\n      }\n      if (data && data.length > 0) {\n        setAnnualData(data);\n      } else {\n        setAnnualError(`${buttonName} 데이터가 없습니다.`);\n      }\n    } catch (error) {\n      console.error(\"연간 데이터 로드 오류:\", error);\n      setAnnualError(`${buttonName} 데이터를 가져오는 중 오류가 발생했습니다.`);\n    } finally {\n      setAnnualLoading(false);\n    }\n  }, [highlightedStock, annualLoading]);\n\n  // ---------------------------\n  // 5) 분기별 재무데이터 버튼 핸들러\n  // ---------------------------\n  const handleQuarterlyButtonClick = useCallback(async buttonName => {\n    if (quarterlyLoading) {\n      console.warn(\"분기별 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\n      return;\n    }\n    if (!highlightedStock) {\n      setQuarterlyError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\n      return;\n    }\n    setQuarterlyLoading(true);\n    setQuarterlyError(\"\");\n    setQuarterlyData([]);\n    setQuarterlySelectedButton(buttonName);\n\n    // 엔드포인트 결정 (분기별)\n    let endpoint = \"\";\n    if (buttonName === \"매출액\") {\n      endpoint = \"financial-quarterly-sales\";\n    } else if (buttonName === \"영업이익\") {\n      endpoint = \"financial-quarterly-operating-profit\";\n    } else if (buttonName === \"영업이익률\") {\n      endpoint = \"financial-quarterly-operating-income-rate\";\n    } else if (buttonName === \"순이익\") {\n      endpoint = \"financial-quarterly-net-income\";\n    } else if (buttonName === \"부채비율\") {\n      endpoint = \"financial-quarterly-debt-ratio\";\n    } else {\n      console.warn(\"지원되지 않는 버튼입니다(분기).\");\n      setQuarterlyLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`, {\n        params: {\n          stock_name: highlightedStock[\"종목명\"]\n        }\n      });\n      let data = null;\n      if (buttonName === \"매출액\" && response.data.quarterly_sales) {\n        data = response.data.quarterly_sales;\n      } else if (buttonName === \"영업이익\" && response.data.quarterly_operating_profit) {\n        data = response.data.quarterly_operating_profit;\n      } else if (buttonName === \"영업이익률\" && response.data.quarterly_operating_income_rate) {\n        data = response.data.quarterly_operating_income_rate;\n      } else if (buttonName === \"순이익\" && response.data.quarterly_net_income) {\n        data = response.data.quarterly_net_income;\n      } else if (buttonName === \"부채비율\" && response.data.quarterly_debt_ratio) {\n        data = response.data.quarterly_debt_ratio;\n      }\n      if (data && data.length > 0) {\n        setQuarterlyData(data);\n      } else {\n        setQuarterlyError(`${buttonName} 분기별 데이터가 없습니다.`);\n      }\n    } catch (error) {\n      console.error(\"분기별 데이터 로드 오류:\", error);\n      setQuarterlyError(`${buttonName} 분기별 데이터를 가져오는 중 오류가 발생했습니다.`);\n    } finally {\n      setQuarterlyLoading(false);\n    }\n  }, [highlightedStock, quarterlyLoading]);\n\n  // ---------------------------\n  // 6) 자동 스크롤 useEffect (연간/분기)\n  // ---------------------------\n  useEffect(() => {\n    if (annualData.length > 0 && annualChartRef.current) {\n      annualChartRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [annualData]);\n  useEffect(() => {\n    if (quarterlyData.length > 0 && quarterlyChartRef.current) {\n      quarterlyChartRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [quarterlyData]);\n\n  // ---------------------------\n  // (A) 연간 차트 데이터 구성\n  // ---------------------------\n  const annualChartData = {\n    labels: annualData.map(item => item.연도 || item.label || \"N/A\"),\n    datasets: [{\n      label: isPercentage(annualSelectedButton) ? `${annualSelectedButton} (%)` : `${annualSelectedButton} (억)`,\n      data: annualData.map(item => item[annualSelectedButton]),\n      backgroundColor: annualSelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 0.6)\" : annualSelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 0.6)\" : annualSelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 0.6)\" : annualSelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 0.6)\" : annualSelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 0.6)\" : \"rgba(75, 192, 192, 0.6)\",\n      borderColor: annualSelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 1)\" : annualSelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 1)\" : annualSelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 1)\" : annualSelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 1)\" : annualSelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 1)\" : \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  };\n\n  // ---------------------------\n  // (B) 분기 차트 데이터 구성\n  // ---------------------------\n  const quarterlyChartData = {\n    labels: quarterlyData.map(item => item.분기 || item.label || \"N/A\"),\n    datasets: [{\n      label: isPercentage(quarterlySelectedButton) ? `${quarterlySelectedButton} (%)` : `${quarterlySelectedButton} (억)`,\n      data: quarterlyData.map(item => item[quarterlySelectedButton]),\n      backgroundColor: quarterlySelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 0.6)\" : quarterlySelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 0.6)\" : quarterlySelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 0.6)\" : quarterlySelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 0.6)\" : quarterlySelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 0.6)\" : \"rgba(75, 192, 192, 0.6)\",\n      borderColor: quarterlySelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 1)\" : quarterlySelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 1)\" : quarterlySelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 1)\" : quarterlySelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 1)\" : quarterlySelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 1)\" : \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  };\n\n  // ---------------------------\n  // (C) 최신 뉴스 가져오기 함수\n  // ---------------------------\n\n  const fetchLatestNews = async () => {\n    if (!highlightedStock) {\n      setNewsError(\"종목을 먼저 검색/선택해주세요.\");\n      return;\n    }\n    try {\n      setNewsLoading(true);\n      setNewsError(\"\");\n      setNewsList([]);\n      setShowNews(false);\n\n      // 백엔드 주소: 배포된 URL로 변경 (예시)\n      const response = await axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/news\", {\n        params: {\n          stock_name: highlightedStock[\"종목명\"]\n        }\n      });\n      if (response.data.error) {\n        setNewsError(response.data.error);\n        setNewsLoading(false);\n        return;\n      }\n      const fetchedNews = response.data.news || [];\n      console.log(\"Fetched News Count:\", fetchedNews.length); // 디버깅용 로그\n      setNewsList(fetchedNews);\n      setShowNews(true);\n    } catch (error) {\n      console.error(\"백엔드 뉴스 API 요청 오류:\", error);\n      setNewsError(\"뉴스 로딩 중 서버 오류가 발생했습니다.\");\n    } finally {\n      setNewsLoading(false);\n    }\n  };\n\n  // ---------------------------\n  // 7) JSX 반환\n  // ---------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 518,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 535,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 534,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 554,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 547,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 568,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 574,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 575,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 576,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 577,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\", \"부채비율\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 584,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"10px\",\n          color: \"#333\"\n        },\n        children: \"\\uC5F0\\uAC04 \\uC7AC\\uBB34\\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          flexWrap: \"wrap\",\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"매출액\"),\n          disabled: annualLoading && annualSelectedButton === \"매출액\",\n          children: annualLoading && annualSelectedButton === \"매출액\" ? \"매출액 로딩 중...\" : \"매출액\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 607,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"영업이익\"),\n          disabled: annualLoading && annualSelectedButton === \"영업이익\",\n          children: annualLoading && annualSelectedButton === \"영업이익\" ? \"영업이익 로딩 중...\" : \"영업이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 615,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"영업이익률\"),\n          disabled: annualLoading && annualSelectedButton === \"영업이익률\",\n          children: annualLoading && annualSelectedButton === \"영업이익률\" ? \"영업이익률 로딩 중...\" : \"영업이익률\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"순이익\"),\n          disabled: annualLoading && annualSelectedButton === \"순이익\",\n          children: annualLoading && annualSelectedButton === \"순이익\" ? \"순이익 로딩 중...\" : \"순이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 631,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"부채비율\"),\n          disabled: annualLoading && annualSelectedButton === \"부채비율\",\n          children: annualLoading && annualSelectedButton === \"부채비율\" ? \"부채비율 로딩 중...\" : \"부채비율\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 21\n      }, this), annualLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC5F0\\uAC04 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 39\n      }, this), annualError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: annualError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 37\n      }, this), annualData && annualData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-data-chart\",\n        ref: annualChartRef,\n        style: {\n          marginBottom: \"30px\",\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: annualChartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: `${(highlightedStock === null || highlightedStock === void 0 ? void 0 : highlightedStock.종목명) || \"\"} 연간 ${annualSelectedButton}`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: false,\n                ticks: {\n                  callback: function (value) {\n                    if (isPercentage(annualSelectedButton)) {\n                      return value.toFixed(1) + \"%\";\n                    }\n                    return value.toLocaleString() + \"억\";\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 660,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 655,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), stocks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"10px\",\n          color: \"#333\"\n        },\n        children: \"\\uBD84\\uAE30\\uBCC4 \\uC7AC\\uBB34\\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 695,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          flexWrap: \"wrap\",\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"매출액\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"매출액\",\n          children: quarterlyLoading && quarterlySelectedButton === \"매출액\" ? \"매출액 로딩 중...\" : \"매출액\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"영업이익\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"영업이익\",\n          children: quarterlyLoading && quarterlySelectedButton === \"영업이익\" ? \"영업이익 로딩 중...\" : \"영업이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"영업이익률\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"영업이익률\",\n          children: quarterlyLoading && quarterlySelectedButton === \"영업이익률\" ? \"영업이익률 로딩 중...\" : \"영업이익률\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 715,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"순이익\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"순이익\",\n          children: quarterlyLoading && quarterlySelectedButton === \"순이익\" ? \"순이익 로딩 중...\" : \"순이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"부채비율\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"부채비율\",\n          children: quarterlyLoading && quarterlySelectedButton === \"부채비율\" ? \"부채비율 로딩 중...\" : \"부채비율\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 731,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 21\n      }, this), quarterlyLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBD84\\uAE30\\uBCC4 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 742,\n        columnNumber: 42\n      }, this), quarterlyError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: quarterlyError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 743,\n        columnNumber: 40\n      }, this), quarterlyData && quarterlyData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-data-chart\",\n        ref: quarterlyChartRef,\n        style: {\n          marginBottom: \"30px\",\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: quarterlyChartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: `${(highlightedStock === null || highlightedStock === void 0 ? void 0 : highlightedStock.종목명) || \"\"} 분기별 ${quarterlySelectedButton}`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: false,\n                ticks: {\n                  callback: function (value) {\n                    if (isPercentage(quarterlySelectedButton)) {\n                      return value.toFixed(1) + \"%\";\n                    }\n                    return value.toLocaleString() + \"억\";\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 752,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"30px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uCD5C\\uC2E0 \\uB274\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 789,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchLatestNews,\n        disabled: newsLoading,\n        children: newsLoading ? \"뉴스 로딩 중...\" : \"최신 뉴스 가져오기\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 790,\n        columnNumber: 21\n      }, this), newsError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: newsError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 793,\n        columnNumber: 35\n      }, this), showNews && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          marginTop: \"10px\"\n        },\n        children: [\"\\uCD1D \", newsList.length, \"\\uAC1C\\uC758 \\uB274\\uC2A4 \\uAE30\\uC0AC\\uB97C \\uAC00\\uC838\\uC654\\uC2B5\\uB2C8\\uB2E4.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 25\n      }, this), showNews && newsList.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          marginTop: \"10px\",\n          maxHeight: \"600px\",\n          overflowY: \"auto\"\n        },\n        children: newsList.map((news, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            marginBottom: \"6px\",\n            color: news.read ? \"gray\" : \"#007bff\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            // 1) 새 탭으로 열기\n            window.open(news.link, \"_blank\", \"noopener,noreferrer\");\n\n            // 2) 읽은 상태로 표시\n            setNewsList(prevList => {\n              const newList = [...prevList];\n              newList[index] = {\n                ...newList[index],\n                read: true\n              };\n              return newList;\n            });\n          },\n          children: news.title\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 806,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 804,\n        columnNumber: 25\n      }, this), showNews && newsList.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB274\\uC2A4\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 59\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 788,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 517,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"Uga/v+9DIDpg1efHXKEfiRfPihw=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","StockTable","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","annualData","setAnnualData","annualLoading","setAnnualLoading","annualError","setAnnualError","annualSelectedButton","setAnnualSelectedButton","quarterlyData","setQuarterlyData","quarterlyLoading","setQuarterlyLoading","quarterlyError","setQuarterlyError","quarterlySelectedButton","setQuarterlySelectedButton","quarterLabelMap","annualChartRef","quarterlyChartRef","newsList","setNewsList","newsError","setNewsError","newsLoading","setNewsLoading","showNews","setShowNews","cleanValue","value","replace","undefined","isPercentage","buttonName","percentageButtons","includes","fetchData","searchQuery","trim","get","params","then","response","data","length","mappedData","map","stock","매출액","영업이익","영업이익률","시가배당률","부채비율","catch","console","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockCode","toString","stockName","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","handleAnnualButtonClick","warn","endpoint","stock_name","annual_sales","operating_profit","operating_income_rate","net_income","debt_ratio","handleQuarterlyButtonClick","quarterly_sales","quarterly_operating_profit","quarterly_operating_income_rate","quarterly_net_income","quarterly_debt_ratio","scrollIntoView","behavior","block","annualChartData","labels","item","연도","label","datasets","backgroundColor","borderColor","borderWidth","quarterlyChartData","분기","fetchLatestNews","fetchedNews","news","log","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","gap","flexWrap","disabled","height","options","responsive","maintainAspectRatio","plugins","legend","title","종목명","scales","y","beginAtZero","ticks","callback","toFixed","toLocaleString","maxHeight","overflowY","read","window","open","link","prevList","newList","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stockter/front/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\"; // 자동 등록\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // ========== (1) 연간 데이터 관련 상태 ==========\r\n    const [annualData, setAnnualData] = useState([]);                // 연간 데이터 배열\r\n    const [annualLoading, setAnnualLoading] = useState(false);       // 연간 데이터 로딩 상태\r\n    const [annualError, setAnnualError] = useState(\"\");              // 연간 데이터 오류 메시지\r\n    const [annualSelectedButton, setAnnualSelectedButton] = useState(\"\"); // 현재 선택된 연간 버튼\r\n\r\n    // ========== (2) 분기 데이터 관련 상태 ==========\r\n    const [quarterlyData, setQuarterlyData] = useState([]);          // 분기별 데이터 배열\r\n    const [quarterlyLoading, setQuarterlyLoading] = useState(false); // 분기 데이터 로딩 상태\r\n    const [quarterlyError, setQuarterlyError] = useState(\"\");        // 분기 데이터 오류 메시지\r\n    const [quarterlySelectedButton, setQuarterlySelectedButton] = useState(\"\"); // 현재 선택된 분기 버튼\r\n\r\n    // 분기 라벨 매핑 객체 (예시: 필요시 수정)\r\n    const quarterLabelMap = {\r\n        \"2023.Q1\": \"2023-Q1\",\r\n        \"2023.Q2\": \"2023-Q2\",\r\n        \"2023.Q3\": \"2023-Q3\",\r\n        \"2023.Q4\": \"2023-Q4\",\r\n    };\r\n\r\n    // 각각의 차트에 대한 ref (스크롤 용도)\r\n    const annualChartRef = useRef(null);\r\n    const quarterlyChartRef = useRef(null);\r\n\r\n    // ---------------------------\r\n    // (추가) 뉴스 관련 상태\r\n    // ---------------------------\r\n    const [newsList, setNewsList] = useState([]);      // 뉴스 기사 목록\r\n    const [newsError, setNewsError] = useState(\"\");    // 뉴스 관련 에러메시지\r\n    const [newsLoading, setNewsLoading] = useState(false); // 뉴스 로딩 상태\r\n    const [showNews, setShowNews] = useState(false);   // 뉴스 목록 표시 여부\r\n\r\n    // 공백/쉼표 제거\r\n    const cleanValue = (value) => {\r\n        if (typeof value === \"string\") {\r\n            return value.replace(/[\\s,]+/g, \"\");\r\n        }\r\n        if (value === null || value === undefined) {\r\n            return \"N/A\";\r\n        }\r\n        return value;\r\n    };\r\n\r\n    // 퍼센트 단위인지 확인하는 함수\r\n    const isPercentage = (buttonName) => {\r\n        const percentageButtons = [\"영업이익률\", \"부채비율\"];\r\n        return percentageButtons.includes(buttonName);\r\n    };\r\n\r\n    // ---------------------------\r\n    // 1) 검색 함수\r\n    // ---------------------------\r\n    const fetchData = useCallback(\r\n        (searchQuery = query) => {\r\n            if (!searchQuery.trim()) {\r\n                setError(\"검색어를 입력하세요.\");\r\n                return;\r\n            }\r\n            setError(\"\");\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\r\n                    params: { query: searchQuery },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"검색 결과가 없습니다.\");\r\n                        setStocks([]);\r\n                        setHighlightedStock(null);\r\n                    } else {\r\n                        const mappedData = response.data.stocks.map((stock) => ({\r\n                            ...stock,\r\n                            매출액: cleanValue(stock[\"매출액\"]),\r\n                            영업이익: cleanValue(stock[\"영업이익\"]),\r\n                            영업이익률: cleanValue(stock[\"영업이익률\"]),\r\n                            시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\r\n                            부채비율: cleanValue(stock[\"부채비율\"]),\r\n                        }));\r\n\r\n                        setStocks(mappedData);\r\n                        setHighlightedStock(mappedData[0] || null);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 오류:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                });\r\n        },\r\n        [query]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 2) 자동완성 로직\r\n    // ---------------------------\r\n    const handleQueryChange = useCallback((e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\r\n                    params: { query: input },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 입력값으로 시작하는 종목 우선 정렬\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 최대 10개까지만\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const handleSuggestionClick = useCallback(\r\n        (stock) => {\r\n            setQuery(stock[\"종목명\"]);\r\n            setIsDropdownOpen(false);\r\n            setHighlightedStock(stock);\r\n            fetchData(stock[\"종목명\"]);\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    const handleKeyPress = useCallback(\r\n        (e) => {\r\n            if (e.key === \"Enter\") {\r\n                fetchData();\r\n                setIsDropdownOpen(false);\r\n            }\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 3) 기타 이벤트 (리셋 등)\r\n    // ---------------------------\r\n    const resetState = useCallback(() => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n\r\n        // 연간 / 분기 데이터도 모두 초기화\r\n        setAnnualData([]);\r\n        setAnnualLoading(false);\r\n        setAnnualError(\"\");\r\n        setAnnualSelectedButton(\"\");\r\n\r\n        setQuarterlyData([]);\r\n        setQuarterlyLoading(false);\r\n        setQuarterlyError(\"\");\r\n        setQuarterlySelectedButton(\"\");\r\n\r\n        // 뉴스 관련도 초기화\r\n        setNewsList([]);\r\n        setNewsError(\"\");\r\n        setNewsLoading(false);\r\n        setShowNews(false);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = useCallback((text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    }, []);\r\n\r\n    // ---------------------------\r\n    // 4) 연간 재무데이터 버튼 핸들러\r\n    // ---------------------------\r\n    const handleAnnualButtonClick = useCallback(\r\n        async (buttonName) => {\r\n            if (annualLoading) {\r\n                console.warn(\"연간 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\r\n                return;\r\n            }\r\n\r\n            if (!highlightedStock) {\r\n                setAnnualError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\r\n                return;\r\n            }\r\n\r\n            setAnnualLoading(true);\r\n            setAnnualError(\"\");\r\n            setAnnualData([]);\r\n            setAnnualSelectedButton(buttonName);\r\n\r\n            // 엔드포인트 결정\r\n            let endpoint = \"\";\r\n            if (buttonName === \"매출액\") {\r\n                endpoint = \"financial-annual-sales\";\r\n            } else if (buttonName === \"영업이익\") {\r\n                endpoint = \"financial-operating-profit\";\r\n            } else if (buttonName === \"영업이익률\") {\r\n                endpoint = \"financial-operating-income-rate\";\r\n            } else if (buttonName === \"순이익\") {\r\n                endpoint = \"financial-net-income\";\r\n            } else if (buttonName === \"부채비율\") {\r\n                endpoint = \"financial-debt-ratio\";\r\n            } else {\r\n                console.warn(\"지원되지 않는 버튼입니다(연간).\");\r\n                setAnnualLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`,\r\n                    { params: { stock_name: highlightedStock[\"종목명\"] } }\r\n                );\r\n\r\n                let data = null;\r\n                if (buttonName === \"매출액\" && response.data.annual_sales) {\r\n                    data = response.data.annual_sales;\r\n                } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\r\n                    data = response.data.operating_profit;\r\n                } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\r\n                    data = response.data.operating_income_rate;\r\n                } else if (buttonName === \"순이익\" && response.data.net_income) {\r\n                    data = response.data.net_income;\r\n                } else if (buttonName === \"부채비율\" && response.data.debt_ratio) {\r\n                    data = response.data.debt_ratio;\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    setAnnualData(data);\r\n                } else {\r\n                    setAnnualError(`${buttonName} 데이터가 없습니다.`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"연간 데이터 로드 오류:\", error);\r\n                setAnnualError(`${buttonName} 데이터를 가져오는 중 오류가 발생했습니다.`);\r\n            } finally {\r\n                setAnnualLoading(false);\r\n            }\r\n        },\r\n        [highlightedStock, annualLoading]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 5) 분기별 재무데이터 버튼 핸들러\r\n    // ---------------------------\r\n    const handleQuarterlyButtonClick = useCallback(\r\n        async (buttonName) => {\r\n            if (quarterlyLoading) {\r\n                console.warn(\"분기별 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\r\n                return;\r\n            }\r\n\r\n            if (!highlightedStock) {\r\n                setQuarterlyError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\r\n                return;\r\n            }\r\n\r\n            setQuarterlyLoading(true);\r\n            setQuarterlyError(\"\");\r\n            setQuarterlyData([]);\r\n            setQuarterlySelectedButton(buttonName);\r\n\r\n            // 엔드포인트 결정 (분기별)\r\n            let endpoint = \"\";\r\n            if (buttonName === \"매출액\") {\r\n                endpoint = \"financial-quarterly-sales\";\r\n            } else if (buttonName === \"영업이익\") {\r\n                endpoint = \"financial-quarterly-operating-profit\";\r\n            } else if (buttonName === \"영업이익률\") {\r\n                endpoint = \"financial-quarterly-operating-income-rate\";\r\n            } else if (buttonName === \"순이익\") {\r\n                endpoint = \"financial-quarterly-net-income\";\r\n            } else if (buttonName === \"부채비율\") {\r\n                endpoint = \"financial-quarterly-debt-ratio\";\r\n            } else {\r\n                console.warn(\"지원되지 않는 버튼입니다(분기).\");\r\n                setQuarterlyLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`,\r\n                    { params: { stock_name: highlightedStock[\"종목명\"] } }\r\n                );\r\n\r\n                let data = null;\r\n                if (buttonName === \"매출액\" && response.data.quarterly_sales) {\r\n                    data = response.data.quarterly_sales;\r\n                } else if (buttonName === \"영업이익\" && response.data.quarterly_operating_profit) {\r\n                    data = response.data.quarterly_operating_profit;\r\n                } else if (buttonName === \"영업이익률\" && response.data.quarterly_operating_income_rate) {\r\n                    data = response.data.quarterly_operating_income_rate;\r\n                } else if (buttonName === \"순이익\" && response.data.quarterly_net_income) {\r\n                    data = response.data.quarterly_net_income;\r\n                } else if (buttonName === \"부채비율\" && response.data.quarterly_debt_ratio) {\r\n                    data = response.data.quarterly_debt_ratio;\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    setQuarterlyData(data);\r\n                } else {\r\n                    setQuarterlyError(`${buttonName} 분기별 데이터가 없습니다.`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"분기별 데이터 로드 오류:\", error);\r\n                setQuarterlyError(`${buttonName} 분기별 데이터를 가져오는 중 오류가 발생했습니다.`);\r\n            } finally {\r\n                setQuarterlyLoading(false);\r\n            }\r\n        },\r\n        [highlightedStock, quarterlyLoading]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 6) 자동 스크롤 useEffect (연간/분기)\r\n    // ---------------------------\r\n    useEffect(() => {\r\n        if (annualData.length > 0 && annualChartRef.current) {\r\n            annualChartRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n    }, [annualData]);\r\n\r\n    useEffect(() => {\r\n        if (quarterlyData.length > 0 && quarterlyChartRef.current) {\r\n            quarterlyChartRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n    }, [quarterlyData]);\r\n\r\n    // ---------------------------\r\n    // (A) 연간 차트 데이터 구성\r\n    // ---------------------------\r\n    const annualChartData = {\r\n        labels: annualData.map((item) => item.연도 || item.label || \"N/A\"),\r\n        datasets: [\r\n            {\r\n                label: isPercentage(annualSelectedButton)\r\n                    ? `${annualSelectedButton} (%)`\r\n                    : `${annualSelectedButton} (억)`,\r\n                data: annualData.map((item) => item[annualSelectedButton]),\r\n                backgroundColor:\r\n                    annualSelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 0.6)\"\r\n                        : annualSelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 0.6)\"\r\n                        : annualSelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 0.6)\"\r\n                        : annualSelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 0.6)\"\r\n                        : annualSelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 0.6)\"\r\n                        : \"rgba(75, 192, 192, 0.6)\",\r\n                borderColor:\r\n                    annualSelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 1)\"\r\n                        : annualSelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 1)\"\r\n                        : annualSelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 1)\"\r\n                        : annualSelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 1)\"\r\n                        : annualSelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 1)\"\r\n                        : \"rgba(75, 192, 192, 1)\",\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // ---------------------------\r\n    // (B) 분기 차트 데이터 구성\r\n    // ---------------------------\r\n    const quarterlyChartData = {\r\n        labels: quarterlyData.map((item) => item.분기 || item.label || \"N/A\"),\r\n        datasets: [\r\n            {\r\n                label: isPercentage(quarterlySelectedButton)\r\n                    ? `${quarterlySelectedButton} (%)`\r\n                    : `${quarterlySelectedButton} (억)`,\r\n                data: quarterlyData.map((item) => item[quarterlySelectedButton]),\r\n                backgroundColor:\r\n                    quarterlySelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 0.6)\"\r\n                        : quarterlySelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 0.6)\"\r\n                        : quarterlySelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 0.6)\"\r\n                        : quarterlySelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 0.6)\"\r\n                        : quarterlySelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 0.6)\"\r\n                        : \"rgba(75, 192, 192, 0.6)\",\r\n                borderColor:\r\n                    quarterlySelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 1)\"\r\n                        : quarterlySelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 1)\"\r\n                        : quarterlySelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 1)\"\r\n                        : quarterlySelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 1)\"\r\n                        : quarterlySelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 1)\"\r\n                        : \"rgba(75, 192, 192, 1)\",\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // ---------------------------\r\n    // (C) 최신 뉴스 가져오기 함수\r\n    // ---------------------------\r\n\r\n    const fetchLatestNews = async () => {\r\n        if (!highlightedStock) {\r\n            setNewsError(\"종목을 먼저 검색/선택해주세요.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            setNewsLoading(true);\r\n            setNewsError(\"\");\r\n            setNewsList([]);\r\n            setShowNews(false);\r\n\r\n            // 백엔드 주소: 배포된 URL로 변경 (예시)\r\n            const response = await axios.get(\r\n                \"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/news\",\r\n                { params: { stock_name: highlightedStock[\"종목명\"] } }\r\n            );\r\n\r\n            if (response.data.error) {\r\n                setNewsError(response.data.error);\r\n                setNewsLoading(false);\r\n                return;\r\n            }\r\n\r\n            const fetchedNews = response.data.news || [];\r\n            console.log(\"Fetched News Count:\", fetchedNews.length); // 디버깅용 로그\r\n            setNewsList(fetchedNews);\r\n            setShowNews(true);\r\n        } catch (error) {\r\n            console.error(\"백엔드 뉴스 API 요청 오류:\", error);\r\n            setNewsError(\"뉴스 로딩 중 서버 오류가 발생했습니다.\");\r\n        } finally {\r\n            setNewsLoading(false);\r\n        }\r\n    };\r\n\r\n    // ---------------------------\r\n    // 7) JSX 반환\r\n    // ---------------------------\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2\r\n                onClick={resetState}\r\n                style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}\r\n            >\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    maxWidth: \"600px\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 기본 주가 정보 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                        \"부채비율\",\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {/* ========== (A) 연간 재무데이터 영역 ========== */}\r\n            {stocks.length > 0 && (\r\n                <>\r\n                    <h3 style={{ marginTop: \"30px\", marginBottom: \"10px\", color: \"#333\" }}>\r\n                        연간 재무데이터\r\n                    </h3>\r\n                    <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", marginBottom: \"20px\" }}>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"매출액\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"매출액\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"매출액\"\r\n                                ? \"매출액 로딩 중...\"\r\n                                : \"매출액\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"영업이익\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"영업이익\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"영업이익\"\r\n                                ? \"영업이익 로딩 중...\"\r\n                                : \"영업이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"영업이익률\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"영업이익률\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"영업이익률\"\r\n                                ? \"영업이익률 로딩 중...\"\r\n                                : \"영업이익률\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"순이익\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"순이익\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"순이익\"\r\n                                ? \"순이익 로딩 중...\"\r\n                                : \"순이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"부채비율\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"부채비율\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"부채비율\"\r\n                                ? \"부채비율 로딩 중...\"\r\n                                : \"부채비율\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* 연간 데이터 로딩/오류 메시지 */}\r\n                    {annualLoading && <p>연간 데이터를 로드 중입니다...</p>}\r\n                    {annualError && <p className=\"error-message\">{annualError}</p>}\r\n\r\n                    {/* 연간 차트 */}\r\n                    {annualData && annualData.length > 0 && (\r\n                        <div\r\n                            className=\"financial-data-chart\"\r\n                            ref={annualChartRef}\r\n                            style={{ marginBottom: \"30px\", height: \"400px\" }}\r\n                        >\r\n                            <Bar\r\n                                data={annualChartData}\r\n                                options={{\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    plugins: {\r\n                                        legend: { position: \"top\" },\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: `${highlightedStock?.종목명 || \"\"} 연간 ${annualSelectedButton}`,\r\n                                        },\r\n                                    },\r\n                                    scales: {\r\n                                        y: {\r\n                                            beginAtZero: false,\r\n                                            ticks: {\r\n                                                callback: function (value) {\r\n                                                    if (isPercentage(annualSelectedButton)) {\r\n                                                        return value.toFixed(1) + \"%\";\r\n                                                    }\r\n                                                    return value.toLocaleString() + \"억\";\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {/* ========== (B) 분기별 재무데이터 영역 ========== */}\r\n            {stocks.length > 0 && (\r\n                <>\r\n                    <h3 style={{ marginTop: \"30px\", marginBottom: \"10px\", color: \"#333\" }}>\r\n                        분기별 재무데이터\r\n                    </h3>\r\n                    <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", marginBottom: \"20px\" }}>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"매출액\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"매출액\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"매출액\"\r\n                                ? \"매출액 로딩 중...\"\r\n                                : \"매출액\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"영업이익\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"영업이익\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"영업이익\"\r\n                                ? \"영업이익 로딩 중...\"\r\n                                : \"영업이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"영업이익률\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"영업이익률\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"영업이익률\"\r\n                                ? \"영업이익률 로딩 중...\"\r\n                                : \"영업이익률\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"순이익\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"순이익\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"순이익\"\r\n                                ? \"순이익 로딩 중...\"\r\n                                : \"순이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"부채비율\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"부채비율\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"부채비율\"\r\n                                ? \"부채비율 로딩 중...\"\r\n                                : \"부채비율\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* 분기별 데이터 로딩/오류 메시지 */}\r\n                    {quarterlyLoading && <p>분기별 데이터를 로드 중입니다...</p>}\r\n                    {quarterlyError && <p className=\"error-message\">{quarterlyError}</p>}\r\n\r\n                    {/* 분기별 차트 */}\r\n                    {quarterlyData && quarterlyData.length > 0 && (\r\n                        <div\r\n                            className=\"financial-data-chart\"\r\n                            ref={quarterlyChartRef}\r\n                            style={{ marginBottom: \"30px\", height: \"400px\" }}\r\n                        >\r\n                            <Bar\r\n                                data={quarterlyChartData}\r\n                                options={{\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    plugins: {\r\n                                        legend: { position: \"top\" },\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: `${highlightedStock?.종목명 || \"\"} 분기별 ${quarterlySelectedButton}`,\r\n                                        },\r\n                                    },\r\n                                    scales: {\r\n                                        y: {\r\n                                            beginAtZero: false,\r\n                                            ticks: {\r\n                                                callback: function (value) {\r\n                                                    if (isPercentage(quarterlySelectedButton)) {\r\n                                                        return value.toFixed(1) + \"%\";\r\n                                                    }\r\n                                                    return value.toLocaleString() + \"억\";\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {/* =========================\r\n                (C) 최신 뉴스 영역\r\n                ========================= */}\r\n            {highlightedStock && (\r\n                <div style={{ marginTop: \"30px\" }}>\r\n                    <h3>최신 뉴스</h3>\r\n                    <button onClick={fetchLatestNews} disabled={newsLoading}>\r\n                        {newsLoading ? \"뉴스 로딩 중...\" : \"최신 뉴스 가져오기\"}\r\n                    </button>\r\n                    {newsError && <p className=\"error-message\">{newsError}</p>}\r\n\r\n                    {/* 뉴스 개수 표시 */}\r\n                    {showNews && (\r\n                        <p style={{ marginTop: \"10px\" }}>\r\n                            총 {newsList.length}개의 뉴스 기사를 가져왔습니다.\r\n                        </p>\r\n                    )}\r\n\r\n                    {/* 뉴스 목록 */}\r\n                    {showNews && newsList.length > 0 && (\r\n                        <ul style={{ marginTop: \"10px\", maxHeight: \"600px\", overflowY: \"auto\" }}>\r\n                            {newsList.map((news, index) => (\r\n                                <li\r\n                                    key={index}\r\n                                    style={{\r\n                                        marginBottom: \"6px\",\r\n                                        color: news.read ? \"gray\" : \"#007bff\",\r\n                                        cursor: \"pointer\",\r\n                                    }}\r\n                                    onClick={() => {\r\n                                        // 1) 새 탭으로 열기\r\n                                        window.open(news.link, \"_blank\", \"noopener,noreferrer\");\r\n\r\n                                        // 2) 읽은 상태로 표시\r\n                                        setNewsList((prevList) => {\r\n                                            const newList = [...prevList];\r\n                                            newList[index] = {\r\n                                                ...newList[index],\r\n                                                read: true,\r\n                                            };\r\n                                            return newList;\r\n                                        });\r\n                                    }}\r\n                                >\r\n                                    {news.title}\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n\r\n                    {/* 뉴스 데이터가 부족할 때 사용자에게 알리기 */}\r\n                    {showNews && newsList.length === 0 && <p>뉴스가 없습니다.</p>}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}