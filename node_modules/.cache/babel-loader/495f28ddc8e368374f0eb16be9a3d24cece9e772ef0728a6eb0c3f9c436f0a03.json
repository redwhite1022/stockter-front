{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 매출액 데이터 상태\n  const [annualSales, setAnnualSales] = useState(null);\n  const [loadingSales, setLoadingSales] = useState(false);\n  const [salesError, setSalesError] = useState(\"\");\n\n  // ---------------------------\n  // 1) 검색 함수\n  // ---------------------------\n  const fetchData = (searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    setAnnualSales(null); // 매출액 데이터 초기화\n    setSalesError(\"\");\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      console.log(\"검색 API 응답 데이터:\", response.data); // 응답 데이터 확인\n      if (response.data.error || response.data.stocks.length === 0) {\n        // 검색 결과가 없을 때\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n        setHighlightedStock(null);\n      } else {\n        // 검색 결과가 있을 때\n        const rawData = response.data.stocks;\n\n        // 데이터 매핑 및 결측값 처리\n        const cleanValue = value => {\n          if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\n          return value.toString().replace(/,/g, \"\"); // 쉼표 제거\n        };\n        const mappedData = rawData.map(stock => ({\n          ...stock,\n          sales: cleanValue(stock[\"매출액\"]) || \"N/A\",\n          operatingProfit: cleanValue(stock[\"영업이익\"]) || \"N/A\",\n          operatingMargin: cleanValue(stock[\"영업이익률\"]) || \"N/A\",\n          dividendYield: cleanValue(stock[\"시가배당률(%)\"]) || \"N/A\",\n          eps: cleanValue(stock[\"2021.12 EPS(원)\"]) || cleanValue(stock[\"2022.12 EPS(원)\"]) || cleanValue(stock[\"2023.12 EPS(원)\"]) || cleanValue(stock[\"2024.12 EPS(원)\"]),\n          per: cleanValue(stock[\"2021.12 PER(배)\"]) || cleanValue(stock[\"2022.12 PER(배)\"]) || cleanValue(stock[\"2023.12 PER(배)\"]) || cleanValue(stock[\"2024.12 PER(배)\"]),\n          pbr: cleanValue(stock[\"2021.12 PBR(배)\"]) || cleanValue(stock[\"2022.12 PBR(배)\"]) || cleanValue(stock[\"2023.12 PBR(배)\"]) || cleanValue(stock[\"2024.12 PBR(배)\"]),\n          dividendPerShare: cleanValue(stock[\"2021.12 주당배당금(원)\"]) || cleanValue(stock[\"2022.12 주당배당금(원)\"]) || cleanValue(stock[\"2023.12 주당배당금(원)\"]) || cleanValue(stock[\"2024.12 주당배당금(원)\"])\n        }));\n        setStocks(mappedData);\n\n        // (1) 첫 번째 종목 자동 선택\n        if (mappedData.length > 0) {\n          setHighlightedStock(mappedData[0]);\n        } else {\n          setHighlightedStock(null);\n        }\n        setError(\"\");\n\n        // 디버깅용\n        console.log(\"매핑된 데이터:\", mappedData); // 매핑된 데이터 확인\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n      setHighlightedStock(null);\n    });\n  };\n\n  // ---------------------------\n  // 2) 자동완성 로직\n  // ---------------------------\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n\n          // 입력값으로 시작하는 종목 우선 정렬\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n\n          // 최대 10개까지만\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    setHighlightedStock(stock);\n    fetchData(stock[\"종목명\"]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // ---------------------------\n  // 3) 기타 이벤트\n  // ---------------------------\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n    setAnnualSales(null);\n    setSalesError(\"\");\n  };\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n\n  // ---------------------------\n  // 4) 매출액 등 버튼 핸들러\n  // ---------------------------\n  const handleButtonClick = async buttonName => {\n    console.log(`${buttonName} 버튼이 클릭되었습니다.`);\n    if (buttonName === '매출액') {\n      if (!highlightedStock || !highlightedStock[\"종목코드\"]) {\n        setSalesError(\"종목을 먼저 선택하세요.\");\n        return;\n      }\n      setLoadingSales(true);\n      setSalesError(\"\");\n      setAnnualSales(null);\n      try {\n        // /annual-sales?stock_code=XXXXX\n        const response = await axios.get(\"http://127.0.0.1:8000/annual-sales\", {\n          params: {\n            stock_code: highlightedStock[\"종목코드\"]\n          }\n        });\n        setAnnualSales(response.data.annual_sales);\n      } catch (error) {\n        console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\n        setSalesError(\"매출액 데이터를 가져오는 중 오류가 발생했습니다.\");\n      } finally {\n        setLoadingSales(false);\n      }\n    }\n\n    // 다른 버튼 로직은 추후 추가 가능\n  };\n\n  // ---------------------------\n  // 5) JSX 반환\n  // ---------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 279,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-buttons\",\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('매출액'),\n        children: \"\\uB9E4\\uCD9C\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('영업이익'),\n        children: \"\\uC601\\uC5C5\\uC774\\uC775\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('영업이익률'),\n        children: \"\\uC601\\uC5C5\\uC774\\uC775\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('시가배당률'),\n        children: \"\\uC2DC\\uAC00\\uBC30\\uB2F9\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }, this), loadingSales && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB9E4\\uCD9C\\uC561 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 30\n    }, this), salesError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: salesError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 28\n    }, this), annualSales && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annual-sales\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5F0\\uAC04 \\uB9E4\\uCD9C\\uC561 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC5F0\\uB3C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uB9E4\\uCD9C\\uC561\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 342,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: annualSales.map((yearData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: yearData.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 348,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [yearData.sales.toLocaleString(), \" \\uC6D0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 350,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 347,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 244,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"LT7pSJM5n4i5IYrf70l6cG+Nk0k=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","StockTable","jsxDEV","_jsxDEV","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","annualSales","setAnnualSales","loadingSales","setLoadingSales","salesError","setSalesError","fetchData","searchQuery","trim","get","params","then","response","console","log","data","length","rawData","cleanValue","value","toString","replace","mappedData","map","stock","sales","operatingProfit","operatingMargin","dividendYield","eps","per","pbr","dividendPerShare","catch","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockCode","stockName","includes","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","handleButtonClick","buttonName","stock_code","annual_sales","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","gap","flexWrap","yearData","year","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 매출액 데이터 상태\r\n    const [annualSales, setAnnualSales] = useState(null);\r\n    const [loadingSales, setLoadingSales] = useState(false);\r\n    const [salesError, setSalesError] = useState(\"\");\r\n\r\n    // ---------------------------\r\n    // 1) 검색 함수\r\n    // ---------------------------\r\n    const fetchData = (searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n        setAnnualSales(null); // 매출액 데이터 초기화\r\n        setSalesError(\"\");\r\n    \r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                console.log(\"검색 API 응답 데이터:\", response.data); // 응답 데이터 확인\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    // 검색 결과가 없을 때\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                    setHighlightedStock(null);\r\n                } else {\r\n                    // 검색 결과가 있을 때\r\n                    const rawData = response.data.stocks;\r\n    \r\n                    // 데이터 매핑 및 결측값 처리\r\n                    const cleanValue = (value) => {\r\n                        if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\r\n                        return value.toString().replace(/,/g, \"\"); // 쉼표 제거\r\n                    };\r\n    \r\n                    const mappedData = rawData.map((stock) => ({\r\n                        ...stock,\r\n                        sales: cleanValue(stock[\"매출액\"]) || \"N/A\",\r\n                        operatingProfit: cleanValue(stock[\"영업이익\"]) || \"N/A\",\r\n                        operatingMargin: cleanValue(stock[\"영업이익률\"]) || \"N/A\",\r\n                        dividendYield: cleanValue(stock[\"시가배당률(%)\"]) || \"N/A\",\r\n                        eps:\r\n                            cleanValue(stock[\"2021.12 EPS(원)\"]) ||\r\n                            cleanValue(stock[\"2022.12 EPS(원)\"]) ||\r\n                            cleanValue(stock[\"2023.12 EPS(원)\"]) ||\r\n                            cleanValue(stock[\"2024.12 EPS(원)\"]),\r\n                        per:\r\n                            cleanValue(stock[\"2021.12 PER(배)\"]) ||\r\n                            cleanValue(stock[\"2022.12 PER(배)\"]) ||\r\n                            cleanValue(stock[\"2023.12 PER(배)\"]) ||\r\n                            cleanValue(stock[\"2024.12 PER(배)\"]),\r\n                        pbr:\r\n                            cleanValue(stock[\"2021.12 PBR(배)\"]) ||\r\n                            cleanValue(stock[\"2022.12 PBR(배)\"]) ||\r\n                            cleanValue(stock[\"2023.12 PBR(배)\"]) ||\r\n                            cleanValue(stock[\"2024.12 PBR(배)\"]),\r\n                        dividendPerShare:\r\n                            cleanValue(stock[\"2021.12 주당배당금(원)\"]) ||\r\n                            cleanValue(stock[\"2022.12 주당배당금(원)\"]) ||\r\n                            cleanValue(stock[\"2023.12 주당배당금(원)\"]) ||\r\n                            cleanValue(stock[\"2024.12 주당배당금(원)\"]),\r\n                    }));\r\n    \r\n                    setStocks(mappedData);\r\n    \r\n                    // (1) 첫 번째 종목 자동 선택\r\n                    if (mappedData.length > 0) {\r\n                        setHighlightedStock(mappedData[0]);\r\n                    } else {\r\n                        setHighlightedStock(null);\r\n                    }\r\n    \r\n                    setError(\"\");\r\n    \r\n                    // 디버깅용\r\n                    console.log(\"매핑된 데이터:\", mappedData); // 매핑된 데이터 확인\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n                setHighlightedStock(null);\r\n            });\r\n    };\r\n    \r\n    // ---------------------------\r\n    // 2) 자동완성 로직\r\n    // ---------------------------\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 입력값으로 시작하는 종목 우선 정렬\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 최대 10개까지만\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(stock);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // ---------------------------\r\n    // 3) 기타 이벤트\r\n    // ---------------------------\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n        setAnnualSales(null);\r\n        setSalesError(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    };\r\n\r\n    // ---------------------------\r\n    // 4) 매출액 등 버튼 핸들러\r\n    // ---------------------------\r\n    const handleButtonClick = async (buttonName) => {\r\n        console.log(`${buttonName} 버튼이 클릭되었습니다.`);\r\n\r\n        if (buttonName === '매출액') {\r\n            \r\n\r\n            if (!highlightedStock || !highlightedStock[\"종목코드\"]) {\r\n                setSalesError(\"종목을 먼저 선택하세요.\");\r\n                return;\r\n            }\r\n\r\n            setLoadingSales(true);\r\n            setSalesError(\"\");\r\n            setAnnualSales(null);\r\n\r\n            try {\r\n                \r\n                // /annual-sales?stock_code=XXXXX\r\n                const response = await axios.get(\"http://127.0.0.1:8000/annual-sales\", {\r\n                    params: { stock_code: highlightedStock[\"종목코드\"] },\r\n                });\r\n                setAnnualSales(response.data.annual_sales);\r\n            } catch (error) {\r\n                console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\r\n                setSalesError(\"매출액 데이터를 가져오는 중 오류가 발생했습니다.\");\r\n            } finally {\r\n                setLoadingSales(false);\r\n            }\r\n        }\r\n\r\n        // 다른 버튼 로직은 추후 추가 가능\r\n    };\r\n\r\n    // ---------------------------\r\n    // 5) JSX 반환\r\n    // ---------------------------\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2\r\n                onClick={resetState}\r\n                style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}\r\n            >\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div style={{ position: \"relative\", width: \"100%\", maxWidth: \"600px\", marginBottom: \"20px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {/* 버튼들 */}\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    className=\"sort-buttons\"\r\n                    style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}\r\n                >\r\n                    <button onClick={() => handleButtonClick('매출액')}>매출액</button>\r\n                    <button onClick={() => handleButtonClick('영업이익')}>영업이익</button>\r\n                    <button onClick={() => handleButtonClick('영업이익률')}>영업이익률</button>\r\n                    <button onClick={() => handleButtonClick('시가배당률')}>시가배당률</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* 매출액 데이터 표시 */}\r\n            {loadingSales && <p>매출액 데이터를 로드 중입니다...</p>}\r\n            {salesError && <p className=\"error-message\">{salesError}</p>}\r\n            {annualSales && (\r\n                <div className=\"annual-sales\" style={{ marginTop: \"20px\" }}>\r\n                    <h3>연간 매출액 정보</h3>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>연도</th>\r\n                                <th>매출액</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {annualSales.map((yearData, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{yearData.year}</td>\r\n                                    {/* toLocaleString()로 3자리 콤마 표시 */}\r\n                                    <td>{yearData.sales.toLocaleString()} 원</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,sBAAsB;AAC7B,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACa,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAChE,MAAM,CAACe,cAAc,EAAEC,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,KAAK,EAAEC,QAAQ,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAMqB,WAAW,GAAGnB,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACwB,YAAY,EAAEC,eAAe,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA;EACA;EACA,MAAM4B,SAAS,GAAGA,CAACC,WAAW,GAAGlB,KAAK,KAAK;IACvC,IAAI,CAACkB,WAAW,CAACC,IAAI,CAAC,CAAC,EAAE;MACrBZ,QAAQ,CAAC,aAAa,CAAC;MACvB;IACJ;IACAA,QAAQ,CAAC,EAAE,CAAC;IACZF,iBAAiB,CAAC,EAAE,CAAC;IACrBI,iBAAiB,CAAC,KAAK,CAAC;IACxBG,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;IACtBI,aAAa,CAAC,EAAE,CAAC;IAEjBxB,KAAK,CACA4B,GAAG,CAAC,4BAA4B,EAAE;MAAEC,MAAM,EAAE;QAAErB,KAAK,EAAEkB;MAAY;IAAE,CAAC,CAAC,CACrEI,IAAI,CAAEC,QAAQ,IAAK;MAChBC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;MAC9C,IAAIH,QAAQ,CAACG,IAAI,CAACpB,KAAK,IAAIiB,QAAQ,CAACG,IAAI,CAAC5B,MAAM,CAAC6B,MAAM,KAAK,CAAC,EAAE;QAC1D;QACApB,QAAQ,CAAC,cAAc,CAAC;QACxBR,SAAS,CAAC,EAAE,CAAC;QACbI,mBAAmB,CAAC,IAAI,CAAC;MAC7B,CAAC,MAAM;QACH;QACA,MAAMyB,OAAO,GAAGL,QAAQ,CAACG,IAAI,CAAC5B,MAAM;;QAEpC;QACA,MAAM+B,UAAU,GAAIC,KAAK,IAAK;UAC1B,IAAI,CAACA,KAAK,IAAIA,KAAK,KAAK,GAAG,IAAIA,KAAK,KAAK,KAAK,EAAE,OAAO,KAAK;UAC5D,OAAOA,KAAK,CAACC,QAAQ,CAAC,CAAC,CAACC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;QAC/C,CAAC;QAED,MAAMC,UAAU,GAAGL,OAAO,CAACM,GAAG,CAAEC,KAAK,KAAM;UACvC,GAAGA,KAAK;UACRC,KAAK,EAAEP,UAAU,CAACM,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK;UACxCE,eAAe,EAAER,UAAU,CAACM,KAAK,CAAC,MAAM,CAAC,CAAC,IAAI,KAAK;UACnDG,eAAe,EAAET,UAAU,CAACM,KAAK,CAAC,OAAO,CAAC,CAAC,IAAI,KAAK;UACpDI,aAAa,EAAEV,UAAU,CAACM,KAAK,CAAC,UAAU,CAAC,CAAC,IAAI,KAAK;UACrDK,GAAG,EACCX,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC;UACvCM,GAAG,EACCZ,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC;UACvCO,GAAG,EACCb,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC,IACnCN,UAAU,CAACM,KAAK,CAAC,gBAAgB,CAAC,CAAC;UACvCQ,gBAAgB,EACZd,UAAU,CAACM,KAAK,CAAC,kBAAkB,CAAC,CAAC,IACrCN,UAAU,CAACM,KAAK,CAAC,kBAAkB,CAAC,CAAC,IACrCN,UAAU,CAACM,KAAK,CAAC,kBAAkB,CAAC,CAAC,IACrCN,UAAU,CAACM,KAAK,CAAC,kBAAkB,CAAC;QAC5C,CAAC,CAAC,CAAC;QAEHpC,SAAS,CAACkC,UAAU,CAAC;;QAErB;QACA,IAAIA,UAAU,CAACN,MAAM,GAAG,CAAC,EAAE;UACvBxB,mBAAmB,CAAC8B,UAAU,CAAC,CAAC,CAAC,CAAC;QACtC,CAAC,MAAM;UACH9B,mBAAmB,CAAC,IAAI,CAAC;QAC7B;QAEAI,QAAQ,CAAC,EAAE,CAAC;;QAEZ;QACAiB,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEQ,UAAU,CAAC,CAAC,CAAC;MACzC;IACJ,CAAC,CAAC,CACDW,KAAK,CAAEtC,KAAK,IAAK;MACdkB,OAAO,CAAClB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BR,SAAS,CAAC,EAAE,CAAC;MACbI,mBAAmB,CAAC,IAAI,CAAC;IAC7B,CAAC,CAAC;EACV,CAAC;;EAED;EACA;EACA;EACA,MAAM0C,iBAAiB,GAAIC,CAAC,IAAK;IAC7B,MAAMC,KAAK,GAAGD,CAAC,CAACE,MAAM,CAAClB,KAAK;IAC5B7B,QAAQ,CAAC8C,KAAK,CAAC;IAEf,IAAIA,KAAK,CAAC5B,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACrBd,iBAAiB,CAAC,EAAE,CAAC;MACrBI,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC,MAAM;MACHjB,KAAK,CACA4B,GAAG,CAAC,4BAA4B,EAAE;QAAEC,MAAM,EAAE;UAAErB,KAAK,EAAE+C;QAAM;MAAE,CAAC,CAAC,CAC/DzB,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACG,IAAI,CAAC5B,MAAM,EAAE;UACtB,MAAMmD,eAAe,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;UAC3C,MAAMC,QAAQ,GAAG5B,QAAQ,CAACG,IAAI,CAAC5B,MAAM,CAACsD,MAAM,CAAEjB,KAAK,IAAK;YACpD,MAAMkB,SAAS,GAAGlB,KAAK,CAAC,MAAM,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC;YACxD,MAAMI,SAAS,GAAGnB,KAAK,CAAC,KAAK,CAAC,CAACe,WAAW,CAAC,CAAC;YAC5C,OACIG,SAAS,CAACE,QAAQ,CAACN,eAAe,CAAC,IACnCK,SAAS,CAACC,QAAQ,CAACN,eAAe,CAAC;UAE3C,CAAC,CAAC;;UAEF;UACA,MAAMO,eAAe,GAAGL,QAAQ,CAACC,MAAM,CAAEjB,KAAK,IAAK;YAC/C,MAAMkB,SAAS,GAAGlB,KAAK,CAAC,MAAM,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC;YACxD,MAAMI,SAAS,GAAGnB,KAAK,CAAC,KAAK,CAAC,CAACe,WAAW,CAAC,CAAC;YAC5C,OACIG,SAAS,CAACI,UAAU,CAACR,eAAe,CAAC,IACrCK,SAAS,CAACG,UAAU,CAACR,eAAe,CAAC;UAE7C,CAAC,CAAC;UACF,MAAMS,MAAM,GAAGP,QAAQ,CAACC,MAAM,CAAEjB,KAAK,IAAK;YACtC,MAAMkB,SAAS,GAAGlB,KAAK,CAAC,MAAM,CAAC,CAACJ,QAAQ,CAAC,CAAC,CAACmB,WAAW,CAAC,CAAC;YACxD,MAAMI,SAAS,GAAGnB,KAAK,CAAC,KAAK,CAAC,CAACe,WAAW,CAAC,CAAC;YAC5C,OACI,CAACG,SAAS,CAACI,UAAU,CAACR,eAAe,CAAC,IACtC,CAACK,SAAS,CAACG,UAAU,CAACR,eAAe,CAAC;UAE9C,CAAC,CAAC;;UAEF;UACA5C,iBAAiB,CAAC,CAAC,GAAGmD,eAAe,EAAE,GAAGE,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAC/DlD,iBAAiB,CAAC,IAAI,CAAC;QAC3B;MACJ,CAAC,CAAC,CACDmC,KAAK,CAAEtC,KAAK,IAAK;QACdkB,OAAO,CAAClB,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ,CAAC;EAED,MAAMsD,qBAAqB,GAAIzB,KAAK,IAAK;IACrClC,QAAQ,CAACkC,KAAK,CAAC,KAAK,CAAC,CAAC;IACtB1B,iBAAiB,CAAC,KAAK,CAAC;IACxBN,mBAAmB,CAACgC,KAAK,CAAC;IAC1BlB,SAAS,CAACkB,KAAK,CAAC,KAAK,CAAC,CAAC;EAC3B,CAAC;EAED,MAAM0B,cAAc,GAAIf,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACgB,GAAG,KAAK,OAAO,EAAE;MACnB7C,SAAS,CAAC,CAAC;IACf;EACJ,CAAC;;EAED;EACA;EACA;EACA,MAAM8C,UAAU,GAAGA,CAAA,KAAM;IACrB9D,QAAQ,CAAC,EAAE,CAAC;IACZF,SAAS,CAAC,EAAE,CAAC;IACbM,iBAAiB,CAAC,EAAE,CAAC;IACrBE,QAAQ,CAAC,EAAE,CAAC;IACZE,iBAAiB,CAAC,KAAK,CAAC;IACxBN,mBAAmB,CAAC,IAAI,CAAC;IACzBS,cAAc,CAAC,IAAI,CAAC;IACpBI,aAAa,CAAC,EAAE,CAAC;EACrB,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,MAAM0E,kBAAkB,GAAIlB,CAAC,IAAK;MAC9B,IAAIpC,WAAW,CAACuD,OAAO,IAAI,CAACvD,WAAW,CAACuD,OAAO,CAACC,QAAQ,CAACpB,CAAC,CAACE,MAAM,CAAC,EAAE;QAChEvC,iBAAiB,CAAC,KAAK,CAAC;MAC5B;IACJ,CAAC;IACD0D,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACTG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IACjE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,cAAc,GAAGA,CAACC,IAAI,EAAEvE,KAAK,KAAK;IACpC,IAAI,CAACA,KAAK,EAAE,OAAOuE,IAAI;IACvB,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAIzE,KAAK,GAAG,EAAE,IAAI,CAAC;IAC5C,OAAOuE,IAAI,CAACvC,OAAO,CAACwC,KAAK,EAAGE,KAAK,IAAK,2BAA2BA,KAAK,SAAS,CAAC;EACpF,CAAC;;EAED;EACA;EACA;EACA,MAAMC,iBAAiB,GAAG,MAAOC,UAAU,IAAK;IAC5CpD,OAAO,CAACC,GAAG,CAAC,GAAGmD,UAAU,eAAe,CAAC;IAEzC,IAAIA,UAAU,KAAK,KAAK,EAAE;MAGtB,IAAI,CAAC1E,gBAAgB,IAAI,CAACA,gBAAgB,CAAC,MAAM,CAAC,EAAE;QAChDc,aAAa,CAAC,eAAe,CAAC;QAC9B;MACJ;MAEAF,eAAe,CAAC,IAAI,CAAC;MACrBE,aAAa,CAAC,EAAE,CAAC;MACjBJ,cAAc,CAAC,IAAI,CAAC;MAEpB,IAAI;QAEA;QACA,MAAMW,QAAQ,GAAG,MAAM/B,KAAK,CAAC4B,GAAG,CAAC,oCAAoC,EAAE;UACnEC,MAAM,EAAE;YAAEwD,UAAU,EAAE3E,gBAAgB,CAAC,MAAM;UAAE;QACnD,CAAC,CAAC;QACFU,cAAc,CAACW,QAAQ,CAACG,IAAI,CAACoD,YAAY,CAAC;MAC9C,CAAC,CAAC,OAAOxE,KAAK,EAAE;QACZkB,OAAO,CAAClB,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;QAC3CU,aAAa,CAAC,6BAA6B,CAAC;MAChD,CAAC,SAAS;QACNF,eAAe,CAAC,KAAK,CAAC;MAC1B;IACJ;;IAEA;EACJ,CAAC;;EAED;EACA;EACA;EACA,oBACInB,OAAA;IAAKoF,SAAS,EAAC,uBAAuB;IAAAC,QAAA,gBAClCrF,OAAA;MACIsF,OAAO,EAAElB,UAAW;MACpBmB,KAAK,EAAE;QAAEC,MAAM,EAAE,SAAS;QAAEC,KAAK,EAAE,SAAS;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,EACxE;IAED;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGL9F,OAAA;MAAKuF,KAAK,EAAE;QAAEQ,QAAQ,EAAE,UAAU;QAAEC,KAAK,EAAE,MAAM;QAAEC,QAAQ,EAAE,OAAO;QAAEP,YAAY,EAAE;MAAO,CAAE;MAAAL,QAAA,gBACzFrF,OAAA;QAAKuF,KAAK,EAAE;UAAEW,OAAO,EAAE;QAAO,CAAE;QAAAb,QAAA,gBAC5BrF,OAAA;UACImG,IAAI,EAAC,MAAM;UACXC,WAAW,EAAC,uEAAgB;UAC5BjE,KAAK,EAAE9B,KAAM;UACbgG,QAAQ,EAAEnD,iBAAkB;UAC5BoD,UAAU,EAAEpC;QAAe;UAAAyB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC,eACF9F,OAAA;UAAQoF,SAAS,EAAC,eAAe;UAACE,OAAO,EAAEA,CAAA,KAAMhE,SAAS,CAAC,CAAE;UAAA+D,QAAA,EAAC;QAE9D;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EACLjF,cAAc,iBACXb,OAAA;QAAKuG,GAAG,EAAExF,WAAY;QAACqE,SAAS,EAAC,UAAU;QAAAC,QAAA,EACtC5E,cAAc,CAAC8B,GAAG,CAAC,CAACC,KAAK,EAAEgE,KAAK,kBAC7BxG,OAAA;UAEIoF,SAAS,EAAC,eAAe;UACzBE,OAAO,EAAEA,CAAA,KAAMrB,qBAAqB,CAACzB,KAAK,CAAE;UAAA6C,QAAA,gBAE5CrF,OAAA;YACIyG,uBAAuB,EAAE;cACrBC,MAAM,EAAE/B,cAAc,CAACnC,KAAK,CAAC,KAAK,CAAC,IAAI,EAAE,EAAEnC,KAAK;YACpD;UAAE;YAAAsF,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACR9F,OAAA;YAAMuF,KAAK,EAAE;cAAEoB,UAAU,EAAE,MAAM;cAAElB,KAAK,EAAE;YAAO,CAAE;YAAAJ,QAAA,EAC9C7C,KAAK,CAAC,MAAM,CAAC,IAAI;UAAE;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC;QAAA,GAXFU,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAYT,CACR;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD,CACR;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,EAELnF,KAAK,iBAAIX,OAAA;MAAGoF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE1E;IAAK;MAAAgF,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGjDvF,gBAAgB,iBACbP,OAAA;MAAKoF,SAAS,EAAC,mBAAmB;MAAAC,QAAA,gBAC9BrF,OAAA;QAAAqF,QAAA,EAAI;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACd9F,OAAA;QAAAqF,QAAA,GAAG,gBAAI,EAAC9E,gBAAgB,CAAC,IAAI,CAAC,IAAI,KAAK;MAAA;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC5C9F,OAAA;QAAAqF,QAAA,GAAG,4BAAM,EAAC9E,gBAAgB,CAAC,MAAM,CAAC,IAAI,KAAK;MAAA;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChD9F,OAAA;QAAAqF,QAAA,GAAG,sBAAK,EAAC9E,gBAAgB,CAAC,KAAK,CAAC,IAAI,KAAK;MAAA;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C9F,OAAA;QAAAqF,QAAA,GAAG,sBAAK,EAAC9E,gBAAgB,CAAC,KAAK,CAAC,IAAI,KAAK;MAAA;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9C9F,OAAA;QAAAqF,QAAA,GAAG,4BAAM,EAAC9E,gBAAgB,CAAC,MAAM,CAAC,IAAI,KAAK;MAAA;QAAAoF,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CACR,EAGA3F,MAAM,CAAC6B,MAAM,GAAG,CAAC,iBACdhC,OAAA,CAACF,UAAU;MACPK,MAAM,EAAEA,MAAO;MACfyG,WAAW,EAAE,CACT,IAAI,EACJ,MAAM,EACN,KAAK,EACL,KAAK,EACL,MAAM,EACN,WAAW,EACX,WAAW,EACX,UAAU;IACZ;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CACJ,EAGA3F,MAAM,CAAC6B,MAAM,GAAG,CAAC,iBACdhC,OAAA;MACIoF,SAAS,EAAC,cAAc;MACxBG,KAAK,EAAE;QAAEsB,SAAS,EAAE,MAAM;QAAEX,OAAO,EAAE,MAAM;QAAEY,GAAG,EAAE,MAAM;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAAA1B,QAAA,gBAE7ErF,OAAA;QAAQsF,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,KAAK,CAAE;QAAAK,QAAA,EAAC;MAAG;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7D9F,OAAA;QAAQsF,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,MAAM,CAAE;QAAAK,QAAA,EAAC;MAAI;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC/D9F,OAAA;QAAQsF,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,OAAO,CAAE;QAAAK,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACjE9F,OAAA;QAAQsF,OAAO,EAAEA,CAAA,KAAMN,iBAAiB,CAAC,OAAO,CAAE;QAAAK,QAAA,EAAC;MAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE,CACR,EAGA5E,YAAY,iBAAIlB,OAAA;MAAAqF,QAAA,EAAG;IAAmB;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAC1C1E,UAAU,iBAAIpB,OAAA;MAAGoF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEjE;IAAU;MAAAuE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC3D9E,WAAW,iBACRhB,OAAA;MAAKoF,SAAS,EAAC,cAAc;MAACG,KAAK,EAAE;QAAEsB,SAAS,EAAE;MAAO,CAAE;MAAAxB,QAAA,gBACvDrF,OAAA;QAAAqF,QAAA,EAAI;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB9F,OAAA;QAAAqF,QAAA,gBACIrF,OAAA;UAAAqF,QAAA,eACIrF,OAAA;YAAAqF,QAAA,gBACIrF,OAAA;cAAAqF,QAAA,EAAI;YAAE;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACX9F,OAAA;cAAAqF,QAAA,EAAI;YAAG;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACR9F,OAAA;UAAAqF,QAAA,EACKrE,WAAW,CAACuB,GAAG,CAAC,CAACyE,QAAQ,EAAER,KAAK,kBAC7BxG,OAAA;YAAAqF,QAAA,gBACIrF,OAAA;cAAAqF,QAAA,EAAK2B,QAAQ,CAACC;YAAI;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eAExB9F,OAAA;cAAAqF,QAAA,GAAK2B,QAAQ,CAACvE,KAAK,CAACyE,cAAc,CAAC,CAAC,EAAC,SAAE;YAAA;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA,GAHvCU,KAAK;YAAAb,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC5F,EAAA,CAhWID,UAAU;AAAAkH,EAAA,GAAVlH,UAAU;AAkWhB,eAAeA,UAAU;AAAC,IAAAkH,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}