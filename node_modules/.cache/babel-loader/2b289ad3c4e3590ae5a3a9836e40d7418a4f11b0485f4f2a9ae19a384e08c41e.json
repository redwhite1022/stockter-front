{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\FinancialStatementsPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/FinancialStatementsPage.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialStatementsPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\n  const [currentMetric, setCurrentMetric] = useState(null);\n\n  // 숫자 포맷팅 함수 (시가총액: 억 단위, 매출액: 조 및 억 단위)\n  const formatNumber = (key, number) => {\n    if (typeof number !== \"number\" || isNaN(number)) return number;\n    if (key === \"시가총액\") {\n      // 시가총액은 항상 억 단위로 표시\n      return (number / 10 ** 8).toFixed(2) + \"억\";\n    } else if (key === \"매출액\") {\n      // 매출액은 10,000 억 이상일 경우 조와 억 단위, 미만일 경우 억 단위\n      if (number >= 10 ** 12) {\n        const trillion = Math.floor(number / 10 ** 12);\n        const remaining = Math.floor(number % 10 ** 12 / 10 ** 8);\n        return `${trillion}조 ${remaining}억원`;\n      } else if (number >= 10 ** 8) {\n        return (number / 10 ** 8).toFixed(2) + \"억원\";\n      } else {\n        return number.toString();\n      }\n    } else {\n      return number.toString();\n    }\n  };\n\n  // 데이터 가져오기\n  const fetchTopStocksByMetric = () => {\n    if (currentMetric === \"시가총액\") {\n      axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"시가총액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"매출액\") {\n      axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"매출액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else {\n      // 다른 메트릭에 대한 처리 (필요 시 추가)\n      // 예: axios.get(`http://127.0.0.1:8000/top-${metric.toLowerCase()}`)\n      setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n    }\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    setCurrentMetric(metric);\n  };\n\n  // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\n  useEffect(() => {\n    if (currentMetric) {\n      fetchTopStocksByMetric();\n    }\n    // 시가총액에도 연도 적용이 필요하다면 여기에 추가\n  }, [selectedYear, currentMetric]);\n\n  // 메트릭 버튼 목록\n  const metrics = [\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: \"#007bff\",\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: \"Stockter - \\uC7AC\\uBB34\\uC81C\\uD45C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        width: \"80%\",\n        marginBottom: \"20px\",\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-select\",\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"bold\"\n          },\n          children: \"\\uC5F0\\uB3C4 \\uC120\\uD0DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-select\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          style: {\n            padding: \"10px\",\n            fontSize: \"14px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\",\n            minWidth: \"100px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2021\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2022\",\n            children: \"2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2023\",\n            children: \"2023\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2024\",\n            children: \"2024\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), metrics.map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\",\n          minWidth: \"120px\",\n          textAlign: \"center\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 23\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      formatNumber: formatNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancialStatementsPage, \"S5/mWbcsSPUG7qtC4FartPMCWVo=\");\n_c = FinancialStatementsPage;\nexport default FinancialStatementsPage;\nvar _c;\n$RefreshReg$(_c, \"FinancialStatementsPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","StockTable","jsxDEV","_jsxDEV","FinancialStatementsPage","_s","stocks","setStocks","error","setError","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","formatNumber","key","number","isNaN","toFixed","trillion","Math","floor","remaining","toString","fetchTopStocksByMetric","get","then","response","data","length","catch","console","params","year","handleButtonClick","metric","metrics","style","display","flexDirection","alignItems","width","children","color","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","flexWrap","gap","justifyContent","htmlFor","fontSize","fontWeight","id","value","onChange","e","target","padding","border","borderRadius","cursor","minWidth","map","onClick","background","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/FinancialStatementsPage.jsx"],"sourcesContent":["// src/components/FinancialStatementsPage.jsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\n\r\nconst FinancialStatementsPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n\r\n    // 숫자 포맷팅 함수 (시가총액: 억 단위, 매출액: 조 및 억 단위)\r\n    const formatNumber = (key, number) => {\r\n        if (typeof number !== \"number\" || isNaN(number)) return number;\r\n\r\n        if (key === \"시가총액\") {\r\n            // 시가총액은 항상 억 단위로 표시\r\n            return (number / 10 ** 8).toFixed(2) + \"억\";\r\n        } else if (key === \"매출액\") {\r\n            // 매출액은 10,000 억 이상일 경우 조와 억 단위, 미만일 경우 억 단위\r\n            if (number >= 10 ** 12) {\r\n                const trillion = Math.floor(number / 10 ** 12);\r\n                const remaining = Math.floor((number % 10 ** 12) / 10 ** 8);\r\n                return `${trillion}조 ${remaining}억원`;\r\n            } else if (number >= 10 ** 8) {\r\n                return (number / 10 ** 8).toFixed(2) + \"억원\";\r\n            } else {\r\n                return number.toString();\r\n            }\r\n        } else {\r\n            return number.toString();\r\n        }\r\n    };\r\n\r\n    // 데이터 가져오기\r\n    const fetchTopStocksByMetric = () => {\r\n        if (currentMetric === \"시가총액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"시가총액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"매출액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"매출액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else {\r\n            // 다른 메트릭에 대한 처리 (필요 시 추가)\r\n            // 예: axios.get(`http://127.0.0.1:8000/top-${metric.toLowerCase()}`)\r\n            setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        setCurrentMetric(metric);\r\n    };\r\n\r\n    // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\r\n    useEffect(() => {\r\n        if (currentMetric) {\r\n            fetchTopStocksByMetric();\r\n        }\r\n        // 시가총액에도 연도 적용이 필요하다면 여기에 추가\r\n    }, [selectedYear, currentMetric]);\r\n\r\n    // 메트릭 버튼 목록\r\n    const metrics = [\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"];\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n            }}\r\n        >\r\n            <h1\r\n                style={{\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                Stockter - 재무제표\r\n            </h1>\r\n\r\n            {/* 메트릭 버튼들과 연도 선택 드롭다운 */}\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    gap: \"10px\",\r\n                    width: \"80%\",\r\n                    marginBottom: \"20px\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                }}\r\n            >\r\n                {/* 연도 선택 드롭다운 - 왼쪽에 위치 */}\r\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\r\n                    <label htmlFor=\"year-select\" style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                        연도 선택:\r\n                    </label>\r\n                    <select\r\n                        id=\"year-select\"\r\n                        value={selectedYear}\r\n                        onChange={(e) => setSelectedYear(e.target.value)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            minWidth: \"100px\",\r\n                        }}\r\n                    >\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2022\">2022</option>\r\n                        <option value=\"2023\">2023</option>\r\n                        <option value=\"2024\">2024</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* 메트릭 버튼 */}\r\n                {metrics.map((metric) => (\r\n                    <button\r\n                        key={metric}\r\n                        onClick={() => handleButtonClick(metric)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                            minWidth: \"120px\",\r\n                            textAlign: \"center\",\r\n                        }}\r\n                    >\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {error && <p style={{ color: \"red\", marginBottom: \"20px\" }}>{error}</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && <StockTable stocks={stocks} formatNumber={formatNumber} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinancialStatementsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}