{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stockter\\\\front\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chart.js/auto\"; // 자동 등록\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // ========== (1) 연간 데이터 관련 상태 ==========\n  const [annualData, setAnnualData] = useState([]); // 연간 데이터 배열\n  const [annualLoading, setAnnualLoading] = useState(false); // 연간 데이터 로딩 상태\n  const [annualError, setAnnualError] = useState(\"\"); // 연간 데이터 오류 메시지\n  const [annualSelectedButton, setAnnualSelectedButton] = useState(\"\"); // 현재 선택된 연간 버튼\n\n  // ========== (2) 분기 데이터 관련 상태 ==========\n  const [quarterlyData, setQuarterlyData] = useState([]); // 분기별 데이터 배열\n  const [quarterlyLoading, setQuarterlyLoading] = useState(false); // 분기 데이터 로딩 상태\n  const [quarterlyError, setQuarterlyError] = useState(\"\"); // 분기 데이터 오류 메시지\n  const [quarterlySelectedButton, setQuarterlySelectedButton] = useState(\"\"); // 현재 선택된 분기 버튼\n\n  // 각각의 차트에 대한 ref (스크롤 용도)\n  const annualChartRef = useRef(null);\n  const quarterlyChartRef = useRef(null);\n\n  // 공백/쉼표 제거\n  const cleanValue = value => {\n    if (typeof value === \"string\") {\n      return value.replace(/[\\s,]+/g, \"\");\n    }\n    if (value === null || value === undefined) {\n      return \"N/A\";\n    }\n    return value;\n  };\n\n  // 퍼센트 단위인지 확인하는 함수\n  const isPercentage = buttonName => {\n    const percentageButtons = [\"영업이익률\", \"부채비율\"];\n    return percentageButtons.includes(buttonName);\n  };\n\n  // ---------------------------\n  // 1) 검색 함수\n  // ---------------------------\n  const fetchData = useCallback((searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        const mappedData = response.data.stocks.map(stock => ({\n          ...stock,\n          매출액: cleanValue(stock[\"매출액\"]),\n          영업이익: cleanValue(stock[\"영업이익\"]),\n          영업이익률: cleanValue(stock[\"영업이익률\"]),\n          시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\n          부채비율: cleanValue(stock[\"부채비율\"])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0] || null);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 오류:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n    });\n  }, [query]);\n\n  // ---------------------------\n  // 2) 자동완성 로직\n  // ---------------------------\n  const handleQueryChange = useCallback(e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n\n          // 입력값으로 시작하는 종목 우선 정렬\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n\n          // 최대 10개까지만\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  }, []);\n  const handleSuggestionClick = useCallback(stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    setHighlightedStock(stock);\n    fetchData(stock[\"종목명\"]);\n  }, [fetchData]);\n  const handleKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n      setIsDropdownOpen(false);\n    }\n  }, [fetchData]);\n\n  // ---------------------------\n  // 3) 기타 이벤트\n  // ---------------------------\n  const resetState = useCallback(() => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n\n    // 연간 / 분기 데이터도 모두 초기화\n    setAnnualData([]);\n    setAnnualLoading(false);\n    setAnnualError(\"\");\n    setAnnualSelectedButton(\"\");\n    setQuarterlyData([]);\n    setQuarterlyLoading(false);\n    setQuarterlyError(\"\");\n    setQuarterlySelectedButton(\"\");\n  }, []);\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = useCallback((text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  }, []);\n\n  // ---------------------------\n  // 4) 연간 재무데이터 버튼 핸들러\n  // ---------------------------\n  const handleAnnualButtonClick = useCallback(async buttonName => {\n    if (annualLoading) {\n      console.warn(\"연간 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\n      return;\n    }\n    if (!highlightedStock) {\n      setAnnualError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\n      return;\n    }\n    setAnnualLoading(true);\n    setAnnualError(\"\");\n    setAnnualData([]);\n    setAnnualSelectedButton(buttonName);\n\n    // 엔드포인트 결정\n    let endpoint = \"\";\n    if (buttonName === \"매출액\") {\n      endpoint = \"financial-annual-sales\";\n    } else if (buttonName === \"영업이익\") {\n      endpoint = \"financial-operating-profit\";\n    } else if (buttonName === \"영업이익률\") {\n      endpoint = \"financial-operating-income-rate\";\n    } else if (buttonName === \"순이익\") {\n      endpoint = \"financial-net-income\";\n    } else if (buttonName === \"부채비율\") {\n      endpoint = \"financial-debt-ratio\";\n    } else {\n      console.warn(\"지원되지 않는 버튼입니다(연간).\");\n      setAnnualLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`, {\n        params: {\n          stock_name: highlightedStock[\"종목명\"]\n        }\n      });\n      let data = null;\n      if (buttonName === \"매출액\" && response.data.annual_sales) {\n        data = response.data.annual_sales;\n      } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\n        data = response.data.operating_profit;\n      } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\n        data = response.data.operating_income_rate;\n      } else if (buttonName === \"순이익\" && response.data.net_income) {\n        data = response.data.net_income;\n      } else if (buttonName === \"부채비율\" && response.data.debt_ratio) {\n        data = response.data.debt_ratio;\n      }\n      if (data && data.length > 0) {\n        setAnnualData(data);\n      } else {\n        setAnnualError(`\"${buttonName}\" 데이터가 없습니다.`);\n      }\n    } catch (error) {\n      console.error(\"연간 데이터 로드 오류:\", error);\n      setAnnualError(`\"${buttonName}\" 데이터를 가져오는 중 오류가 발생했습니다.`);\n    } finally {\n      setAnnualLoading(false);\n    }\n  }, [highlightedStock, annualLoading]);\n\n  // ---------------------------\n  // 5) 분기별 재무데이터 버튼 핸들러\n  // ---------------------------\n  const handleQuarterlyButtonClick = useCallback(async buttonName => {\n    if (quarterlyLoading) {\n      console.warn(\"분기별 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\n      return;\n    }\n    if (!highlightedStock) {\n      setQuarterlyError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\n      return;\n    }\n    setQuarterlyLoading(true);\n    setQuarterlyError(\"\");\n    setQuarterlyData([]);\n    setQuarterlySelectedButton(buttonName);\n\n    // 엔드포인트 결정 (분기별)\n    let endpoint = \"\";\n    if (buttonName === \"매출액\") {\n      endpoint = \"financial-quarterly-sales\";\n    } else if (buttonName === \"영업이익\") {\n      endpoint = \"financial-quarterly-operating-profit\";\n    } else if (buttonName === \"영업이익률\") {\n      endpoint = \"financial-quarterly-operating-income-rate\";\n    } else if (buttonName === \"순이익\") {\n      endpoint = \"financial-quarterly-net-income\";\n    } else if (buttonName === \"부채비율\") {\n      endpoint = \"financial-quarterly-debt-ratio\";\n    } else {\n      console.warn(\"지원되지 않는 버튼입니다(분기).\");\n      setQuarterlyLoading(false);\n      return;\n    }\n    try {\n      const response = await axios.get(`https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`, {\n        params: {\n          stock_name: highlightedStock[\"종목명\"]\n        }\n      });\n      let data = null;\n      // 예: 백엔드에서 quarterly_xxx 형태로 응답한다고 가정\n      if (buttonName === \"매출액\" && response.data.quarterly_sales) {\n        data = response.data.quarterly_sales;\n      } else if (buttonName === \"영업이익\" && response.data.quarterly_operating_profit) {\n        data = response.data.quarterly_operating_profit;\n      } else if (buttonName === \"영업이익률\" && response.data.quarterly_operating_income_rate) {\n        data = response.data.quarterly_operating_income_rate;\n      } else if (buttonName === \"순이익\" && response.data.quarterly_net_income) {\n        data = response.data.quarterly_net_income;\n      } else if (buttonName === \"부채비율\" && response.data.quarterly_debt_ratio) {\n        data = response.data.quarterly_debt_ratio;\n      }\n      if (data && data.length > 0) {\n        setQuarterlyData(data);\n      } else {\n        setQuarterlyError(`\"${buttonName}\" 분기별 데이터가 없습니다.`);\n      }\n    } catch (error) {\n      console.error(\"분기별 데이터 로드 오류:\", error);\n      setQuarterlyError(`\"${buttonName}\" 분기별 데이터를 가져오는 중 오류가 발생했습니다.`);\n    } finally {\n      setQuarterlyLoading(false);\n    }\n  }, [highlightedStock, quarterlyLoading]);\n\n  // ---------------------------\n  // 6) 자동 스크롤 useEffect (연간/분기 차트 각각)\n  // ---------------------------\n  // 연간 데이터가 새로 생기면 연간 차트 위치로 스크롤\n  useEffect(() => {\n    if (annualData.length > 0 && annualChartRef.current) {\n      annualChartRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [annualData]);\n\n  // 분기 데이터가 새로 생기면 분기 차트 위치로 스크롤\n  useEffect(() => {\n    if (quarterlyData.length > 0 && quarterlyChartRef.current) {\n      quarterlyChartRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [quarterlyData]);\n\n  // ---------------------------\n  // (A) 연간 차트 데이터 구성\n  // ---------------------------\n  const annualChartData = {\n    labels: annualData.map(item => item.연도 || item.label || \"N/A\"),\n    datasets: [{\n      label: isPercentage(annualSelectedButton) ? `${annualSelectedButton} (%)` : `${annualSelectedButton} (억)`,\n      data: annualData.map(item => item[annualSelectedButton]),\n      backgroundColor: annualSelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 0.6)\" : annualSelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 0.6)\" : annualSelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 0.6)\" : annualSelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 0.6)\" : annualSelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 0.6)\" : \"rgba(75, 192, 192, 0.6)\",\n      borderColor: annualSelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 1)\" : annualSelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 1)\" : annualSelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 1)\" : annualSelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 1)\" : annualSelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 1)\" : \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  };\n\n  // ---------------------------\n  // (B) 분기 차트 데이터 구성\n  // ---------------------------\n  const quarterlyChartData = {\n    labels: quarterlyData.map(item => item.분기 || item.label || \"N/A\"),\n    datasets: [{\n      label: isPercentage(quarterlySelectedButton) ? `${quarterlySelectedButton} (%)` : `${quarterlySelectedButton} (억)`,\n      data: quarterlyData.map(item => item[quarterlySelectedButton]),\n      backgroundColor: quarterlySelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 0.6)\" : quarterlySelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 0.6)\" : quarterlySelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 0.6)\" : quarterlySelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 0.6)\" : quarterlySelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 0.6)\" : \"rgba(75, 192, 192, 0.6)\",\n      borderColor: quarterlySelectedButton === \"매출액\" ? \"rgba(75, 192, 192, 1)\" : quarterlySelectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 1)\" : quarterlySelectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 1)\" : quarterlySelectedButton === \"순이익\" ? \"rgba(153, 102, 255, 1)\" : quarterlySelectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 1)\" : \"rgba(75, 192, 192, 1)\",\n      borderWidth: 1\n    }]\n  };\n\n  // ---------------------------\n  // 7) JSX 반환\n  // ---------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 475,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 482,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 489,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 487,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 513,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 516,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 517,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 518,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\", \"부채비율\" // 필요시 제외\n      ]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"10px\",\n          color: \"#333\"\n        },\n        children: \"\\uC5F0\\uAC04 \\uC7AC\\uBB34\\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 543,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          flexWrap: \"wrap\",\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"매출액\"),\n          disabled: annualLoading && annualSelectedButton === \"매출액\",\n          children: annualLoading && annualSelectedButton === \"매출액\" ? \"매출액 로딩 중...\" : \"매출액\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"영업이익\"),\n          disabled: annualLoading && annualSelectedButton === \"영업이익\",\n          children: annualLoading && annualSelectedButton === \"영업이익\" ? \"영업이익 로딩 중...\" : \"영업이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"영업이익률\"),\n          disabled: annualLoading && annualSelectedButton === \"영업이익률\",\n          children: annualLoading && annualSelectedButton === \"영업이익률\" ? \"영업이익률 로딩 중...\" : \"영업이익률\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"순이익\"),\n          disabled: annualLoading && annualSelectedButton === \"순이익\",\n          children: annualLoading && annualSelectedButton === \"순이익\" ? \"순이익 로딩 중...\" : \"순이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 571,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleAnnualButtonClick(\"부채비율\"),\n          disabled: annualLoading && annualSelectedButton === \"부채비율\",\n          children: annualLoading && annualSelectedButton === \"부채비율\" ? \"부채비율 로딩 중...\" : \"부채비율\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 546,\n        columnNumber: 21\n      }, this), annualLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uC5F0\\uAC04 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 590,\n        columnNumber: 39\n      }, this), annualError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: annualError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 591,\n        columnNumber: 37\n      }, this), annualData && annualData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC5F0\\uAC04 \\uB370\\uC774\\uD130 \\uD45C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"financial-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uC5F0\\uB3C4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 600,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: annualSelectedButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 601,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 599,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: annualData.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.연도 || item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 607,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item[annualSelectedButton]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 45\n              }, this)]\n            }, item.연도 || item.label, true, {\n              fileName: _jsxFileName,\n              lineNumber: 606,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 25\n      }, this), annualData && annualData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-data-chart\",\n        ref: annualChartRef,\n        style: {\n          marginBottom: \"30px\",\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: annualChartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: `${(highlightedStock === null || highlightedStock === void 0 ? void 0 : highlightedStock.종목명) || \"\"} 연간 ${annualSelectedButton}`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: false,\n                ticks: {\n                  callback: function (value) {\n                    if (isPercentage(annualSelectedButton)) {\n                      return value.toFixed(1) + \"%\";\n                    }\n                    return value.toLocaleString() + \"억\";\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 623,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true), stocks.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"30px\",\n          marginBottom: \"10px\",\n          color: \"#333\"\n        },\n        children: \"\\uBD84\\uAE30\\uBCC4 \\uC7AC\\uBB34\\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 658,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          gap: \"10px\",\n          flexWrap: \"wrap\",\n          marginBottom: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"매출액\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"매출액\",\n          children: quarterlyLoading && quarterlySelectedButton === \"매출액\" ? \"매출액 로딩 중...\" : \"매출액\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 662,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"영업이익\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"영업이익\",\n          children: quarterlyLoading && quarterlySelectedButton === \"영업이익\" ? \"영업이익 로딩 중...\" : \"영업이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 670,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"영업이익률\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"영업이익률\",\n          children: quarterlyLoading && quarterlySelectedButton === \"영업이익률\" ? \"영업이익률 로딩 중...\" : \"영업이익률\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 678,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"순이익\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"순이익\",\n          children: quarterlyLoading && quarterlySelectedButton === \"순이익\" ? \"순이익 로딩 중...\" : \"순이익\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 686,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleQuarterlyButtonClick(\"부채비율\"),\n          disabled: quarterlyLoading && quarterlySelectedButton === \"부채비율\",\n          children: quarterlyLoading && quarterlySelectedButton === \"부채비율\" ? \"부채비율 로딩 중...\" : \"부채비율\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 661,\n        columnNumber: 21\n      }, this), quarterlyLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uBD84\\uAE30\\uBCC4 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 42\n      }, this), quarterlyError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: quarterlyError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 706,\n        columnNumber: 40\n      }, this), quarterlyData && quarterlyData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginBottom: \"30px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uBD84\\uAE30\\uBCC4 \\uB370\\uC774\\uD130 \\uD45C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 711,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"financial-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"\\uBD84\\uAE30\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 715,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: quarterlySelectedButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 716,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 714,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: quarterlyData.map((item, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: item.분기 || item.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 722,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: item[quarterlySelectedButton]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 723,\n                columnNumber: 45\n              }, this)]\n            }, item.분기 || item.label || idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 721,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 712,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 710,\n        columnNumber: 25\n      }, this), quarterlyData && quarterlyData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"financial-data-chart\",\n        ref: quarterlyChartRef,\n        style: {\n          marginBottom: \"30px\",\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: quarterlyChartData,\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: `${(highlightedStock === null || highlightedStock === void 0 ? void 0 : highlightedStock.종목명) || \"\"} 분기별 ${quarterlySelectedButton}`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: false,\n                ticks: {\n                  callback: function (value) {\n                    if (isPercentage(quarterlySelectedButton)) {\n                      return value.toFixed(1) + \"%\";\n                    }\n                    return value.toLocaleString() + \"억\";\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 738,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 733,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 457,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"ocE1spCYjpWs5zzMPjw42VH8Twc=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","StockTable","Bar","jsxDEV","_jsxDEV","Fragment","_Fragment","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","annualData","setAnnualData","annualLoading","setAnnualLoading","annualError","setAnnualError","annualSelectedButton","setAnnualSelectedButton","quarterlyData","setQuarterlyData","quarterlyLoading","setQuarterlyLoading","quarterlyError","setQuarterlyError","quarterlySelectedButton","setQuarterlySelectedButton","annualChartRef","quarterlyChartRef","cleanValue","value","replace","undefined","isPercentage","buttonName","percentageButtons","includes","fetchData","searchQuery","trim","get","params","then","response","data","length","mappedData","map","stock","매출액","영업이익","영업이익률","시가배당률","부채비율","catch","console","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockCode","toString","stockName","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","handleAnnualButtonClick","warn","endpoint","stock_name","annual_sales","operating_profit","operating_income_rate","net_income","debt_ratio","handleQuarterlyButtonClick","quarterly_sales","quarterly_operating_profit","quarterly_operating_income_rate","quarterly_net_income","quarterly_debt_ratio","scrollIntoView","behavior","block","annualChartData","labels","item","연도","label","datasets","backgroundColor","borderColor","borderWidth","quarterlyChartData","분기","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","gap","flexWrap","disabled","height","options","responsive","maintainAspectRatio","plugins","legend","title","종목명","scales","y","beginAtZero","ticks","callback","toFixed","toLocaleString","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stockter/front/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\"; // 자동 등록\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // ========== (1) 연간 데이터 관련 상태 ==========\r\n    const [annualData, setAnnualData] = useState([]);                // 연간 데이터 배열\r\n    const [annualLoading, setAnnualLoading] = useState(false);       // 연간 데이터 로딩 상태\r\n    const [annualError, setAnnualError] = useState(\"\");              // 연간 데이터 오류 메시지\r\n    const [annualSelectedButton, setAnnualSelectedButton] = useState(\"\"); // 현재 선택된 연간 버튼\r\n\r\n    // ========== (2) 분기 데이터 관련 상태 ==========\r\n    const [quarterlyData, setQuarterlyData] = useState([]);          // 분기별 데이터 배열\r\n    const [quarterlyLoading, setQuarterlyLoading] = useState(false); // 분기 데이터 로딩 상태\r\n    const [quarterlyError, setQuarterlyError] = useState(\"\");        // 분기 데이터 오류 메시지\r\n    const [quarterlySelectedButton, setQuarterlySelectedButton] = useState(\"\"); // 현재 선택된 분기 버튼\r\n\r\n    // 각각의 차트에 대한 ref (스크롤 용도)\r\n    const annualChartRef = useRef(null);\r\n    const quarterlyChartRef = useRef(null);\r\n\r\n    // 공백/쉼표 제거\r\n    const cleanValue = (value) => {\r\n        if (typeof value === \"string\") {\r\n            return value.replace(/[\\s,]+/g, \"\");\r\n        }\r\n        if (value === null || value === undefined) {\r\n            return \"N/A\";\r\n        }\r\n        return value;\r\n    };\r\n\r\n    // 퍼센트 단위인지 확인하는 함수\r\n    const isPercentage = (buttonName) => {\r\n        const percentageButtons = [\"영업이익률\", \"부채비율\"];\r\n        return percentageButtons.includes(buttonName);\r\n    };\r\n\r\n    // ---------------------------\r\n    // 1) 검색 함수\r\n    // ---------------------------\r\n    const fetchData = useCallback(\r\n        (searchQuery = query) => {\r\n            if (!searchQuery.trim()) {\r\n                setError(\"검색어를 입력하세요.\");\r\n                return;\r\n            }\r\n            setError(\"\");\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\r\n                    params: { query: searchQuery },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"검색 결과가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        const mappedData = response.data.stocks.map((stock) => ({\r\n                            ...stock,\r\n                            매출액: cleanValue(stock[\"매출액\"]),\r\n                            영업이익: cleanValue(stock[\"영업이익\"]),\r\n                            영업이익률: cleanValue(stock[\"영업이익률\"]),\r\n                            시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\r\n                            부채비율: cleanValue(stock[\"부채비율\"]),\r\n                        }));\r\n\r\n                        setStocks(mappedData);\r\n                        setHighlightedStock(mappedData[0] || null);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 오류:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                });\r\n        },\r\n        [query]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 2) 자동완성 로직\r\n    // ---------------------------\r\n    const handleQueryChange = useCallback((e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\r\n                    params: { query: input },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 입력값으로 시작하는 종목 우선 정렬\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 최대 10개까지만\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const handleSuggestionClick = useCallback(\r\n        (stock) => {\r\n            setQuery(stock[\"종목명\"]);\r\n            setIsDropdownOpen(false);\r\n            setHighlightedStock(stock);\r\n            fetchData(stock[\"종목명\"]);\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    const handleKeyPress = useCallback(\r\n        (e) => {\r\n            if (e.key === \"Enter\") {\r\n                fetchData();\r\n                setIsDropdownOpen(false);\r\n            }\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 3) 기타 이벤트\r\n    // ---------------------------\r\n    const resetState = useCallback(() => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n\r\n        // 연간 / 분기 데이터도 모두 초기화\r\n        setAnnualData([]);\r\n        setAnnualLoading(false);\r\n        setAnnualError(\"\");\r\n        setAnnualSelectedButton(\"\");\r\n\r\n        setQuarterlyData([]);\r\n        setQuarterlyLoading(false);\r\n        setQuarterlyError(\"\");\r\n        setQuarterlySelectedButton(\"\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = useCallback((text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    }, []);\r\n\r\n    // ---------------------------\r\n    // 4) 연간 재무데이터 버튼 핸들러\r\n    // ---------------------------\r\n    const handleAnnualButtonClick = useCallback(\r\n        async (buttonName) => {\r\n            if (annualLoading) {\r\n                console.warn(\"연간 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\r\n                return;\r\n            }\r\n\r\n            if (!highlightedStock) {\r\n                setAnnualError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\r\n                return;\r\n            }\r\n\r\n            setAnnualLoading(true);\r\n            setAnnualError(\"\");\r\n            setAnnualData([]);\r\n            setAnnualSelectedButton(buttonName);\r\n\r\n            // 엔드포인트 결정\r\n            let endpoint = \"\";\r\n            if (buttonName === \"매출액\") {\r\n                endpoint = \"financial-annual-sales\";\r\n            } else if (buttonName === \"영업이익\") {\r\n                endpoint = \"financial-operating-profit\";\r\n            } else if (buttonName === \"영업이익률\") {\r\n                endpoint = \"financial-operating-income-rate\";\r\n            } else if (buttonName === \"순이익\") {\r\n                endpoint = \"financial-net-income\";\r\n            } else if (buttonName === \"부채비율\") {\r\n                endpoint = \"financial-debt-ratio\";\r\n            } else {\r\n                console.warn(\"지원되지 않는 버튼입니다(연간).\");\r\n                setAnnualLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`,\r\n                    { params: { stock_name: highlightedStock[\"종목명\"] } }\r\n                );\r\n\r\n                let data = null;\r\n                if (buttonName === \"매출액\" && response.data.annual_sales) {\r\n                    data = response.data.annual_sales;\r\n                } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\r\n                    data = response.data.operating_profit;\r\n                } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\r\n                    data = response.data.operating_income_rate;\r\n                } else if (buttonName === \"순이익\" && response.data.net_income) {\r\n                    data = response.data.net_income;\r\n                } else if (buttonName === \"부채비율\" && response.data.debt_ratio) {\r\n                    data = response.data.debt_ratio;\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    setAnnualData(data);\r\n                } else {\r\n                    setAnnualError(`\"${buttonName}\" 데이터가 없습니다.`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"연간 데이터 로드 오류:\", error);\r\n                setAnnualError(`\"${buttonName}\" 데이터를 가져오는 중 오류가 발생했습니다.`);\r\n            } finally {\r\n                setAnnualLoading(false);\r\n            }\r\n        },\r\n        [highlightedStock, annualLoading]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 5) 분기별 재무데이터 버튼 핸들러\r\n    // ---------------------------\r\n    const handleQuarterlyButtonClick = useCallback(\r\n        async (buttonName) => {\r\n            if (quarterlyLoading) {\r\n                console.warn(\"분기별 데이터 로딩 중입니다. 잠시만 기다려주세요.\");\r\n                return;\r\n            }\r\n\r\n            if (!highlightedStock) {\r\n                setQuarterlyError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\r\n                return;\r\n            }\r\n\r\n            setQuarterlyLoading(true);\r\n            setQuarterlyError(\"\");\r\n            setQuarterlyData([]);\r\n            setQuarterlySelectedButton(buttonName);\r\n\r\n            // 엔드포인트 결정 (분기별)\r\n            let endpoint = \"\";\r\n            if (buttonName === \"매출액\") {\r\n                endpoint = \"financial-quarterly-sales\";\r\n            } else if (buttonName === \"영업이익\") {\r\n                endpoint = \"financial-quarterly-operating-profit\";\r\n            } else if (buttonName === \"영업이익률\") {\r\n                endpoint = \"financial-quarterly-operating-income-rate\";\r\n            } else if (buttonName === \"순이익\") {\r\n                endpoint = \"financial-quarterly-net-income\";\r\n            } else if (buttonName === \"부채비율\") {\r\n                endpoint = \"financial-quarterly-debt-ratio\";\r\n            } else {\r\n                console.warn(\"지원되지 않는 버튼입니다(분기).\");\r\n                setQuarterlyLoading(false);\r\n                return;\r\n            }\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`,\r\n                    { params: { stock_name: highlightedStock[\"종목명\"] } }\r\n                );\r\n\r\n                let data = null;\r\n                // 예: 백엔드에서 quarterly_xxx 형태로 응답한다고 가정\r\n                if (buttonName === \"매출액\" && response.data.quarterly_sales) {\r\n                    data = response.data.quarterly_sales;\r\n                } else if (buttonName === \"영업이익\" && response.data.quarterly_operating_profit) {\r\n                    data = response.data.quarterly_operating_profit;\r\n                } else if (buttonName === \"영업이익률\" && response.data.quarterly_operating_income_rate) {\r\n                    data = response.data.quarterly_operating_income_rate;\r\n                } else if (buttonName === \"순이익\" && response.data.quarterly_net_income) {\r\n                    data = response.data.quarterly_net_income;\r\n                } else if (buttonName === \"부채비율\" && response.data.quarterly_debt_ratio) {\r\n                    data = response.data.quarterly_debt_ratio;\r\n                }\r\n\r\n                if (data && data.length > 0) {\r\n                    setQuarterlyData(data);\r\n                } else {\r\n                    setQuarterlyError(`\"${buttonName}\" 분기별 데이터가 없습니다.`);\r\n                }\r\n            } catch (error) {\r\n                console.error(\"분기별 데이터 로드 오류:\", error);\r\n                setQuarterlyError(`\"${buttonName}\" 분기별 데이터를 가져오는 중 오류가 발생했습니다.`);\r\n            } finally {\r\n                setQuarterlyLoading(false);\r\n            }\r\n        },\r\n        [highlightedStock, quarterlyLoading]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 6) 자동 스크롤 useEffect (연간/분기 차트 각각)\r\n    // ---------------------------\r\n    // 연간 데이터가 새로 생기면 연간 차트 위치로 스크롤\r\n    useEffect(() => {\r\n        if (annualData.length > 0 && annualChartRef.current) {\r\n            annualChartRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n    }, [annualData]);\r\n\r\n    // 분기 데이터가 새로 생기면 분기 차트 위치로 스크롤\r\n    useEffect(() => {\r\n        if (quarterlyData.length > 0 && quarterlyChartRef.current) {\r\n            quarterlyChartRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n    }, [quarterlyData]);\r\n\r\n    // ---------------------------\r\n    // (A) 연간 차트 데이터 구성\r\n    // ---------------------------\r\n    const annualChartData = {\r\n        labels: annualData.map((item) => item.연도 || item.label || \"N/A\"),\r\n        datasets: [\r\n            {\r\n                label: isPercentage(annualSelectedButton)\r\n                    ? `${annualSelectedButton} (%)`\r\n                    : `${annualSelectedButton} (억)`,\r\n                data: annualData.map((item) => item[annualSelectedButton]),\r\n                backgroundColor:\r\n                    annualSelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 0.6)\"\r\n                        : annualSelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 0.6)\"\r\n                        : annualSelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 0.6)\"\r\n                        : annualSelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 0.6)\"\r\n                        : annualSelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 0.6)\"\r\n                        : \"rgba(75, 192, 192, 0.6)\",\r\n                borderColor:\r\n                    annualSelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 1)\"\r\n                        : annualSelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 1)\"\r\n                        : annualSelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 1)\"\r\n                        : annualSelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 1)\"\r\n                        : annualSelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 1)\"\r\n                        : \"rgba(75, 192, 192, 1)\",\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // ---------------------------\r\n    // (B) 분기 차트 데이터 구성\r\n    // ---------------------------\r\n    const quarterlyChartData = {\r\n        labels: quarterlyData.map((item) => item.분기 || item.label || \"N/A\"),\r\n        datasets: [\r\n            {\r\n                label: isPercentage(quarterlySelectedButton)\r\n                    ? `${quarterlySelectedButton} (%)`\r\n                    : `${quarterlySelectedButton} (억)`,\r\n                data: quarterlyData.map((item) => item[quarterlySelectedButton]),\r\n                backgroundColor:\r\n                    quarterlySelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 0.6)\"\r\n                        : quarterlySelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 0.6)\"\r\n                        : quarterlySelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 0.6)\"\r\n                        : quarterlySelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 0.6)\"\r\n                        : quarterlySelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 0.6)\"\r\n                        : \"rgba(75, 192, 192, 0.6)\",\r\n                borderColor:\r\n                    quarterlySelectedButton === \"매출액\"\r\n                        ? \"rgba(75, 192, 192, 1)\"\r\n                        : quarterlySelectedButton === \"영업이익\"\r\n                        ? \"rgba(255, 159, 64, 1)\"\r\n                        : quarterlySelectedButton === \"영업이익률\"\r\n                        ? \"rgba(54, 162, 235, 1)\"\r\n                        : quarterlySelectedButton === \"순이익\"\r\n                        ? \"rgba(153, 102, 255, 1)\"\r\n                        : quarterlySelectedButton === \"부채비율\"\r\n                        ? \"rgba(255, 206, 86, 1)\"\r\n                        : \"rgba(75, 192, 192, 1)\",\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // ---------------------------\r\n    // 7) JSX 반환\r\n    // ---------------------------\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2\r\n                onClick={resetState}\r\n                style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}\r\n            >\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    maxWidth: \"600px\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 기본 주가 정보 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                        \"부채비율\", // 필요시 제외\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {/* ========== (A) 연간 재무데이터 영역 ========== */}\r\n            {stocks.length > 0 && (\r\n                <>\r\n                    <h3 style={{ marginTop: \"30px\", marginBottom: \"10px\", color: \"#333\" }}>\r\n                        연간 재무데이터\r\n                    </h3>\r\n                    <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", marginBottom: \"20px\" }}>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"매출액\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"매출액\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"매출액\"\r\n                                ? \"매출액 로딩 중...\"\r\n                                : \"매출액\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"영업이익\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"영업이익\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"영업이익\"\r\n                                ? \"영업이익 로딩 중...\"\r\n                                : \"영업이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"영업이익률\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"영업이익률\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"영업이익률\"\r\n                                ? \"영업이익률 로딩 중...\"\r\n                                : \"영업이익률\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"순이익\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"순이익\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"순이익\"\r\n                                ? \"순이익 로딩 중...\"\r\n                                : \"순이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleAnnualButtonClick(\"부채비율\")}\r\n                            disabled={annualLoading && annualSelectedButton === \"부채비율\"}\r\n                        >\r\n                            {annualLoading && annualSelectedButton === \"부채비율\"\r\n                                ? \"부채비율 로딩 중...\"\r\n                                : \"부채비율\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* 연간 데이터 로딩/오류 메시지 */}\r\n                    {annualLoading && <p>연간 데이터를 로드 중입니다...</p>}\r\n                    {annualError && <p className=\"error-message\">{annualError}</p>}\r\n\r\n                    {/* 연간 데이터 표 (버튼 클릭 시 표시) */}\r\n                    {annualData && annualData.length > 0 && (\r\n                        <div style={{ marginBottom: \"30px\" }}>\r\n                            <h4>연간 데이터 표</h4>\r\n                            <table className=\"financial-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>연도</th>\r\n                                        <th>{annualSelectedButton}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {annualData.map((item) => (\r\n                                        <tr key={item.연도 || item.label}>\r\n                                            <td>{item.연도 || item.label}</td>\r\n                                            <td>{item[annualSelectedButton]}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* 연간 차트 (annualData가 존재할 때만 표시) */}\r\n                    {annualData && annualData.length > 0 && (\r\n                        <div\r\n                            className=\"financial-data-chart\"\r\n                            ref={annualChartRef}\r\n                            style={{ marginBottom: \"30px\", height: \"400px\" }}\r\n                        >\r\n                            <Bar\r\n                                data={annualChartData}\r\n                                options={{\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    plugins: {\r\n                                        legend: { position: \"top\" },\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: `${highlightedStock?.종목명 || \"\"} 연간 ${annualSelectedButton}`,\r\n                                        },\r\n                                    },\r\n                                    scales: {\r\n                                        y: {\r\n                                            beginAtZero: false,\r\n                                            ticks: {\r\n                                                callback: function (value) {\r\n                                                    if (isPercentage(annualSelectedButton)) {\r\n                                                        return value.toFixed(1) + \"%\";\r\n                                                    }\r\n                                                    return value.toLocaleString() + \"억\";\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n\r\n            {/* ========== (B) 분기별 재무데이터 영역 ========== */}\r\n            {stocks.length > 0 && (\r\n                <>\r\n                    <h3 style={{ marginTop: \"30px\", marginBottom: \"10px\", color: \"#333\" }}>\r\n                        분기별 재무데이터\r\n                    </h3>\r\n                    <div style={{ display: \"flex\", gap: \"10px\", flexWrap: \"wrap\", marginBottom: \"20px\" }}>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"매출액\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"매출액\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"매출액\"\r\n                                ? \"매출액 로딩 중...\"\r\n                                : \"매출액\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"영업이익\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"영업이익\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"영업이익\"\r\n                                ? \"영업이익 로딩 중...\"\r\n                                : \"영업이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"영업이익률\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"영업이익률\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"영업이익률\"\r\n                                ? \"영업이익률 로딩 중...\"\r\n                                : \"영업이익률\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"순이익\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"순이익\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"순이익\"\r\n                                ? \"순이익 로딩 중...\"\r\n                                : \"순이익\"}\r\n                        </button>\r\n                        <button\r\n                            onClick={() => handleQuarterlyButtonClick(\"부채비율\")}\r\n                            disabled={quarterlyLoading && quarterlySelectedButton === \"부채비율\"}\r\n                        >\r\n                            {quarterlyLoading && quarterlySelectedButton === \"부채비율\"\r\n                                ? \"부채비율 로딩 중...\"\r\n                                : \"부채비율\"}\r\n                        </button>\r\n                    </div>\r\n\r\n                    {/* 분기별 데이터 로딩/오류 메시지 */}\r\n                    {quarterlyLoading && <p>분기별 데이터를 로드 중입니다...</p>}\r\n                    {quarterlyError && <p className=\"error-message\">{quarterlyError}</p>}\r\n\r\n                    {/* 분기별 데이터 표 (버튼 클릭 시 표시) */}\r\n                    {quarterlyData && quarterlyData.length > 0 && (\r\n                        <div style={{ marginBottom: \"30px\" }}>\r\n                            <h4>분기별 데이터 표</h4>\r\n                            <table className=\"financial-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>분기</th>\r\n                                        <th>{quarterlySelectedButton}</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {quarterlyData.map((item, idx) => (\r\n                                        <tr key={item.분기 || item.label || idx}>\r\n                                            <td>{item.분기 || item.label}</td>\r\n                                            <td>{item[quarterlySelectedButton]}</td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    )}\r\n\r\n                    {/* 분기별 차트 (quarterlyData가 존재할 때만 표시) */}\r\n                    {quarterlyData && quarterlyData.length > 0 && (\r\n                        <div\r\n                            className=\"financial-data-chart\"\r\n                            ref={quarterlyChartRef}\r\n                            style={{ marginBottom: \"30px\", height: \"400px\" }}\r\n                        >\r\n                            <Bar\r\n                                data={quarterlyChartData}\r\n                                options={{\r\n                                    responsive: true,\r\n                                    maintainAspectRatio: false,\r\n                                    plugins: {\r\n                                        legend: { position: \"top\" },\r\n                                        title: {\r\n                                            display: true,\r\n                                            text: `${highlightedStock?.종목명 || \"\"} 분기별 ${quarterlySelectedButton}`,\r\n                                        },\r\n                                    },\r\n                                    scales: {\r\n                                        y: {\r\n                                            beginAtZero: false,\r\n                                            ticks: {\r\n                                                callback: function (value) {\r\n                                                    if (isPercentage(quarterlySelectedButton)) {\r\n                                                        return value.toFixed(1) + \"%\";\r\n                                                    }\r\n                                                    return value.toLocaleString() + \"억\";\r\n                                                },\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                }}\r\n                            />\r\n                        </div>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}