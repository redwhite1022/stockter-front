{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\StockTable.jsx\";\n// src/components/StockTable.jsx\nimport React from \"react\";\nimport '../styles/Common.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockTable = ({\n  stocks\n}) => {\n  // 숫자 포맷팅 함수\n  const formatNumber = (key, number) => {\n    if (typeof number !== \"number\" || isNaN(number)) return number;\n    if (key === \"시가총액\") {\n      // 시가총액은 항상 억 단위로 표시\n      return (number / 10 ** 8).toFixed(2) + \"억\";\n    } else if (key === \"매출액\") {\n      // 매출액은 10,000 억 이상일 경우 조와 억 단위, 미만일 경우 억 단위\n      if (number >= 10 ** 12) {\n        const trillion = Math.floor(number / 10 ** 12);\n        const remaining = Math.floor(number % 10 ** 12 / 10 ** 8);\n        return `${trillion}조 ${remaining}억원`;\n      } else if (number >= 10 ** 8) {\n        return (number / 10 ** 8).toFixed(2) + \"억원\";\n      } else {\n        return number.toString();\n      }\n    } else {\n      return number.toString();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: stocks.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: \"\\uD45C\\uC2DC\\uD560 \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: key\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(stock).map(([key, value], idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            children: key === \"시가총액\" || key === \"매출액\" ? formatNumber(key, value) : value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 37\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_c = StockTable;\nexport default StockTable;\nvar _c;\n$RefreshReg$(_c, \"StockTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StockTable","stocks","formatNumber","key","number","isNaN","toFixed","trillion","Math","floor","remaining","toString","className","children","length","fileName","_jsxFileName","lineNumber","columnNumber","Object","keys","map","index","stock","entries","value","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/StockTable.jsx"],"sourcesContent":["// src/components/StockTable.jsx\r\nimport React from \"react\";\r\nimport '../styles/Common.css';\r\n\r\nconst StockTable = ({ stocks }) => {\r\n    // 숫자 포맷팅 함수\r\n    const formatNumber = (key, number) => {\r\n        if (typeof number !== \"number\" || isNaN(number)) return number;\r\n\r\n        if (key === \"시가총액\") {\r\n            // 시가총액은 항상 억 단위로 표시\r\n            return (number / 10 ** 8).toFixed(2) + \"억\";\r\n        } else if (key === \"매출액\") {\r\n            // 매출액은 10,000 억 이상일 경우 조와 억 단위, 미만일 경우 억 단위\r\n            if (number >= 10 ** 12) {\r\n                const trillion = Math.floor(number / 10 ** 12);\r\n                const remaining = Math.floor((number % 10 ** 12) / 10 ** 8);\r\n                return `${trillion}조 ${remaining}억원`;\r\n            } else if (number >= 10 ** 8) {\r\n                return (number / 10 ** 8).toFixed(2) + \"억원\";\r\n            } else {\r\n                return number.toString();\r\n            }\r\n        } else {\r\n            return number.toString();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n            {stocks.length === 0 ? (\r\n                <p className=\"error-message\">표시할 데이터가 없습니다.</p>\r\n            ) : (\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.keys(stocks[0]).map((key, index) => (\r\n                                <th key={index}>{key}</th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {stocks.map((stock, index) => (\r\n                            <tr key={index}>\r\n                                {Object.entries(stock).map(([key, value], idx) => (\r\n                                    <td key={idx}>\r\n                                        {(key === \"시가총액\" || key === \"매출액\") ? formatNumber(key, value) : value}\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default StockTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}