{"ast":null,"code":"const fetchData = () => {\n  if (!query.trim()) {\n    setError(\"검색어를 입력하세요.\");\n    return;\n  }\n  setError(\"\"); // 이전 오류 초기화\n  // 검색어 기반 데이터 가져오기\n  axios.get(\"http://127.0.0.1:8000/data\", {\n    params: {\n      query\n    }\n  }).then(response => {\n    if (response.data.error) {\n      setError(response.data.error);\n      setStocks([]); // 오류 시 테이블 초기화\n    } else if (response.data.stocks.length === 0) {\n      setError(\"검색 결과가 없습니다.\");\n      setStocks([]);\n    } else {\n      const lowercasedQuery = query.toLowerCase();\n      const filteredStocks = response.data.stocks.filter(stock => stock[\"종목코드\"].toString() === query || stock[\"종목명\"].toLowerCase() === lowercasedQuery);\n      if (filteredStocks.length > 0) {\n        setStocks(filteredStocks);\n        setError(\"\");\n      } else {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      }\n    }\n  }).catch(error => {\n    console.error(\"데이터 로드 중 오류 발생:\", error);\n    setError(\"서버와 연결할 수 없습니다.\");\n    setStocks([]);\n  });\n};","map":{"version":3,"names":["fetchData","query","trim","setError","axios","get","params","then","response","data","error","setStocks","stocks","length","lowercasedQuery","toLowerCase","filteredStocks","filter","stock","toString","catch","console"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["const fetchData = () => {\r\n  if (!query.trim()) {\r\n      setError(\"검색어를 입력하세요.\");\r\n      return;\r\n  }\r\n  setError(\"\"); // 이전 오류 초기화\r\n  // 검색어 기반 데이터 가져오기\r\n  axios\r\n      .get(\"http://127.0.0.1:8000/data\", { params: { query } })\r\n      .then((response) => {\r\n          if (response.data.error) {\r\n              setError(response.data.error);\r\n              setStocks([]); // 오류 시 테이블 초기화\r\n          } else if (response.data.stocks.length === 0) {\r\n              setError(\"검색 결과가 없습니다.\");\r\n              setStocks([]);\r\n          } else {\r\n              const lowercasedQuery = query.toLowerCase();\r\n              const filteredStocks = response.data.stocks.filter(\r\n                  (stock) =>\r\n                      stock[\"종목코드\"].toString() === query ||\r\n                      stock[\"종목명\"].toLowerCase() === lowercasedQuery\r\n              );\r\n\r\n              if (filteredStocks.length > 0) {\r\n                  setStocks(filteredStocks);\r\n                  setError(\"\");\r\n              } else {\r\n                  setError(\"검색 결과가 없습니다.\");\r\n                  setStocks([]);\r\n              }\r\n          }\r\n      })\r\n      .catch((error) => {\r\n          console.error(\"데이터 로드 중 오류 발생:\", error);\r\n          setError(\"서버와 연결할 수 없습니다.\");\r\n          setStocks([]);\r\n      });\r\n};\r\n"],"mappings":"AAAA,MAAMA,SAAS,GAAGA,CAAA,KAAM;EACtB,IAAI,CAACC,KAAK,CAACC,IAAI,CAAC,CAAC,EAAE;IACfC,QAAQ,CAAC,aAAa,CAAC;IACvB;EACJ;EACAA,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACd;EACAC,KAAK,CACAC,GAAG,CAAC,4BAA4B,EAAE;IAAEC,MAAM,EAAE;MAAEL;IAAM;EAAE,CAAC,CAAC,CACxDM,IAAI,CAAEC,QAAQ,IAAK;IAChB,IAAIA,QAAQ,CAACC,IAAI,CAACC,KAAK,EAAE;MACrBP,QAAQ,CAACK,QAAQ,CAACC,IAAI,CAACC,KAAK,CAAC;MAC7BC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;IACnB,CAAC,MAAM,IAAIH,QAAQ,CAACC,IAAI,CAACG,MAAM,CAACC,MAAM,KAAK,CAAC,EAAE;MAC1CV,QAAQ,CAAC,cAAc,CAAC;MACxBQ,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,MAAM;MACH,MAAMG,eAAe,GAAGb,KAAK,CAACc,WAAW,CAAC,CAAC;MAC3C,MAAMC,cAAc,GAAGR,QAAQ,CAACC,IAAI,CAACG,MAAM,CAACK,MAAM,CAC7CC,KAAK,IACFA,KAAK,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAC,CAAC,KAAKlB,KAAK,IAClCiB,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC,KAAKD,eACvC,CAAC;MAED,IAAIE,cAAc,CAACH,MAAM,GAAG,CAAC,EAAE;QAC3BF,SAAS,CAACK,cAAc,CAAC;QACzBb,QAAQ,CAAC,EAAE,CAAC;MAChB,CAAC,MAAM;QACHA,QAAQ,CAAC,cAAc,CAAC;QACxBQ,SAAS,CAAC,EAAE,CAAC;MACjB;IACJ;EACJ,CAAC,CAAC,CACDS,KAAK,CAAEV,KAAK,IAAK;IACdW,OAAO,CAACX,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;IACvCP,QAAQ,CAAC,iBAAiB,CAAC;IAC3BQ,SAAS,CAAC,EAAE,CAAC;EACjB,CAAC,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}