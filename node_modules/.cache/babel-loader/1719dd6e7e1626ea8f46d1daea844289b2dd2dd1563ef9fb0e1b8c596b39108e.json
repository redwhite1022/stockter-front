{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 매출액 데이터 상태\n  const [annualSales, setAnnualSales] = useState(null);\n  const [loadingSales, setLoadingSales] = useState(false);\n  const [salesError, setSalesError] = useState(\"\");\n\n  // ---------------------------\n  // 1) 검색 함수\n  // ---------------------------\n  const fetchData = useCallback((searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        const mappedData = response.data.stocks.map(stock => ({\n          ...stock,\n          매출액: cleanValue(stock[\"매출액\"]),\n          영업이익: cleanValue(stock[\"영업이익\"]),\n          영업이익률: cleanValue(stock[\"영업이익률\"]),\n          시가배당률: cleanValue(stock[\"시가배당률(%)\"])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0] || null);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 오류:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n    });\n  }, [query]);\n\n  // ---------------------------\n  // 2) 자동완성 로직\n  // ---------------------------\n  const handleQueryChange = useCallback(e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n\n          // 입력값으로 시작하는 종목 우선 정렬\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n\n          // 최대 10개까지만\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  }, []);\n  const handleSuggestionClick = useCallback(stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    setHighlightedStock(stock);\n    fetchData(stock[\"종목명\"]);\n  }, [fetchData]);\n  const handleKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  }, [fetchData]);\n\n  // ---------------------------\n  // 3) 기타 이벤트\n  // ---------------------------\n  const resetState = useCallback(() => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n    setAnnualSales(null);\n    setSalesError(\"\");\n  }, []);\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = useCallback((text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  }, []);\n\n  // ---------------------------\n  // 4) 매출액 등 버튼 핸들러\n  // ---------------------------\n  const handleButtonClick = useCallback(async buttonName => {\n    if (loadingSales) {\n      console.warn(\"매출액 데이터 로드 중입니다. 잠시만 기다려주세요.\");\n      return; // 이미 로딩 중이면 함수 종료\n    }\n    console.log(`${buttonName} 버튼이 클릭되었습니다.`);\n    if (buttonName === '매출액') {\n      if (!highlightedStock || !highlightedStock[\"종목코드\"]) {\n        setSalesError(\"종목을 먼저 선택하세요.\");\n        return;\n      }\n      setLoadingSales(true);\n      setSalesError(\"\");\n      setAnnualSales(null);\n      try {\n        // /annual-sales?stock_code=XXXXX\n        const response = await axios.get(\"http://127.0.0.1:8000/annual-sales\", {\n          params: {\n            stock_code: highlightedStock[\"종목코드\"]\n          }\n        });\n        console.log(\"매출액 API 응답 데이터:\", response.data);\n        setAnnualSales(response.data.annual_sales);\n      } catch (error) {\n        console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\n        setSalesError(\"매출액 데이터를 가져오는 중 오류가 발생했습니다.\");\n      } finally {\n        setLoadingSales(false);\n      }\n    }\n\n    // 다른 버튼 로직은 추후 추가 가능\n  }, [highlightedStock, loadingSales]);\n\n  // ---------------------------\n  // 5) JSX 반환\n  // ---------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-buttons\",\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('매출액'),\n        disabled: loadingSales,\n        children: loadingSales ? \"매출액 로딩 중...\" : \"매출액\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('영업이익'),\n        children: \"\\uC601\\uC5C5\\uC774\\uC775\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('영업이익률'),\n        children: \"\\uC601\\uC5C5\\uC774\\uC775\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick('시가배당률'),\n        children: \"\\uC2DC\\uAC00\\uBC30\\uB2F9\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 17\n    }, this), loadingSales && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB9E4\\uCD9C\\uC561 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 30\n    }, this), salesError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: salesError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 28\n    }, this), annualSales && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"annual-sales\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5F0\\uAC04 \\uB9E4\\uCD9C\\uC561 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uC5F0\\uB3C4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\uB9E4\\uCD9C\\uC561\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 303,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: annualSales.map((yearData, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: yearData.year\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [Number(yearData.sales).toLocaleString(), \" \\uC6D0\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"EmhMJD/aD9jIdEGfgTx+bE33pKo=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","StockTable","jsxDEV","_jsxDEV","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","annualSales","setAnnualSales","loadingSales","setLoadingSales","salesError","setSalesError","fetchData","searchQuery","trim","get","params","then","response","data","length","mappedData","map","stock","매출액","cleanValue","영업이익","영업이익률","시가배당률","catch","console","handleQueryChange","e","input","target","value","lowercasedInput","toLowerCase","filtered","filter","stockCode","toString","stockName","includes","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","replace","match","handleButtonClick","buttonName","warn","log","stock_code","annual_sales","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","gap","flexWrap","disabled","yearData","year","Number","sales","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 매출액 데이터 상태\r\n    const [annualSales, setAnnualSales] = useState(null);\r\n    const [loadingSales, setLoadingSales] = useState(false);\r\n    const [salesError, setSalesError] = useState(\"\");\r\n\r\n    // ---------------------------\r\n    // 1) 검색 함수\r\n    // ---------------------------\r\n    const fetchData = useCallback((searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n    \r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    const mappedData = response.data.stocks.map((stock) => ({\r\n                        ...stock,\r\n                        매출액: cleanValue(stock[\"매출액\"]),\r\n                        영업이익: cleanValue(stock[\"영업이익\"]),\r\n                        영업이익률: cleanValue(stock[\"영업이익률\"]),\r\n                        시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\r\n                    }));\r\n    \r\n                    setStocks(mappedData);\r\n                    setHighlightedStock(mappedData[0] || null);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 오류:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n            });\r\n    }, [query]);\r\n\r\n    // ---------------------------\r\n    // 2) 자동완성 로직\r\n    // ---------------------------\r\n    const handleQueryChange = useCallback((e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 입력값으로 시작하는 종목 우선 정렬\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 최대 10개까지만\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const handleSuggestionClick = useCallback((stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(stock);\r\n        fetchData(stock[\"종목명\"]);\r\n    }, [fetchData]);\r\n\r\n    const handleKeyPress = useCallback((e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    }, [fetchData]);\r\n\r\n    // ---------------------------\r\n    // 3) 기타 이벤트\r\n    // ---------------------------\r\n    const resetState = useCallback(() => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n        setAnnualSales(null);\r\n        setSalesError(\"\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = useCallback((text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    }, []);\r\n\r\n    // ---------------------------\r\n    // 4) 매출액 등 버튼 핸들러\r\n    // ---------------------------\r\n    const handleButtonClick = useCallback(async (buttonName) => {\r\n        if (loadingSales) {\r\n            console.warn(\"매출액 데이터 로드 중입니다. 잠시만 기다려주세요.\");\r\n            return; // 이미 로딩 중이면 함수 종료\r\n        }\r\n\r\n        console.log(`${buttonName} 버튼이 클릭되었습니다.`);\r\n\r\n        if (buttonName === '매출액') {\r\n\r\n            if (!highlightedStock || !highlightedStock[\"종목코드\"]) {\r\n                setSalesError(\"종목을 먼저 선택하세요.\");\r\n                return;\r\n            }\r\n\r\n            setLoadingSales(true);\r\n            setSalesError(\"\");\r\n            setAnnualSales(null);\r\n\r\n            try {\r\n\r\n                // /annual-sales?stock_code=XXXXX\r\n                const response = await axios.get(\"http://127.0.0.1:8000/annual-sales\", {\r\n                    params: { stock_code: highlightedStock[\"종목코드\"] },\r\n                });\r\n                console.log(\"매출액 API 응답 데이터:\", response.data);\r\n                setAnnualSales(response.data.annual_sales);\r\n            } catch (error) {\r\n                console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\r\n                setSalesError(\"매출액 데이터를 가져오는 중 오류가 발생했습니다.\");\r\n            } finally {\r\n                setLoadingSales(false);\r\n            }\r\n        }\r\n\r\n        // 다른 버튼 로직은 추후 추가 가능\r\n    }, [highlightedStock, loadingSales]);\r\n\r\n    // ---------------------------\r\n    // 5) JSX 반환\r\n    // ---------------------------\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2\r\n                onClick={resetState}\r\n                style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}\r\n            >\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div style={{ position: \"relative\", width: \"100%\", maxWidth: \"600px\", marginBottom: \"20px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {/* 버튼들 */}\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    className=\"sort-buttons\"\r\n                    style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}\r\n                >\r\n                    <button\r\n                        onClick={() => handleButtonClick('매출액')}\r\n                        disabled={loadingSales}\r\n                    >\r\n                        {loadingSales ? \"매출액 로딩 중...\" : \"매출액\"}\r\n                    </button>\r\n                    <button onClick={() => handleButtonClick('영업이익')}>영업이익</button>\r\n                    <button onClick={() => handleButtonClick('영업이익률')}>영업이익률</button>\r\n                    <button onClick={() => handleButtonClick('시가배당률')}>시가배당률</button>\r\n                </div>\r\n            )}\r\n\r\n            {/* 매출액 데이터 표시 */}\r\n            {loadingSales && <p>매출액 데이터를 로드 중입니다...</p>}\r\n            {salesError && <p className=\"error-message\">{salesError}</p>}\r\n            {annualSales && (\r\n                <div className=\"annual-sales\" style={{ marginTop: \"20px\" }}>\r\n                    <h3>연간 매출액 정보</h3>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>연도</th>\r\n                                <th>매출액</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {annualSales.map((yearData, index) => (\r\n                                <tr key={index}>\r\n                                    <td>{yearData.year}</td>\r\n                                    {/* toLocaleString()로 3자리 콤마 표시 */}\r\n                                    <td>{Number(yearData.sales).toLocaleString()} 원</td>\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}