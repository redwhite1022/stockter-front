{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\StockTable.jsx\";\n// src/components/StockTable.jsx\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StockTable = ({\n  stocks,\n  formatNumber\n}) => {\n  // 숫자 포맷팅 함수 기본값\n  const defaultFormatNumber = (key, number) => {\n    if (typeof number !== \"number\" || isNaN(number)) return number;\n    if (key === \"시가총액\") {\n      return (number / 10 ** 8).toFixed(2) + \"억\";\n    } else if (key === \"매출액\") {\n      if (number >= 10 ** 12) {\n        const trillion = Math.floor(number / 10 ** 12);\n        const remaining = Math.floor(number % 10 ** 12 / 10 ** 8);\n        return `${trillion}조 ${remaining}억원`;\n      } else if (number >= 10 ** 8) {\n        return (number / 10 ** 8).toFixed(2) + \"억원\";\n      } else {\n        return number.toString();\n      }\n    } else {\n      return number.toString();\n    }\n  };\n  const formatter = formatNumber || defaultFormatNumber;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      overflowX: \"auto\",\n      marginTop: \"20px\",\n      textAlign: \"left\",\n      width: \"100%\",\n      display: \"flex\",\n      justifyContent: \"center\"\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: \"max-content\",\n        borderCollapse: \"collapse\",\n        backgroundColor: \"#fff\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              padding: \"8px\",\n              background: \"#f2f2f2\",\n              textAlign: \"center\"\n            },\n            children: key\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.entries(stock).map(([key, value], idx) => {\n            // '시가총액'과 '매출액' 관련 컬럼은 포맷팅\n            if (key === \"시가총액\" || key === \"매출액\") {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"8px\",\n                  textAlign: \"center\"\n                },\n                children: formatter(key, value)\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 41\n              }, this);\n            } else {\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                style: {\n                  padding: \"8px\",\n                  textAlign: \"center\"\n                },\n                children: value\n              }, idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 41\n              }, this);\n            }\n          })\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = StockTable;\nexport default StockTable;\nvar _c;\n$RefreshReg$(_c, \"StockTable\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","StockTable","stocks","formatNumber","defaultFormatNumber","key","number","isNaN","toFixed","trillion","Math","floor","remaining","toString","formatter","style","overflowX","marginTop","textAlign","width","display","justifyContent","children","border","borderCollapse","backgroundColor","Object","keys","map","index","padding","background","fileName","_jsxFileName","lineNumber","columnNumber","stock","entries","value","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/StockTable.jsx"],"sourcesContent":["// src/components/StockTable.jsx\r\nimport React from \"react\";\r\n\r\nconst StockTable = ({ stocks, formatNumber }) => {\r\n    // 숫자 포맷팅 함수 기본값\r\n    const defaultFormatNumber = (key, number) => {\r\n        if (typeof number !== \"number\" || isNaN(number)) return number;\r\n\r\n        if (key === \"시가총액\") {\r\n            return (number / 10 ** 8).toFixed(2) + \"억\";\r\n        } else if (key === \"매출액\") {\r\n            if (number >= 10 ** 12) {\r\n                const trillion = Math.floor(number / 10 ** 12);\r\n                const remaining = Math.floor((number % 10 ** 12) / 10 ** 8);\r\n                return `${trillion}조 ${remaining}억원`;\r\n            } else if (number >= 10 ** 8) {\r\n                return (number / 10 ** 8).toFixed(2) + \"억원\";\r\n            } else {\r\n                return number.toString();\r\n            }\r\n        } else {\r\n            return number.toString();\r\n        }\r\n    };\r\n\r\n    const formatter = formatNumber || defaultFormatNumber;\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                overflowX: \"auto\",\r\n                marginTop: \"20px\",\r\n                textAlign: \"left\",\r\n                width: \"100%\",\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n            }}\r\n        >\r\n            <table\r\n                border=\"1\"\r\n                style={{\r\n                    width: \"max-content\",\r\n                    borderCollapse: \"collapse\",\r\n                    backgroundColor: \"#fff\",\r\n                }}\r\n            >\r\n                <thead>\r\n                    <tr>\r\n                        {Object.keys(stocks[0]).map((key, index) => (\r\n                            <th\r\n                                key={index}\r\n                                style={{\r\n                                    padding: \"8px\",\r\n                                    background: \"#f2f2f2\",\r\n                                    textAlign: \"center\",\r\n                                }}\r\n                            >\r\n                                {key}\r\n                            </th>\r\n                        ))}\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {stocks.map((stock, index) => (\r\n                        <tr key={index}>\r\n                            {Object.entries(stock).map(([key, value], idx) => {\r\n                                // '시가총액'과 '매출액' 관련 컬럼은 포맷팅\r\n                                if (key === \"시가총액\" || key === \"매출액\") {\r\n                                    return (\r\n                                        <td\r\n                                            key={idx}\r\n                                            style={{\r\n                                                padding: \"8px\",\r\n                                                textAlign: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            {formatter(key, value)}\r\n                                        </td>\r\n                                    );\r\n                                } else {\r\n                                    return (\r\n                                        <td\r\n                                            key={idx}\r\n                                            style={{\r\n                                                padding: \"8px\",\r\n                                                textAlign: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            {value}\r\n                                        </td>\r\n                                    );\r\n                                }\r\n                            })}\r\n                        </tr>\r\n                    ))}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StockTable;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}