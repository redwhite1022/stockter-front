{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\n// src/components/SearchPage.jsx\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\"; // 재사용 가능한 테이블 컴포넌트\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    if (typeof searchQuery !== \"string\") {\n      setError(\"유효하지 않은 검색어입니다.\");\n      return;\n    }\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 입력값 변경\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n\n  // 추천 클릭\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n\n  // 엔터 키 동작\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // 초기 상태로 리셋\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n  };\n\n  // 외부 클릭 이벤트 감지\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n\n  // 검색어 강조 표시 함수\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      width: \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textAlign: \"center\",\n        marginBottom: \"20px\"\n      },\n      children: \"Stockter - \\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: query,\n        onChange: handleQueryChange,\n        onKeyPress: handleKeyPress,\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px 0 0 4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => fetchData(),\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"0 4px 4px 0\",\n          cursor: \"pointer\",\n          minWidth: \"120px\"\n        },\n        children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        style: {\n          position: \"absolute\",\n          top: \"50px\",\n          width: \"100%\",\n          maxWidth: \"600px\",\n          background: \"#fff\",\n          border: \"1px solid #ccc\",\n          zIndex: 1000,\n          maxHeight: \"200px\",\n          overflowY: \"auto\"\n        },\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#e6f7ff\",\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = \"white\",\n          onClick: () => handleSuggestionClick(stock),\n          style: {\n            padding: \"8px\",\n            cursor: \"pointer\",\n            borderBottom: \"1px solid #eee\",\n            transition: \"background-color 0.2s ease\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"], query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목코드\"].toString(), query)\n            },\n            style: {\n              color: \"#666\",\n              fontSize: \"14px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\",\n        marginBottom: \"20px\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 23\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"U2V+1toZ8IbdJsrXfSf8eT8BMc4=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","StockTable","jsxDEV","_jsxDEV","SearchPage","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","fetchData","searchQuery","trim","get","params","then","response","data","length","catch","console","handleQueryChange","e","input","target","value","lowercasedInput","toLowerCase","filtered","filter","stock","stockCode","toString","stockName","includes","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","replace","match","style","display","flexDirection","alignItems","width","children","onClick","cursor","color","textAlign","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","Math","min","position","justifyContent","type","placeholder","onChange","onKeyPress","flex","padding","fontSize","border","borderRadius","background","minWidth","ref","top","maxWidth","zIndex","maxHeight","overflowY","map","index","onMouseEnter","currentTarget","backgroundColor","onMouseLeave","borderBottom","transition","dangerouslySetInnerHTML","__html","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/SearchPage.jsx"],"sourcesContent":["// src/components/SearchPage.jsx\r\nimport React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\"; // 재사용 가능한 테이블 컴포넌트\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        if (typeof searchQuery !== \"string\") {\r\n            setError(\"유효하지 않은 검색어입니다.\");\r\n            return;\r\n        }\r\n\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 입력값 변경\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    // 추천 클릭\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    // 엔터 키 동작\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // 초기 상태로 리셋\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n    };\r\n\r\n    // 외부 클릭 이벤트 감지\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    // 검색어 강조 표시 함수\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n            }}\r\n        >\r\n            <h1\r\n                onClick={resetState}\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                Stockter - 종목검색\r\n            </h1>\r\n\r\n            {/* 검색창 */}\r\n            <div\r\n                style={{\r\n                    marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"600px\",\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"종목명 또는 종목코드 입력\"\r\n                    value={query}\r\n                    onChange={handleQueryChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    style={{\r\n                        flex: 1,\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px 0 0 4px\",\r\n                    }}\r\n                />\r\n                {/* onClick 핸들러 수정 */}\r\n                <button\r\n                    onClick={() => fetchData()}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"16px\",\r\n                        background: \"#007bff\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        borderRadius: \"0 4px 4px 0\",\r\n                        cursor: \"pointer\",\r\n                        minWidth: \"120px\",\r\n                    }}\r\n                >\r\n                    종목 검색\r\n                </button>\r\n                {isDropdownOpen && (\r\n                    <div\r\n                        ref={dropdownRef}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50px\",\r\n                            width: \"100%\",\r\n                            maxWidth: \"600px\",\r\n                            background: \"#fff\",\r\n                            border: \"1px solid #ccc\",\r\n                            zIndex: 1000,\r\n                            maxHeight: \"200px\",\r\n                            overflowY: \"auto\",\r\n                        }}\r\n                    >\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#e6f7ff\")}\r\n                                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"white\")}\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                                style={{\r\n                                    padding: \"8px\",\r\n                                    cursor: \"pointer\",\r\n                                    borderBottom: \"1px solid #eee\",\r\n                                    transition: \"background-color 0.2s ease\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"], query),\r\n                                    }}\r\n                                ></span>\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목코드\"].toString(), query),\r\n                                    }}\r\n                                    style={{ color: \"#666\", fontSize: \"14px\" }}\r\n                                ></span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p style={{ color: \"red\", marginBottom: \"20px\" }}>{error}</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && <StockTable stocks={stocks} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}