{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stockter\\\\front\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef, useCallback } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { Bar } from \"react-chartjs-2\";\nimport \"chart.js/auto\"; // 자동 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 재무 데이터 상태 (매출액, 영업이익, 순이익 등)\n  const [financialData, setFinancialData] = useState(null);\n  const [loadingFinancialData, setLoadingFinancialData] = useState(false);\n  const [financialError, setFinancialError] = useState(\"\");\n  const [selectedButton, setSelectedButton] = useState(\"매출액\"); // 현재 선택된 버튼 상태\n\n  // 차트 컨테이너에 대한 참조 생성\n  const chartRef = useRef(null);\n\n  // ---------------------------\n  // 공백/쉼표 정리 함수\n  // ---------------------------\n  const cleanValue = value => {\n    if (typeof value === \"string\") {\n      return value.replace(/[\\s,]+/g, \"\"); // 공백과 쉼표 제거\n    }\n    if (value === null || value === undefined) {\n      return \"N/A\"; // 빈 값 처리\n    }\n    return value; // 나머지는 그대로 반환\n  };\n\n  // ---------------------------\n  // 퍼센트인지 판별 함수\n  // ---------------------------\n  const isPercentage = buttonName => {\n    // 영업이익률, 부채비율은 % 단위\n    const percentageButtons = [\"영업이익률\", \"부채비율\"];\n    return percentageButtons.includes(buttonName);\n  };\n\n  // ---------------------------\n  // 1) 검색 함수\n  // ---------------------------\n  const fetchData = useCallback((searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        const mappedData = response.data.stocks.map(stock => ({\n          ...stock,\n          매출액: cleanValue(stock[\"매출액\"]),\n          영업이익: cleanValue(stock[\"영업이익\"]),\n          영업이익률: cleanValue(stock[\"영업이익률\"]),\n          시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\n          부채비율: cleanValue(stock[\"부채비율\"])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0] || null);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 오류:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n    });\n  }, [query]);\n\n  // ---------------------------\n  // 2) 자동완성 로직\n  // ---------------------------\n  const handleQueryChange = useCallback(e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n\n          // 입력값으로 시작하는 종목 우선 정렬\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n\n          // 최대 10개까지만\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  }, []);\n  const handleSuggestionClick = useCallback(stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    setHighlightedStock(stock);\n    fetchData(stock[\"종목명\"]);\n  }, [fetchData]);\n  const handleKeyPress = useCallback(e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n      setIsDropdownOpen(false);\n    }\n  }, [fetchData]);\n\n  // ---------------------------\n  // 3) 기타 이벤트\n  // ---------------------------\n  const resetState = useCallback(() => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n    setFinancialData(null);\n    setFinancialError(\"\");\n  }, []);\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = useCallback((text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  }, []);\n\n  // ---------------------------\n  // 4) 매출액, 영업이익, 영업이익률, 순이익, 부채비율 버튼 핸들러\n  // ---------------------------\n  const handleButtonClick = useCallback(async buttonName => {\n    if (loadingFinancialData) {\n      console.warn(`${buttonName} 데이터 로드 중입니다. 잠시만 기다려주세요.`);\n      return;\n    }\n    console.log(`${buttonName} 버튼이 클릭되었습니다.`);\n\n    // 백엔드 엔드포인트\n    let endpoint = \"\";\n    if (buttonName === \"매출액\") {\n      endpoint = \"financial-annual-sales\";\n    } else if (buttonName === \"영업이익\") {\n      endpoint = \"financial-operating-profit\";\n    } else if (buttonName === \"영업이익률\") {\n      endpoint = \"financial-operating-income-rate\";\n    } else if (buttonName === \"순이익\") {\n      endpoint = \"financial-net-income\";\n    } else if (buttonName === \"부채비율\") {\n      endpoint = \"financial-debt-ratio\";\n    } else {\n      console.warn(\"지원되지 않는 버튼입니다.\");\n      return;\n    }\n    if (!highlightedStock) {\n      setFinancialError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\n      return;\n    }\n    setLoadingFinancialData(true);\n    setFinancialError(\"\");\n    setFinancialData(null);\n    setSelectedButton(buttonName);\n    try {\n      const response = await axios.get(`https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`, {\n        params: {\n          stock_name: highlightedStock[\"종목명\"]\n        }\n      });\n      console.log(`${buttonName} API 응답 데이터:`, response.data);\n\n      // 기존 코드처럼 백엔드 응답을 각각의 속성에 따라 분기 처리\n      let data = null;\n      if (buttonName === \"매출액\" && response.data.annual_sales) {\n        data = response.data.annual_sales;\n      } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\n        data = response.data.operating_profit;\n      } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\n        data = response.data.operating_income_rate;\n      } else if (buttonName === \"순이익\" && response.data.net_income) {\n        data = response.data.net_income;\n      } else if (buttonName === \"부채비율\" && response.data.debt_ratio) {\n        data = response.data.debt_ratio;\n      }\n      if (data) {\n        setFinancialData(data);\n      } else {\n        setFinancialError(`${buttonName} 데이터가 없습니다.`);\n      }\n    } catch (error) {\n      console.error(`${buttonName} 데이터 로드 중 오류 발생:`, error);\n      setFinancialError(`${buttonName} 데이터를 가져오는 중 오류가 발생했습니다.`);\n    } finally {\n      setLoadingFinancialData(false);\n    }\n  }, [highlightedStock, loadingFinancialData]);\n\n  // ---------------------------\n  // 5) 자동 스크롤 useEffect\n  // ---------------------------\n  useEffect(() => {\n    if (financialData && financialData.length > 0 && chartRef.current) {\n      chartRef.current.scrollIntoView({\n        behavior: \"smooth\",\n        block: \"start\"\n      });\n    }\n  }, [financialData]);\n\n  // ---------------------------\n  // 6) JSX 반환\n  // ---------------------------\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 333,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 351,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 352,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\", \"부채비율\" // 등 필요 시 제외\n      ]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sort-buttons\",\n      style: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        gap: \"10px\",\n        flexWrap: \"wrap\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"매출액\"),\n        disabled: loadingFinancialData && selectedButton === \"매출액\",\n        children: loadingFinancialData && selectedButton === \"매출액\" ? \"매출액 로딩 중...\" : \"매출액\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"영업이익\"),\n        disabled: loadingFinancialData && selectedButton === \"영업이익\",\n        children: loadingFinancialData && selectedButton === \"영업이익\" ? \"영업이익 로딩 중...\" : \"영업이익\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"영업이익률\"),\n        disabled: loadingFinancialData && selectedButton === \"영업이익률\",\n        children: loadingFinancialData && selectedButton === \"영업이익률\" ? \"영업이익률 로딩 중...\" : \"영업이익률\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"순이익\"),\n        disabled: loadingFinancialData && selectedButton === \"순이익\",\n        children: loadingFinancialData && selectedButton === \"순이익\" ? \"순이익 로딩 중...\" : \"순이익\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"부채비율\"),\n        disabled: loadingFinancialData && selectedButton === \"부채비율\",\n        children: loadingFinancialData && selectedButton === \"부채비율\" ? \"부채비율 로딩 중...\" : \"부채비율\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 17\n    }, this), loadingFinancialData && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 38\n    }, this), financialError && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: financialError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 426,\n      columnNumber: 32\n    }, this), financialData && financialData.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"financial-data-chart\",\n      style: {\n        marginTop: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-container\",\n        ref: chartRef,\n        style: {\n          height: \"400px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Bar, {\n          data: {\n            labels: financialData.map(item => item.연도),\n            datasets: [{\n              // 영업이익률, 부채비율만 % 단위로 표시\n              label: isPercentage(selectedButton) ? `${selectedButton} (%)` : `${selectedButton} (억)`,\n              data: financialData.map(item => {\n                // 백엔드에서 넘겨준 key와 매핑\n                if (isPercentage(selectedButton)) {\n                  // 영업이익률, 부채비율\n                  return item[selectedButton === \"영업이익률\" ? \"영업이익률\" : \"부채비율\"];\n                }\n                // 그 외(매출액, 영업이익, 순이익 등)\n                return item[selectedButton];\n              }),\n              backgroundColor: selectedButton === \"매출액\" ? \"rgba(75, 192, 192, 0.6)\" : selectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 0.6)\" : selectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 0.6)\" : selectedButton === \"순이익\" ? \"rgba(153, 102, 255, 0.6)\" : selectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 0.6)\" : \"rgba(75, 192, 192, 0.6)\",\n              borderColor: selectedButton === \"매출액\" ? \"rgba(75, 192, 192, 1)\" : selectedButton === \"영업이익\" ? \"rgba(255, 159, 64, 1)\" : selectedButton === \"영업이익률\" ? \"rgba(54, 162, 235, 1)\" : selectedButton === \"순이익\" ? \"rgba(153, 102, 255, 1)\" : selectedButton === \"부채비율\" ? \"rgba(255, 206, 86, 1)\" : \"rgba(75, 192, 192, 1)\",\n              borderWidth: 1\n            }]\n          },\n          options: {\n            responsive: true,\n            maintainAspectRatio: false,\n            plugins: {\n              legend: {\n                position: \"top\"\n              },\n              title: {\n                display: true,\n                text: `${highlightedStock[\"종목명\"]} 연간 ${selectedButton}`\n              }\n            },\n            scales: {\n              y: {\n                beginAtZero: false,\n                ticks: {\n                  callback: function (value) {\n                    if (isPercentage(selectedButton)) {\n                      return value.toFixed(1) + \"%\";\n                    }\n                    return value.toLocaleString() + \"억\";\n                  }\n                }\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 432,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 430,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 290,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"zfEhpqCfJBVKw4o7Ep2+wdCir5o=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","StockTable","Bar","jsxDEV","_jsxDEV","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","financialData","setFinancialData","loadingFinancialData","setLoadingFinancialData","financialError","setFinancialError","selectedButton","setSelectedButton","chartRef","cleanValue","value","replace","undefined","isPercentage","buttonName","percentageButtons","includes","fetchData","searchQuery","trim","get","params","then","response","data","length","mappedData","map","stock","매출액","영업이익","영업이익률","시가배당률","부채비율","catch","console","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockCode","toString","stockName","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","handleButtonClick","warn","log","endpoint","stock_name","annual_sales","operating_profit","operating_income_rate","net_income","debt_ratio","scrollIntoView","behavior","block","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","gap","flexWrap","disabled","height","labels","item","연도","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","title","scales","y","beginAtZero","ticks","callback","toFixed","toLocaleString","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stockter/front/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\"; // 자동 등록\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 재무 데이터 상태 (매출액, 영업이익, 순이익 등)\r\n    const [financialData, setFinancialData] = useState(null);\r\n    const [loadingFinancialData, setLoadingFinancialData] = useState(false);\r\n    const [financialError, setFinancialError] = useState(\"\");\r\n    const [selectedButton, setSelectedButton] = useState(\"매출액\"); // 현재 선택된 버튼 상태\r\n\r\n    // 차트 컨테이너에 대한 참조 생성\r\n    const chartRef = useRef(null);\r\n\r\n    // ---------------------------\r\n    // 공백/쉼표 정리 함수\r\n    // ---------------------------\r\n    const cleanValue = (value) => {\r\n        if (typeof value === \"string\") {\r\n            return value.replace(/[\\s,]+/g, \"\"); // 공백과 쉼표 제거\r\n        }\r\n        if (value === null || value === undefined) {\r\n            return \"N/A\"; // 빈 값 처리\r\n        }\r\n        return value; // 나머지는 그대로 반환\r\n    };\r\n\r\n    // ---------------------------\r\n    // 퍼센트인지 판별 함수\r\n    // ---------------------------\r\n    const isPercentage = (buttonName) => {\r\n        // 영업이익률, 부채비율은 % 단위\r\n        const percentageButtons = [\"영업이익률\", \"부채비율\"];\r\n        return percentageButtons.includes(buttonName);\r\n    };\r\n\r\n    // ---------------------------\r\n    // 1) 검색 함수\r\n    // ---------------------------\r\n    const fetchData = useCallback(\r\n        (searchQuery = query) => {\r\n            if (!searchQuery.trim()) {\r\n                setError(\"검색어를 입력하세요.\");\r\n                return;\r\n            }\r\n            setError(\"\");\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\r\n                    params: { query: searchQuery },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"검색 결과가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        const mappedData = response.data.stocks.map((stock) => ({\r\n                            ...stock,\r\n                            매출액: cleanValue(stock[\"매출액\"]),\r\n                            영업이익: cleanValue(stock[\"영업이익\"]),\r\n                            영업이익률: cleanValue(stock[\"영업이익률\"]),\r\n                            시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\r\n                            부채비율: cleanValue(stock[\"부채비율\"]),\r\n                        }));\r\n\r\n                        setStocks(mappedData);\r\n                        setHighlightedStock(mappedData[0] || null);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 오류:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                });\r\n        },\r\n        [query]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 2) 자동완성 로직\r\n    // ---------------------------\r\n    const handleQueryChange = useCallback((e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", {\r\n                    params: { query: input },\r\n                })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 입력값으로 시작하는 종목 우선 정렬\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 최대 10개까지만\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const handleSuggestionClick = useCallback(\r\n        (stock) => {\r\n            setQuery(stock[\"종목명\"]);\r\n            setIsDropdownOpen(false);\r\n            setHighlightedStock(stock);\r\n            fetchData(stock[\"종목명\"]);\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    const handleKeyPress = useCallback(\r\n        (e) => {\r\n            if (e.key === \"Enter\") {\r\n                fetchData();\r\n                setIsDropdownOpen(false);\r\n            }\r\n        },\r\n        [fetchData]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 3) 기타 이벤트\r\n    // ---------------------------\r\n    const resetState = useCallback(() => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n        setFinancialData(null);\r\n        setFinancialError(\"\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = useCallback((text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    }, []);\r\n\r\n    // ---------------------------\r\n    // 4) 매출액, 영업이익, 영업이익률, 순이익, 부채비율 버튼 핸들러\r\n    // ---------------------------\r\n    const handleButtonClick = useCallback(\r\n        async (buttonName) => {\r\n            if (loadingFinancialData) {\r\n                console.warn(`${buttonName} 데이터 로드 중입니다. 잠시만 기다려주세요.`);\r\n                return;\r\n            }\r\n\r\n            console.log(`${buttonName} 버튼이 클릭되었습니다.`);\r\n\r\n            // 백엔드 엔드포인트\r\n            let endpoint = \"\";\r\n            if (buttonName === \"매출액\") {\r\n                endpoint = \"financial-annual-sales\";\r\n            } else if (buttonName === \"영업이익\") {\r\n                endpoint = \"financial-operating-profit\";\r\n            } else if (buttonName === \"영업이익률\") {\r\n                endpoint = \"financial-operating-income-rate\";\r\n            } else if (buttonName === \"순이익\") {\r\n                endpoint = \"financial-net-income\";\r\n            } else if (buttonName === \"부채비율\") {\r\n                endpoint = \"financial-debt-ratio\";\r\n            } else {\r\n                console.warn(\"지원되지 않는 버튼입니다.\");\r\n                return;\r\n            }\r\n\r\n            if (!highlightedStock) {\r\n                setFinancialError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\r\n                return;\r\n            }\r\n\r\n            setLoadingFinancialData(true);\r\n            setFinancialError(\"\");\r\n            setFinancialData(null);\r\n            setSelectedButton(buttonName);\r\n\r\n            try {\r\n                const response = await axios.get(\r\n                    `https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`,\r\n                    {\r\n                        params: { stock_name: highlightedStock[\"종목명\"] },\r\n                    }\r\n                );\r\n                console.log(`${buttonName} API 응답 데이터:`, response.data);\r\n\r\n                // 기존 코드처럼 백엔드 응답을 각각의 속성에 따라 분기 처리\r\n                let data = null;\r\n                if (buttonName === \"매출액\" && response.data.annual_sales) {\r\n                    data = response.data.annual_sales;\r\n                } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\r\n                    data = response.data.operating_profit;\r\n                } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\r\n                    data = response.data.operating_income_rate;\r\n                } else if (buttonName === \"순이익\" && response.data.net_income) {\r\n                    data = response.data.net_income;\r\n                } else if (buttonName === \"부채비율\" && response.data.debt_ratio) {\r\n                    data = response.data.debt_ratio;\r\n                }\r\n\r\n                if (data) {\r\n                    setFinancialData(data);\r\n                } else {\r\n                    setFinancialError(`${buttonName} 데이터가 없습니다.`);\r\n                }\r\n            } catch (error) {\r\n                console.error(`${buttonName} 데이터 로드 중 오류 발생:`, error);\r\n                setFinancialError(`${buttonName} 데이터를 가져오는 중 오류가 발생했습니다.`);\r\n            } finally {\r\n                setLoadingFinancialData(false);\r\n            }\r\n        },\r\n        [highlightedStock, loadingFinancialData]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 5) 자동 스크롤 useEffect\r\n    // ---------------------------\r\n    useEffect(() => {\r\n        if (financialData && financialData.length > 0 && chartRef.current) {\r\n            chartRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n    }, [financialData]);\r\n\r\n    // ---------------------------\r\n    // 6) JSX 반환\r\n    // ---------------------------\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            {/* 상단 제목 클릭 시 reset */}\r\n            <h2\r\n                onClick={resetState}\r\n                style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}\r\n            >\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div\r\n                style={{\r\n                    position: \"relative\",\r\n                    width: \"100%\",\r\n                    maxWidth: \"600px\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {/* 에러 메시지 */}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 검색 결과 테이블 (주가 기본 정보) */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                        \"부채비율\", // 등 필요 시 제외\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {/* 연간 재무 데이터 버튼 */}\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    className=\"sort-buttons\"\r\n                    style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}\r\n                >\r\n                    <button\r\n                        onClick={() => handleButtonClick(\"매출액\")}\r\n                        disabled={loadingFinancialData && selectedButton === \"매출액\"}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === \"매출액\"\r\n                            ? \"매출액 로딩 중...\"\r\n                            : \"매출액\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick(\"영업이익\")}\r\n                        disabled={loadingFinancialData && selectedButton === \"영업이익\"}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === \"영업이익\"\r\n                            ? \"영업이익 로딩 중...\"\r\n                            : \"영업이익\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick(\"영업이익률\")}\r\n                        disabled={loadingFinancialData && selectedButton === \"영업이익률\"}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === \"영업이익률\"\r\n                            ? \"영업이익률 로딩 중...\"\r\n                            : \"영업이익률\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick(\"순이익\")}\r\n                        disabled={loadingFinancialData && selectedButton === \"순이익\"}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === \"순이익\"\r\n                            ? \"순이익 로딩 중...\"\r\n                            : \"순이익\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick(\"부채비율\")}\r\n                        disabled={loadingFinancialData && selectedButton === \"부채비율\"}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === \"부채비율\"\r\n                            ? \"부채비율 로딩 중...\"\r\n                            : \"부채비율\"}\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* 로딩/오류 메시지 */}\r\n            {loadingFinancialData && <p>데이터를 로드 중입니다...</p>}\r\n            {financialError && <p className=\"error-message\">{financialError}</p>}\r\n\r\n            {/* 차트 표시 (financialData) */}\r\n            {financialData && financialData.length > 0 && (\r\n                <div className=\"financial-data-chart\" style={{ marginTop: \"20px\" }}>\r\n                    <div className=\"chart-container\" ref={chartRef} style={{ height: \"400px\" }}>\r\n                        <Bar\r\n                            data={{\r\n                                labels: financialData.map((item) => item.연도),\r\n                                datasets: [\r\n                                    {\r\n                                        // 영업이익률, 부채비율만 % 단위로 표시\r\n                                        label: isPercentage(selectedButton)\r\n                                            ? `${selectedButton} (%)`\r\n                                            : `${selectedButton} (억)`,\r\n                                        data: financialData.map((item) => {\r\n                                            // 백엔드에서 넘겨준 key와 매핑\r\n                                            if (isPercentage(selectedButton)) {\r\n                                                // 영업이익률, 부채비율\r\n                                                return item[\r\n                                                    selectedButton === \"영업이익률\"\r\n                                                        ? \"영업이익률\"\r\n                                                        : \"부채비율\"\r\n                                                ];\r\n                                            }\r\n                                            // 그 외(매출액, 영업이익, 순이익 등)\r\n                                            return item[selectedButton];\r\n                                        }),\r\n                                        backgroundColor:\r\n                                            selectedButton === \"매출액\"\r\n                                                ? \"rgba(75, 192, 192, 0.6)\"\r\n                                                : selectedButton === \"영업이익\"\r\n                                                ? \"rgba(255, 159, 64, 0.6)\"\r\n                                                : selectedButton === \"영업이익률\"\r\n                                                ? \"rgba(54, 162, 235, 0.6)\"\r\n                                                : selectedButton === \"순이익\"\r\n                                                ? \"rgba(153, 102, 255, 0.6)\"\r\n                                                : selectedButton === \"부채비율\"\r\n                                                ? \"rgba(255, 206, 86, 0.6)\"\r\n                                                : \"rgba(75, 192, 192, 0.6)\",\r\n                                        borderColor:\r\n                                            selectedButton === \"매출액\"\r\n                                                ? \"rgba(75, 192, 192, 1)\"\r\n                                                : selectedButton === \"영업이익\"\r\n                                                ? \"rgba(255, 159, 64, 1)\"\r\n                                                : selectedButton === \"영업이익률\"\r\n                                                ? \"rgba(54, 162, 235, 1)\"\r\n                                                : selectedButton === \"순이익\"\r\n                                                ? \"rgba(153, 102, 255, 1)\"\r\n                                                : selectedButton === \"부채비율\"\r\n                                                ? \"rgba(255, 206, 86, 1)\"\r\n                                                : \"rgba(75, 192, 192, 1)\",\r\n                                        borderWidth: 1,\r\n                                    },\r\n                                ],\r\n                            }}\r\n                            options={{\r\n                                responsive: true,\r\n                                maintainAspectRatio: false,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        position: \"top\",\r\n                                    },\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: `${highlightedStock[\"종목명\"]} 연간 ${selectedButton}`,\r\n                                    },\r\n                                },\r\n                                scales: {\r\n                                    y: {\r\n                                        beginAtZero: false,\r\n                                        ticks: {\r\n                                            callback: function (value) {\r\n                                                if (isPercentage(selectedButton)) {\r\n                                                    return value.toFixed(1) + \"%\";\r\n                                                }\r\n                                                return value.toLocaleString() + \"억\";\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}