{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 추가: 연도 선택 상태\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\n  const [currentMetric, setCurrentMetric] = useState(null);\n\n  // 숫자 포맷팅 함수 (억, 조 단위)\n  const formatNumber = number => {\n    if (number >= 10 ** 12) {\n      return (number / 10 ** 12).toFixed(2) + \"조\";\n    } else if (number >= 10 ** 8) {\n      return (number / 10 ** 8).toFixed(2) + \"억\";\n    } else {\n      return number.toString();\n    }\n  };\n\n  // 검색어 강조 표시 함수\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    setCurrentMetric(null); // 검색 시 현재 메트릭 초기화\n\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 시가총액 상위 50개 가져오기\n  const fetchTopStocksByMarketCap = () => {\n    axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"시가총액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 매출액 상위 50개 가져오기 (수정: 연도 파라미터 추가)\n  const fetchTopStocksByRevenue = year => {\n    axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n      params: {\n        year\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"매출액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 입력값 변경\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n\n  // 초기 상태로 리셋\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setCurrentMetric(null);\n  };\n\n  // 추천 클릭\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n\n  // 엔터 키 동작\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // 버튼 클릭 동작 (수정: '매출액' 버튼 처리 추가)\n  const handleButtonClick = metric => {\n    setCurrentMetric(metric);\n    if (metric === \"시가총액\") {\n      fetchTopStocksByMarketCap();\n    } else if (metric === \"매출액\") {\n      fetchTopStocksByRevenue(selectedYear);\n    } else {\n      // 다른 메트릭에 대한 처리 (필요 시 추가)\n      // 예: axios.get(`http://127.0.0.1:8000/top-${metric.toLowerCase()}`)\n      setError(`\"${metric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n    }\n  };\n\n  // 외부 클릭 이벤트 감지\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n\n  // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\n  useEffect(() => {\n    if (currentMetric === \"매출액\") {\n      fetchTopStocksByRevenue(selectedYear);\n    }\n    // 다른 메트릭에도 연도 적용이 필요하다면 여기에 추가\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      paddingTop: \"50px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textAlign: \"center\"\n      },\n      children: \"Stockter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\n        position: \"relative\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\",\n        width: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: query,\n        onChange: handleQueryChange,\n        onKeyPress: handleKeyPress,\n        style: {\n          flex: 1,\n          padding: \"10px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px 0 0 4px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: fetchData,\n        style: {\n          padding: \"10px 20px\",\n          fontSize: \"16px\",\n          background: \"#007bff\",\n          color: \"#fff\",\n          border: \"none\",\n          borderRadius: \"0 4px 4px 0\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        style: {\n          position: \"absolute\",\n          top: \"50px\",\n          width: \"100%\",\n          maxWidth: \"600px\",\n          background: \"#fff\",\n          border: \"1px solid #ccc\",\n          zIndex: 1000,\n          maxHeight: \"200px\",\n          overflowY: \"auto\"\n        },\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onMouseEnter: e => e.currentTarget.style.backgroundColor = \"#e6f7ff\",\n          onMouseLeave: e => e.currentTarget.style.backgroundColor = \"white\",\n          onClick: () => handleSuggestionClick(stock),\n          style: {\n            padding: \"8px\",\n            cursor: \"pointer\",\n            borderBottom: \"1px solid #eee\",\n            transition: \"background-color 0.2s ease\",\n            display: \"flex\",\n            justifyContent: \"space-between\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"], query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목코드\"].toString(), query)\n            },\n            style: {\n              color: \"#666\",\n              fontSize: \"14px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        width: \"80%\",\n        marginBottom: \"20px\",\n        justifyContent: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"시가총액\"),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: \"\\uC2DC\\uAC00\\uCD1D\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"매출액\"),\n          style: {\n            padding: \"10px\",\n            fontSize: \"14px\",\n            background: \"#f0f0f0\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: \"\\uB9E4\\uCD9C\\uC561\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          style: {\n            padding: \"8px\",\n            fontSize: \"14px\",\n            border: \"1px solid #ccc\",\n            borderRadius: \"4px\",\n            cursor: \"pointer\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2021\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2022\",\n            children: \"2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2023\",\n            children: \"2023\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2024\",\n            children: \"2024\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this), [\"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 13\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        marginTop: \"20px\",\n        textAlign: \"left\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\" // 가운데 정렬\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"max-content\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"8px\",\n                background: \"#f2f2f2\",\n                textAlign: \"center\"\n              },\n              children: key\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.entries(stock).map(([key, value], idx) => {\n              // '시가총액'과 '매출액' 관련 컬럼은 포맷팅\n              if (key.includes(\"시가총액\") || key.includes(\"매출액\")) {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: \"8px\",\n                    textAlign: \"center\"\n                  },\n                  children: formatNumber(value)\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 49\n                }, this);\n              } else {\n                return /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    padding: \"8px\",\n                    textAlign: \"center\"\n                  },\n                  children: value\n                }, idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 49\n                }, this);\n              }\n            })\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 206,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"GT2d2LV6n/VLVbVNXUMCFDSl+2Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","formatNumber","number","toFixed","toString","highlightMatch","text","regex","RegExp","replace","match","fetchData","searchQuery","trim","get","params","then","response","data","length","catch","console","fetchTopStocksByMarketCap","fetchTopStocksByRevenue","year","handleQueryChange","e","input","target","value","lowercasedInput","toLowerCase","filtered","filter","stock","stockCode","stockName","includes","startsWithQuery","startsWith","others","slice","resetState","handleSuggestionClick","handleKeyPress","key","handleButtonClick","metric","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","style","display","flexDirection","justifyContent","alignItems","height","paddingTop","fontFamily","children","onClick","cursor","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","Math","min","position","width","type","placeholder","onChange","onKeyPress","flex","padding","fontSize","border","borderRadius","background","ref","top","maxWidth","zIndex","maxHeight","overflowY","map","index","onMouseEnter","currentTarget","backgroundColor","onMouseLeave","borderBottom","transition","dangerouslySetInnerHTML","__html","flexWrap","gap","overflowX","marginTop","borderCollapse","Object","keys","entries","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 추가: 연도 선택 상태\r\n    const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n\r\n    // 숫자 포맷팅 함수 (억, 조 단위)\r\n    const formatNumber = (number) => {\r\n        if (number >= 10 ** 12) {\r\n            return (number / 10 ** 12).toFixed(2) + \"조\";\r\n        } else if (number >= 10 ** 8) {\r\n            return (number / 10 ** 8).toFixed(2) + \"억\";\r\n        } else {\r\n            return number.toString();\r\n        }\r\n    };\r\n\r\n    // 검색어 강조 표시 함수\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n        setCurrentMetric(null); // 검색 시 현재 메트릭 초기화\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 시가총액 상위 50개 가져오기\r\n    const fetchTopStocksByMarketCap = () => {\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"시가총액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 매출액 상위 50개 가져오기 (수정: 연도 파라미터 추가)\r\n    const fetchTopStocksByRevenue = (year) => {\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"매출액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 입력값 변경\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    // 초기 상태로 리셋\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setCurrentMetric(null);\r\n    };\r\n\r\n    // 추천 클릭\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    // 엔터 키 동작\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작 (수정: '매출액' 버튼 처리 추가)\r\n    const handleButtonClick = (metric) => {\r\n        setCurrentMetric(metric);\r\n        if (metric === \"시가총액\") {\r\n            fetchTopStocksByMarketCap();\r\n        } else if (metric === \"매출액\") {\r\n            fetchTopStocksByRevenue(selectedYear);\r\n        } else {\r\n            // 다른 메트릭에 대한 처리 (필요 시 추가)\r\n            // 예: axios.get(`http://127.0.0.1:8000/top-${metric.toLowerCase()}`)\r\n            setError(`\"${metric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n        }\r\n    };\r\n\r\n    // 외부 클릭 이벤트 감지\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\r\n    useEffect(() => {\r\n        if (currentMetric === \"매출액\") {\r\n            fetchTopStocksByRevenue(selectedYear);\r\n        }\r\n        // 다른 메트릭에도 연도 적용이 필요하다면 여기에 추가\r\n    }, [selectedYear]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                paddingTop: \"50px\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n            }}\r\n        >\r\n            <h1\r\n                onClick={resetState}\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n                Stockter\r\n            </h1>\r\n            <div\r\n                style={{\r\n                    marginBottom: isDropdownOpen ? `${Math.min(filteredStocks.length * 40, 200) + 40}px` : \"20px\",\r\n                    position: \"relative\",\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    width: \"600px\",\r\n                }}\r\n            >\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"종목명 또는 종목코드 입력\"\r\n                    value={query}\r\n                    onChange={handleQueryChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    style={{\r\n                        flex: 1,\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px 0 0 4px\",\r\n                    }}\r\n                />\r\n                <button\r\n                    onClick={fetchData}\r\n                    style={{\r\n                        padding: \"10px 20px\",\r\n                        fontSize: \"16px\",\r\n                        background: \"#007bff\",\r\n                        color: \"#fff\",\r\n                        border: \"none\",\r\n                        borderRadius: \"0 4px 4px 0\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                >\r\n                    종목 검색\r\n                </button>\r\n                {isDropdownOpen && (\r\n                    <div\r\n                        ref={dropdownRef}\r\n                        style={{\r\n                            position: \"absolute\",\r\n                            top: \"50px\",\r\n                            width: \"100%\",\r\n                            maxWidth: \"600px\",\r\n                            background: \"#fff\",\r\n                            border: \"1px solid #ccc\",\r\n                            zIndex: 1000,\r\n                            maxHeight: \"200px\",\r\n                            overflowY: \"auto\",\r\n                        }}\r\n                    >\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                onMouseEnter={(e) => (e.currentTarget.style.backgroundColor = \"#e6f7ff\")}\r\n                                onMouseLeave={(e) => (e.currentTarget.style.backgroundColor = \"white\")}\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                                style={{\r\n                                    padding: \"8px\",\r\n                                    cursor: \"pointer\",\r\n                                    borderBottom: \"1px solid #eee\",\r\n                                    transition: \"background-color 0.2s ease\",\r\n                                    display: \"flex\",\r\n                                    justifyContent: \"space-between\",\r\n                                }}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"], query),\r\n                                    }}\r\n                                ></span>\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목코드\"].toString(), query),\r\n                                    }}\r\n                                    style={{ color: \"#666\", fontSize: \"14px\" }}\r\n                                ></span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    flexWrap: \"wrap\",\r\n                    gap: \"10px\",\r\n                    width: \"80%\",\r\n                    marginBottom: \"20px\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                {/* 시가총액 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"시가총액\")}\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        fontSize: \"14px\",\r\n                        background: \"#f0f0f0\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                        cursor: \"pointer\",\r\n                    }}\r\n                >\r\n                    시가총액\r\n                </button>\r\n\r\n                {/* 매출액 버튼과 연도 선택 드롭다운 */}\r\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\r\n                    <button\r\n                        onClick={() => handleButtonClick(\"매출액\")}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    >\r\n                        매출액\r\n                    </button>\r\n                    <select\r\n                        value={selectedYear}\r\n                        onChange={(e) => setSelectedYear(e.target.value)}\r\n                        style={{\r\n                            padding: \"8px\",\r\n                            fontSize: \"14px\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    >\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2022\">2022</option>\r\n                        <option value=\"2023\">2023</option>\r\n                        <option value=\"2024\">2024</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* 나머지 메트릭 버튼 */}\r\n                {[\"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map((metric) => (\r\n                    <button\r\n                        key={metric}\r\n                        onClick={() => handleButtonClick(metric)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    >\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    style={{\r\n                        overflowX: \"auto\",\r\n                        marginTop: \"20px\",\r\n                        textAlign: \"left\",\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\", // 가운데 정렬\r\n                    }}\r\n                >\r\n                    <table\r\n                        border=\"1\"\r\n                        style={{\r\n                            width: \"max-content\",\r\n                            borderCollapse: \"collapse\",\r\n                        }}\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                {Object.keys(stocks[0]).map((key, index) => (\r\n                                    <th\r\n                                        key={index}\r\n                                        style={{\r\n                                            padding: \"8px\",\r\n                                            background: \"#f2f2f2\",\r\n                                            textAlign: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        {key}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {stocks.map((stock, index) => (\r\n                                <tr key={index}>\r\n                                    {Object.entries(stock).map(([key, value], idx) => {\r\n                                        // '시가총액'과 '매출액' 관련 컬럼은 포맷팅\r\n                                        if (key.includes(\"시가총액\") || key.includes(\"매출액\")) {\r\n                                            return (\r\n                                                <td\r\n                                                    key={idx}\r\n                                                    style={{\r\n                                                        padding: \"8px\",\r\n                                                        textAlign: \"center\",\r\n                                                    }}\r\n                                                >\r\n                                                    {formatNumber(value)}\r\n                                                </td>\r\n                                            );\r\n                                        } else {\r\n                                            return (\r\n                                                <td\r\n                                                    key={idx}\r\n                                                    style={{\r\n                                                        padding: \"8px\",\r\n                                                        textAlign: \"center\",\r\n                                                    }}\r\n                                                >\r\n                                                    {value}\r\n                                                </td>\r\n                                            );\r\n                                        }\r\n                                    })}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}