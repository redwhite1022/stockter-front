{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\FinancialStatementsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SimpleTable from \"./SimpleTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/FinancialStatementsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialStatementsPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\n  const [currentMetric, setCurrentMetric] = useState(null);\n\n  // 데이터 가져오기\n  const fetchTopStocksByMetric = () => {\n    if (currentMetric === \"시가총액\") {\n      axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"시가총액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"매출액\") {\n      axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"매출액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else {\n      setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n    }\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    setCurrentMetric(metric);\n  };\n\n  // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\n  useEffect(() => {\n    if (currentMetric) {\n      fetchTopStocksByMetric();\n    }\n  }, [selectedYear, currentMetric]);\n\n  // 메트릭 버튼 목록\n  const metrics = [\"시가총액\", \"매출액\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financial-statements-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC7AC\\uBB34\\uC81C\\uD45C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        gap: \"10px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"5px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"year-select\",\n          style: {\n            fontSize: \"14px\",\n            fontWeight: \"bold\"\n          },\n          children: \"\\uC5F0\\uB3C4 \\uC120\\uD0DD:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"year-select\",\n          value: selectedYear,\n          onChange: e => setSelectedYear(e.target.value),\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2021\",\n            children: \"2021\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2022\",\n            children: \"2022\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2023\",\n            children: \"2023\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2024\",\n            children: \"2024\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), metrics.map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 23\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(SimpleTable, {\n      stocks: stocks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 35\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancialStatementsPage, \"S5/mWbcsSPUG7qtC4FartPMCWVo=\");\n_c = FinancialStatementsPage;\nexport default FinancialStatementsPage;\nvar _c;\n$RefreshReg$(_c, \"FinancialStatementsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","SimpleTable","jsxDEV","_jsxDEV","FinancialStatementsPage","_s","stocks","setStocks","error","setError","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","fetchTopStocksByMetric","get","then","response","data","length","catch","console","params","year","handleButtonClick","metric","metrics","className","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexWrap","gap","alignItems","htmlFor","fontSize","fontWeight","id","value","onChange","e","target","map","onClick","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/FinancialStatementsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/FinancialStatementsPage.css\";\r\n\r\nconst FinancialStatementsPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n\r\n    // 데이터 가져오기\r\n    const fetchTopStocksByMetric = () => {\r\n        if (currentMetric === \"시가총액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"시가총액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"매출액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"매출액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else {\r\n            setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        setCurrentMetric(metric);\r\n    };\r\n\r\n    // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\r\n    useEffect(() => {\r\n        if (currentMetric) {\r\n            fetchTopStocksByMetric();\r\n        }\r\n    }, [selectedYear, currentMetric]);\r\n\r\n    // 메트릭 버튼 목록\r\n    const metrics = [\"시가총액\", \"매출액\"];\r\n\r\n    return (\r\n        <div className=\"financial-statements-container\">\r\n            <h2 style={{ color: \"#007bff\", marginBottom: \"20px\" }}>재무제표</h2>\r\n\r\n            {/* 메트릭 버튼들과 연도 선택 드롭다운 */}\r\n            <div style={{ display: \"flex\", flexWrap: \"wrap\", gap: \"10px\", marginBottom: \"20px\" }}>\r\n                {/* 연도 선택 드롭다운 */}\r\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"5px\" }}>\r\n                    <label htmlFor=\"year-select\" style={{ fontSize: \"14px\", fontWeight: \"bold\" }}>\r\n                        연도 선택:\r\n                    </label>\r\n                    <select\r\n                        id=\"year-select\"\r\n                        value={selectedYear}\r\n                        onChange={(e) => setSelectedYear(e.target.value)}\r\n                    >\r\n                        <option value=\"2021\">2021</option>\r\n                        <option value=\"2022\">2022</option>\r\n                        <option value=\"2023\">2023</option>\r\n                        <option value=\"2024\">2024</option>\r\n                    </select>\r\n                </div>\r\n\r\n                {/* 메트릭 버튼 */}\r\n                {metrics.map((metric) => (\r\n                    <button key={metric} onClick={() => handleButtonClick(metric)}>\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && <SimpleTable stocks={stocks} />}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinancialStatementsPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,eAAe;AACvC,OAAO,sBAAsB;AAC7B,OAAO,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,uBAAuB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,YAAY,EAAEC,eAAe,CAAC,GAAGb,QAAQ,CAAC,MAAM,CAAC;EACxD,MAAM,CAACc,aAAa,EAAEC,gBAAgB,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;;EAExD;EACA,MAAMgB,sBAAsB,GAAGA,CAAA,KAAM;IACjC,IAAIF,aAAa,KAAK,MAAM,EAAE;MAC1BZ,KAAK,CACAe,GAAG,CAAC,qCAAqC,CAAC,CAC1CC,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAI,CAACV,KAAK,IAAIS,QAAQ,CAACC,IAAI,CAACZ,MAAM,CAACa,MAAM,KAAK,CAAC,EAAE;UAC1DV,QAAQ,CAAC,iBAAiB,CAAC;UAC3BF,SAAS,CAAC,EAAE,CAAC;QACjB,CAAC,MAAM;UACHA,SAAS,CAACU,QAAQ,CAACC,IAAI,CAACZ,MAAM,CAAC;UAC/BG,QAAQ,CAAC,EAAE,CAAC;QAChB;MACJ,CAAC,CAAC,CACDW,KAAK,CAAEZ,KAAK,IAAK;QACda,OAAO,CAACb,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvCC,QAAQ,CAAC,iBAAiB,CAAC;QAC3BF,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC;IACV,CAAC,MAAM,IAAIK,aAAa,KAAK,KAAK,EAAE;MAChCZ,KAAK,CACAe,GAAG,CAAC,mCAAmC,EAAE;QAAEO,MAAM,EAAE;UAAEC,IAAI,EAAEb;QAAa;MAAE,CAAC,CAAC,CAC5EM,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAI,CAACV,KAAK,IAAIS,QAAQ,CAACC,IAAI,CAACZ,MAAM,CAACa,MAAM,KAAK,CAAC,EAAE;UAC1DV,QAAQ,CAAC,gBAAgB,CAAC;UAC1BF,SAAS,CAAC,EAAE,CAAC;QACjB,CAAC,MAAM;UACHA,SAAS,CAACU,QAAQ,CAACC,IAAI,CAACZ,MAAM,CAAC;UAC/BG,QAAQ,CAAC,EAAE,CAAC;QAChB;MACJ,CAAC,CAAC,CACDW,KAAK,CAAEZ,KAAK,IAAK;QACda,OAAO,CAACb,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;QACvCC,QAAQ,CAAC,iBAAiB,CAAC;QAC3BF,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,CAAC;IACV,CAAC,MAAM;MACHE,QAAQ,CAAC,IAAIG,aAAa,sBAAsB,CAAC;MACjDL,SAAS,CAAC,EAAE,CAAC;IACjB;EACJ,CAAC;;EAED;EACA,MAAMiB,iBAAiB,GAAIC,MAAM,IAAK;IAClCZ,gBAAgB,CAACY,MAAM,CAAC;EAC5B,CAAC;;EAED;EACA1B,SAAS,CAAC,MAAM;IACZ,IAAIa,aAAa,EAAE;MACfE,sBAAsB,CAAC,CAAC;IAC5B;EACJ,CAAC,EAAE,CAACJ,YAAY,EAAEE,aAAa,CAAC,CAAC;;EAEjC;EACA,MAAMc,OAAO,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC;EAE/B,oBACIvB,OAAA;IAAKwB,SAAS,EAAC,gCAAgC;IAAAC,QAAA,gBAC3CzB,OAAA;MAAI0B,KAAK,EAAE;QAAEC,KAAK,EAAE,SAAS;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,EAAC;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGhEhC,OAAA;MAAK0B,KAAK,EAAE;QAAEO,OAAO,EAAE,MAAM;QAAEC,QAAQ,EAAE,MAAM;QAAEC,GAAG,EAAE,MAAM;QAAEP,YAAY,EAAE;MAAO,CAAE;MAAAH,QAAA,gBAEjFzB,OAAA;QAAK0B,KAAK,EAAE;UAAEO,OAAO,EAAE,MAAM;UAAEG,UAAU,EAAE,QAAQ;UAAED,GAAG,EAAE;QAAM,CAAE;QAAAV,QAAA,gBAC9DzB,OAAA;UAAOqC,OAAO,EAAC,aAAa;UAACX,KAAK,EAAE;YAAEY,QAAQ,EAAE,MAAM;YAAEC,UAAU,EAAE;UAAO,CAAE;UAAAd,QAAA,EAAC;QAE9E;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACRhC,OAAA;UACIwC,EAAE,EAAC,aAAa;UAChBC,KAAK,EAAElC,YAAa;UACpBmC,QAAQ,EAAGC,CAAC,IAAKnC,eAAe,CAACmC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAAAhB,QAAA,gBAEjDzB,OAAA;YAAQyC,KAAK,EAAC,MAAM;YAAAhB,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClChC,OAAA;YAAQyC,KAAK,EAAC,MAAM;YAAAhB,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClChC,OAAA;YAAQyC,KAAK,EAAC,MAAM;YAAAhB,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eAClChC,OAAA;YAAQyC,KAAK,EAAC,MAAM;YAAAhB,QAAA,EAAC;UAAI;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC,EAGLT,OAAO,CAACsB,GAAG,CAAEvB,MAAM,iBAChBtB,OAAA;QAAqB8C,OAAO,EAAEA,CAAA,KAAMzB,iBAAiB,CAACC,MAAM,CAAE;QAAAG,QAAA,EACzDH;MAAM,GADEA,MAAM;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEX,CACX,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEL3B,KAAK,iBAAIL,OAAA;MAAGwB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEpB;IAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGjD7B,MAAM,CAACa,MAAM,GAAG,CAAC,iBAAIhB,OAAA,CAACF,WAAW;MAACK,MAAM,EAAEA;IAAO;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpD,CAAC;AAEd,CAAC;AAAC9B,EAAA,CApGID,uBAAuB;AAAA8C,EAAA,GAAvB9C,uBAAuB;AAsG7B,eAAeA,uBAAuB;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}