{"ast":null,"code":"import _objectSpread from\"C:/Users/redwh/Desktop/\\uAC1C\\uBC1C/stock/stockter/front/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect,useRef,useCallback}from\"react\";import axios from\"axios\";import StockTable from\"./StockTable\";import\"../styles/Common.css\";import\"../styles/SearchPage.css\";import{Bar}from\"react-chartjs-2\";import\"chart.js/auto\";// 자동 등록\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const SearchPage=()=>{const[stocks,setStocks]=useState([]);const[query,setQuery]=useState(\"\");const[highlightedStock,setHighlightedStock]=useState(null);// 상단 정보용 상태\nconst[filteredStocks,setFilteredStocks]=useState([]);const[error,setError]=useState(\"\");const[isDropdownOpen,setIsDropdownOpen]=useState(false);const dropdownRef=useRef(null);// 재무 데이터 상태 (매출액, 영업이익, 순이익 등)\nconst[financialData,setFinancialData]=useState(null);const[loadingFinancialData,setLoadingFinancialData]=useState(false);const[financialError,setFinancialError]=useState(\"\");const[selectedButton,setSelectedButton]=useState(\"매출액\");// 현재 선택된 버튼 상태\n// 차트 컨테이너에 대한 참조 생성\nconst chartRef=useRef(null);const cleanValue=value=>{if(typeof value===\"string\"){return value.replace(/[\\s,]+/g,\"\");// 공백과 쉼표 제거\n}if(value===null||value===undefined){return\"N/A\";// 빈 값 처리\n}return value;// 나머지는 그대로 반환\n};// 단위 결정 함수\nconst getUnit=buttonName=>{const percentageButtons=[\"영업이익률\",\"부채비율\"];if(percentageButtons.includes(buttonName)){return\"%\";}return\"억\";};// 퍼센트 단위인지 확인하는 함수\nconst isPercentage=buttonName=>{const percentageButtons=[\"영업이익률\",\"부채비율\"];return percentageButtons.includes(buttonName);};// ---------------------------\n// 1) 검색 함수\n// ---------------------------\nconst fetchData=useCallback(function(){let searchQuery=arguments.length>0&&arguments[0]!==undefined?arguments[0]:query;if(!searchQuery.trim()){setError(\"검색어를 입력하세요.\");return;}setError(\"\");setFilteredStocks([]);setIsDropdownOpen(false);axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\",{params:{query:searchQuery}}).then(response=>{if(response.data.error||response.data.stocks.length===0){setError(\"검색 결과가 없습니다.\");setStocks([]);}else{const mappedData=response.data.stocks.map(stock=>_objectSpread(_objectSpread({},stock),{},{매출액:cleanValue(stock[\"매출액\"]),영업이익:cleanValue(stock[\"영업이익\"]),영업이익률:cleanValue(stock[\"영업이익률\"]),시가배당률:cleanValue(stock[\"시가배당률(%)\"]),부채비율:cleanValue(stock[\"부채비율\"])// 부채비율 추가\n}));setStocks(mappedData);setHighlightedStock(mappedData[0]||null);}}).catch(error=>{console.error(\"데이터 로드 오류:\",error);setError(\"서버와 연결할 수 없습니다.\");});},[query]);// ---------------------------\n// 2) 자동완성 로직\n// ---------------------------\nconst handleQueryChange=useCallback(e=>{const input=e.target.value;setQuery(input);if(input.trim()===\"\"){setFilteredStocks([]);setIsDropdownOpen(false);}else{axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\",{params:{query:input}}).then(response=>{if(response.data.stocks){const lowercasedInput=input.toLowerCase();const filtered=response.data.stocks.filter(stock=>{const stockCode=stock[\"종목코드\"].toString().toLowerCase();const stockName=stock[\"종목명\"].toLowerCase();return stockCode.includes(lowercasedInput)||stockName.includes(lowercasedInput);});// 입력값으로 시작하는 종목 우선 정렬\nconst startsWithQuery=filtered.filter(stock=>{const stockCode=stock[\"종목코드\"].toString().toLowerCase();const stockName=stock[\"종목명\"].toLowerCase();return stockCode.startsWith(lowercasedInput)||stockName.startsWith(lowercasedInput);});const others=filtered.filter(stock=>{const stockCode=stock[\"종목코드\"].toString().toLowerCase();const stockName=stock[\"종목명\"].toLowerCase();return!stockCode.startsWith(lowercasedInput)&&!stockName.startsWith(lowercasedInput);});// 최대 10개까지만\nsetFilteredStocks([...startsWithQuery,...others].slice(0,10));setIsDropdownOpen(true);}}).catch(error=>{console.error(\"자동완성 데이터 로드 오류:\",error);});}},[]);const handleSuggestionClick=useCallback(stock=>{setQuery(stock[\"종목명\"]);setIsDropdownOpen(false);setHighlightedStock(stock);fetchData(stock[\"종목명\"]);},[fetchData]);const handleKeyPress=useCallback(e=>{if(e.key===\"Enter\"){fetchData();}},[fetchData]);// ---------------------------\n// 3) 기타 이벤트\n// ---------------------------\nconst resetState=useCallback(()=>{setQuery(\"\");setStocks([]);setFilteredStocks([]);setError(\"\");setIsDropdownOpen(false);setHighlightedStock(null);setFinancialData(null);setFinancialError(\"\");},[]);useEffect(()=>{const handleOutsideClick=e=>{if(dropdownRef.current&&!dropdownRef.current.contains(e.target)){setIsDropdownOpen(false);}};document.addEventListener(\"mousedown\",handleOutsideClick);return()=>{document.removeEventListener(\"mousedown\",handleOutsideClick);};},[]);const highlightMatch=useCallback((text,query)=>{if(!query)return text;const regex=new RegExp(\"(\".concat(query,\")\"),\"gi\");return text.replace(regex,match=>\"<span class=\\\"highlight\\\">\".concat(match,\"</span>\"));},[]);// ---------------------------\n// 4) 매출액, 영업이익, 영업이익률, 순이익, 부채비율 버튼 핸들러\n// ---------------------------\nconst handleButtonClick=useCallback(async buttonName=>{if(loadingFinancialData){console.warn(\"\".concat(buttonName,\" \\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4. \\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694.\"));return;}console.log(\"\".concat(buttonName,\" \\uBC84\\uD2BC\\uC774 \\uD074\\uB9AD\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4.\"));let endpoint=\"\";if(buttonName===\"매출액\"){endpoint=\"financial-annual-sales\";}else if(buttonName===\"영업이익\"){endpoint=\"financial-operating-profit\";}else if(buttonName===\"영업이익률\"){endpoint=\"financial-operating-income-rate\";// 백엔드 엔드포인트 수정\n}else if(buttonName===\"순이익\"){endpoint=\"financial-net-income\";}else if(buttonName===\"부채비율\"){endpoint=\"financial-debt-ratio\";// 새로운 엔드포인트 추가\n}else{console.warn(\"지원되지 않는 버튼입니다.\");return;}if(!highlightedStock){setFinancialError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");return;}setLoadingFinancialData(true);setFinancialError(\"\");setFinancialData(null);setSelectedButton(buttonName);// 현재 버튼 상태 저장\ntry{const response=await axios.get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/\".concat(endpoint),{params:{stock_name:highlightedStock[\"종목명\"]}});console.log(\"\".concat(buttonName,\" API \\uC751\\uB2F5 \\uB370\\uC774\\uD130:\"),response.data);let data=null;if(buttonName===\"매출액\"&&response.data.annual_sales){data=response.data.annual_sales;}else if(buttonName===\"영업이익\"&&response.data.operating_profit){data=response.data.operating_profit;}else if(buttonName===\"영업이익률\"&&response.data.operating_income_rate){data=response.data.operating_income_rate;// 숫자형 데이터\n}else if(buttonName===\"순이익\"&&response.data.net_income){data=response.data.net_income;}else if(buttonName===\"부채비율\"&&response.data.debt_ratio){// 새로운 데이터 필드\ndata=response.data.debt_ratio;}if(data){setFinancialData(data);}else{setFinancialError(\"\".concat(buttonName,\" \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"));}}catch(error){console.error(\"\".concat(buttonName,\" \\uB370\\uC774\\uD130 \\uB85C\\uB4DC \\uC911 \\uC624\\uB958 \\uBC1C\\uC0DD:\"),error);setFinancialError(\"\".concat(buttonName,\" \\uB370\\uC774\\uD130\\uB97C \\uAC00\\uC838\\uC624\\uB294 \\uC911 \\uC624\\uB958\\uAC00 \\uBC1C\\uC0DD\\uD588\\uC2B5\\uB2C8\\uB2E4.\"));}finally{setLoadingFinancialData(false);}},[highlightedStock,loadingFinancialData]);// ---------------------------\n// 5) 자동 스크롤 useEffect\n// ---------------------------\nuseEffect(()=>{if(financialData&&financialData.length>0&&chartRef.current){chartRef.current.scrollIntoView({behavior:\"smooth\",block:\"start\"});}},[financialData]);// ---------------------------\n// 6) JSX 반환\n// ---------------------------\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"search-page-container\",children:[/*#__PURE__*/_jsx(\"h2\",{onClick:resetState,style:{cursor:\"pointer\",color:\"#007bff\",marginBottom:\"20px\"},children:\"\\uC885\\uBAA9\\uAC80\\uC0C9\"}),/*#__PURE__*/_jsxs(\"div\",{style:{position:\"relative\",width:\"100%\",maxWidth:\"600px\",marginBottom:\"20px\"},children:[/*#__PURE__*/_jsxs(\"div\",{style:{display:\"flex\"},children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",value:query,onChange:handleQueryChange,onKeyPress:handleKeyPress}),/*#__PURE__*/_jsx(\"button\",{className:\"search-button\",onClick:()=>fetchData(),children:\"\\uC885\\uBAA9 \\uAC80\\uC0C9\"})]}),isDropdownOpen&&/*#__PURE__*/_jsx(\"div\",{ref:dropdownRef,className:\"dropdown\",children:filteredStocks.map((stock,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"dropdown-item\",onClick:()=>handleSuggestionClick(stock),children:[/*#__PURE__*/_jsx(\"span\",{dangerouslySetInnerHTML:{__html:highlightMatch(stock[\"종목명\"]||\"\",query)}}),/*#__PURE__*/_jsx(\"span\",{style:{marginLeft:\"10px\",color:\"gray\"},children:stock[\"종목코드\"]||\"\"})]},index))})]}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error}),highlightedStock&&/*#__PURE__*/_jsxs(\"div\",{className:\"highlighted-stock\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uC885\\uBAA9 \\uC815\\uBCF4\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC2DC\\uC7A5: \",highlightedStock[\"시장\"]||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC885\\uBAA9\\uCF54\\uB4DC: \",highlightedStock[\"종목코드\"]||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC885\\uBAA9\\uBA85: \",highlightedStock[\"종목명\"]||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC5C5\\uC885\\uBA85: \",highlightedStock[\"업종명\"]||\"N/A\"]}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uC2DC\\uAC00\\uCD1D\\uC561: \",highlightedStock[\"시가총액\"]||\"N/A\"]})]}),stocks.length>0&&/*#__PURE__*/_jsx(StockTable,{stocks:stocks,excludeKeys:[\"시장\",\"종목코드\",\"종목명\",\"업종명\",\"시가총액\",\"시가총액(숫자형)\",\"종목명_lower\",\"종목코드_str\",\"부채비율\"// 부채비율 컬럼 제외 (필요 시)\n]}),stocks.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"sort-buttons\",style:{marginTop:\"20px\",display:\"flex\",gap:\"10px\",flexWrap:\"wrap\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('매출액'),disabled:loadingFinancialData&&selectedButton==='매출액',children:loadingFinancialData&&selectedButton==='매출액'?\"매출액 로딩 중...\":\"매출액\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('영업이익'),disabled:loadingFinancialData&&selectedButton==='영업이익',children:loadingFinancialData&&selectedButton==='영업이익'?\"영업이익 로딩 중...\":\"영업이익\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('영업이익률'),disabled:loadingFinancialData&&selectedButton==='영업이익률',children:loadingFinancialData&&selectedButton==='영업이익률'?\"영업이익률 로딩 중...\":\"영업이익률\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('순이익'),disabled:loadingFinancialData&&selectedButton==='순이익',children:loadingFinancialData&&selectedButton==='순이익'?\"순이익 로딩 중...\":\"순이익\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleButtonClick('부채비율'),disabled:loadingFinancialData&&selectedButton==='부채비율',children:loadingFinancialData&&selectedButton==='부채비율'?\"부채비율 로딩 중...\":\"부채비율\"})]}),loadingFinancialData&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"}),financialError&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:financialError}),financialData&&financialData.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"financial-data-chart\",style:{marginTop:\"20px\"},children:/*#__PURE__*/_jsx(\"div\",{className:\"chart-container\",ref:chartRef,style:{height:\"400px\"},children:/*#__PURE__*/_jsx(Bar,{data:{labels:financialData.map(item=>item.연도),datasets:[{// 레이블 수정: 영업이익률과 부채비율은 (%) 추가\nlabel:isPercentage(selectedButton)?\"\".concat(selectedButton,\" (%)\"):\"\".concat(selectedButton,\" (\\uC5B5)\"),data:financialData.map(item=>isPercentage(selectedButton)?item[selectedButton===\"영업이익률\"?\"영업이익률\":\"부채비율\"]:item[selectedButton]),backgroundColor:selectedButton===\"매출액\"?\"rgba(75, 192, 192, 0.6)\":selectedButton===\"영업이익\"?\"rgba(255, 159, 64, 0.6)\":selectedButton===\"영업이익률\"?\"rgba(54, 162, 235, 0.6)\":selectedButton===\"순이익\"?\"rgba(153, 102, 255, 0.6)\":selectedButton===\"부채비율\"?\"rgba(255, 206, 86, 0.6)\":\"rgba(75, 192, 192, 0.6)\",borderColor:selectedButton===\"매출액\"?\"rgba(75, 192, 192, 1)\":selectedButton===\"영업이익\"?\"rgba(255, 159, 64, 1)\":selectedButton===\"영업이익률\"?\"rgba(54, 162, 235, 1)\":selectedButton===\"순이익\"?\"rgba(153, 102, 255, 1)\":selectedButton===\"부채비율\"?\"rgba(255, 206, 86, 1)\":\"rgba(75, 192, 192, 1)\",borderWidth:1}]},options:{responsive:true,// 반응형 활성화\nmaintainAspectRatio:false,// 비율 유지\nplugins:{legend:{position:\"top\"},title:{display:true,text:\"\".concat(highlightedStock[\"종목명\"],\" \\uC5F0\\uAC04 \").concat(selectedButton)}},scales:{y:{beginAtZero:false,ticks:{callback:function(value){if(isPercentage(selectedButton)){return value.toFixed(1)+\"%\";}return value.toLocaleString()+\"억\";}}}}}})})})]});};export default SearchPage;","map":{"version":3,"names":["React","useState","useEffect","useRef","useCallback","axios","StockTable","Bar","jsx","_jsx","jsxs","_jsxs","SearchPage","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","financialData","setFinancialData","loadingFinancialData","setLoadingFinancialData","financialError","setFinancialError","selectedButton","setSelectedButton","chartRef","cleanValue","value","replace","undefined","getUnit","buttonName","percentageButtons","includes","isPercentage","fetchData","searchQuery","arguments","length","trim","get","params","then","response","data","mappedData","map","stock","_objectSpread","매출액","영업이익","영업이익률","시가배당률","부채비율","catch","console","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockCode","toString","stockName","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","concat","match","handleButtonClick","warn","log","endpoint","stock_name","annual_sales","operating_profit","operating_income_rate","net_income","debt_ratio","scrollIntoView","behavior","block","className","children","onClick","style","cursor","color","marginBottom","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","gap","flexWrap","disabled","height","labels","item","연도","datasets","label","backgroundColor","borderColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","title","scales","y","beginAtZero","ticks","callback","toFixed","toLocaleString"],"sources":["C:/Users/redwh/Desktop/개발/stock/stockter/front/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\nimport { Bar } from \"react-chartjs-2\";\r\nimport \"chart.js/auto\"; // 자동 등록\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 재무 데이터 상태 (매출액, 영업이익, 순이익 등)\r\n    const [financialData, setFinancialData] = useState(null);\r\n    const [loadingFinancialData, setLoadingFinancialData] = useState(false);\r\n    const [financialError, setFinancialError] = useState(\"\");\r\n    const [selectedButton, setSelectedButton] = useState(\"매출액\"); // 현재 선택된 버튼 상태\r\n\r\n    // 차트 컨테이너에 대한 참조 생성\r\n    const chartRef = useRef(null);\r\n\r\n    const cleanValue = (value) => {\r\n        if (typeof value === \"string\") {\r\n            return value.replace(/[\\s,]+/g, \"\"); // 공백과 쉼표 제거\r\n        }\r\n        if (value === null || value === undefined) {\r\n            return \"N/A\"; // 빈 값 처리\r\n        }\r\n        return value; // 나머지는 그대로 반환\r\n    };\r\n\r\n    // 단위 결정 함수\r\n    const getUnit = (buttonName) => {\r\n        const percentageButtons = [\"영업이익률\", \"부채비율\"];\r\n        if (percentageButtons.includes(buttonName)) {\r\n            return \"%\";\r\n        }\r\n        return \"억\";\r\n    };\r\n\r\n    // 퍼센트 단위인지 확인하는 함수\r\n    const isPercentage = (buttonName) => {\r\n        const percentageButtons = [\"영업이익률\", \"부채비율\"];\r\n        return percentageButtons.includes(buttonName);\r\n    };\r\n\r\n    // ---------------------------\r\n    // 1) 검색 함수\r\n    // ---------------------------\r\n    const fetchData = useCallback((searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n    \r\n        axios\r\n            .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    const mappedData = response.data.stocks.map((stock) => ({\r\n                        ...stock,\r\n                        매출액: cleanValue(stock[\"매출액\"]),\r\n                        영업이익: cleanValue(stock[\"영업이익\"]),\r\n                        영업이익률: cleanValue(stock[\"영업이익률\"]),\r\n                        시가배당률: cleanValue(stock[\"시가배당률(%)\"]),\r\n                        부채비율: cleanValue(stock[\"부채비율\"]), // 부채비율 추가\r\n                    }));\r\n    \r\n                    setStocks(mappedData);\r\n                    setHighlightedStock(mappedData[0] || null);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 오류:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n            });\r\n    }, [query]);\r\n\r\n    // ---------------------------\r\n    // 2) 자동완성 로직\r\n    // ---------------------------\r\n    const handleQueryChange = useCallback((e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.includes(lowercasedInput) ||\r\n                                stockName.includes(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 입력값으로 시작하는 종목 우선 정렬\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                stockCode.startsWith(lowercasedInput) ||\r\n                                stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return (\r\n                                !stockCode.startsWith(lowercasedInput) &&\r\n                                !stockName.startsWith(lowercasedInput)\r\n                            );\r\n                        });\r\n\r\n                        // 최대 10개까지만\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    }, []);\r\n\r\n    const handleSuggestionClick = useCallback((stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(stock);\r\n        fetchData(stock[\"종목명\"]);\r\n    }, [fetchData]);\r\n\r\n    const handleKeyPress = useCallback((e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    }, [fetchData]);\r\n\r\n    // ---------------------------\r\n    // 3) 기타 이벤트\r\n    // ---------------------------\r\n    const resetState = useCallback(() => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n        setFinancialData(null);\r\n        setFinancialError(\"\");\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = useCallback((text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    }, []);\r\n\r\n    // ---------------------------\r\n    // 4) 매출액, 영업이익, 영업이익률, 순이익, 부채비율 버튼 핸들러\r\n    // ---------------------------\r\n    const handleButtonClick = useCallback(\r\n        async (buttonName) => {\r\n            if (loadingFinancialData) {\r\n                console.warn(`${buttonName} 데이터 로드 중입니다. 잠시만 기다려주세요.`);\r\n                return;\r\n            }\r\n    \r\n            console.log(`${buttonName} 버튼이 클릭되었습니다.`);\r\n    \r\n            let endpoint = \"\";\r\n            if (buttonName === \"매출액\") {\r\n                endpoint = \"financial-annual-sales\";\r\n            } else if (buttonName === \"영업이익\") {\r\n                endpoint = \"financial-operating-profit\";\r\n            } else if (buttonName === \"영업이익률\") {\r\n                endpoint = \"financial-operating-income-rate\"; // 백엔드 엔드포인트 수정\r\n            } else if (buttonName === \"순이익\") {\r\n                endpoint = \"financial-net-income\";\r\n            } else if (buttonName === \"부채비율\") {\r\n                endpoint = \"financial-debt-ratio\"; // 새로운 엔드포인트 추가\r\n            } else {\r\n                console.warn(\"지원되지 않는 버튼입니다.\");\r\n                return;\r\n            }\r\n    \r\n            if (!highlightedStock) {\r\n                setFinancialError(\"종목을 선택하지 않았습니다. 검색 후 선택해주세요.\");\r\n                return;\r\n            }\r\n    \r\n            setLoadingFinancialData(true);\r\n            setFinancialError(\"\");\r\n            setFinancialData(null);\r\n            setSelectedButton(buttonName); // 현재 버튼 상태 저장\r\n    \r\n            try {\r\n                const response = await axios.get(`https://port-0-stockter-back-m5or7nt39f4a0f5c.sel4.cloudtype.app/${endpoint}`, {\r\n                    params: { stock_name: highlightedStock[\"종목명\"] },\r\n                });\r\n                console.log(`${buttonName} API 응답 데이터:`, response.data);\r\n    \r\n                let data = null;\r\n                if (buttonName === \"매출액\" && response.data.annual_sales) {\r\n                    data = response.data.annual_sales;\r\n                } else if (buttonName === \"영업이익\" && response.data.operating_profit) {\r\n                    data = response.data.operating_profit;\r\n                } else if (buttonName === \"영업이익률\" && response.data.operating_income_rate) {\r\n                    data = response.data.operating_income_rate; // 숫자형 데이터\r\n                } else if (buttonName === \"순이익\" && response.data.net_income) {\r\n                    data = response.data.net_income;\r\n                } else if (buttonName === \"부채비율\" && response.data.debt_ratio) { // 새로운 데이터 필드\r\n                    data = response.data.debt_ratio;\r\n                }\r\n    \r\n                if (data) {\r\n                    setFinancialData(data);\r\n                } else {\r\n                    setFinancialError(`${buttonName} 데이터가 없습니다.`);\r\n                }\r\n            } catch (error) {\r\n                console.error(`${buttonName} 데이터 로드 중 오류 발생:`, error);\r\n                setFinancialError(`${buttonName} 데이터를 가져오는 중 오류가 발생했습니다.`);\r\n            } finally {\r\n                setLoadingFinancialData(false);\r\n            }\r\n        },\r\n        [highlightedStock, loadingFinancialData]\r\n    );\r\n\r\n    // ---------------------------\r\n    // 5) 자동 스크롤 useEffect\r\n    // ---------------------------\r\n    useEffect(() => {\r\n        if (financialData && financialData.length > 0 && chartRef.current) {\r\n            chartRef.current.scrollIntoView({ behavior: \"smooth\", block: \"start\" });\r\n        }\r\n    }, [financialData]);\r\n\r\n    // ---------------------------\r\n    // 6) JSX 반환\r\n    // ---------------------------\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2\r\n                onClick={resetState}\r\n                style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}\r\n            >\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div style={{ position: \"relative\", width: \"100%\", maxWidth: \"600px\", marginBottom: \"20px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                        \"부채비율\", // 부채비율 컬럼 제외 (필요 시)\r\n                    ]}\r\n                />\r\n            )}\r\n\r\n            {/* 버튼들 */}\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    className=\"sort-buttons\"\r\n                    style={{ marginTop: \"20px\", display: \"flex\", gap: \"10px\", flexWrap: \"wrap\" }}\r\n                >\r\n                    <button\r\n                        onClick={() => handleButtonClick('매출액')}\r\n                        disabled={loadingFinancialData && selectedButton === '매출액'}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === '매출액' ? \"매출액 로딩 중...\" : \"매출액\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick('영업이익')}\r\n                        disabled={loadingFinancialData && selectedButton === '영업이익'}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === '영업이익' ? \"영업이익 로딩 중...\" : \"영업이익\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick('영업이익률')}\r\n                        disabled={loadingFinancialData && selectedButton === '영업이익률'}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === '영업이익률' ? \"영업이익률 로딩 중...\" : \"영업이익률\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick('순이익')}\r\n                        disabled={loadingFinancialData && selectedButton === '순이익'}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === '순이익' ? \"순이익 로딩 중...\" : \"순이익\"}\r\n                    </button>\r\n                    <button\r\n                        onClick={() => handleButtonClick('부채비율')}\r\n                        disabled={loadingFinancialData && selectedButton === '부채비율'}\r\n                    >\r\n                        {loadingFinancialData && selectedButton === '부채비율' ? \"부채비율 로딩 중...\" : \"부채비율\"}\r\n                    </button>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 로딩 및 오류 메시지 */}\r\n            {loadingFinancialData && <p>데이터를 로드 중입니다...</p>}\r\n            {financialError && <p className=\"error-message\">{financialError}</p>}\r\n\r\n            {/* 데이터 차트 표시 */}\r\n            {financialData && financialData.length > 0 && (\r\n                <div className=\"financial-data-chart\" style={{ marginTop: \"20px\" }}>\r\n                    {/* 차트를 테이블과 같은 너비로 설정 */}\r\n                    <div className=\"chart-container\" ref={chartRef} style={{ height: \"400px\" }}>\r\n                        <Bar\r\n                            data={{\r\n                                labels: financialData.map((item) => item.연도),\r\n                                datasets: [\r\n                                    {\r\n                                        // 레이블 수정: 영업이익률과 부채비율은 (%) 추가\r\n                                        label: isPercentage(selectedButton) ? `${selectedButton} (%)` : `${selectedButton} (억)`,\r\n                                        data: financialData.map((item) =>\r\n                                            isPercentage(selectedButton)\r\n                                                ? item[selectedButton === \"영업이익률\" ? \"영업이익률\" : \"부채비율\"]\r\n                                                : item[selectedButton]\r\n                                        ),\r\n                                        backgroundColor:\r\n                                            selectedButton === \"매출액\"\r\n                                                ? \"rgba(75, 192, 192, 0.6)\"\r\n                                                : selectedButton === \"영업이익\"\r\n                                                    ? \"rgba(255, 159, 64, 0.6)\"\r\n                                                    : selectedButton === \"영업이익률\"\r\n                                                        ? \"rgba(54, 162, 235, 0.6)\"\r\n                                                        : selectedButton === \"순이익\"\r\n                                                            ? \"rgba(153, 102, 255, 0.6)\"\r\n                                                            : selectedButton === \"부채비율\"\r\n                                                                ? \"rgba(255, 206, 86, 0.6)\"\r\n                                                                : \"rgba(75, 192, 192, 0.6)\",\r\n                                        borderColor:\r\n                                            selectedButton === \"매출액\"\r\n                                                ? \"rgba(75, 192, 192, 1)\"\r\n                                                : selectedButton === \"영업이익\"\r\n                                                    ? \"rgba(255, 159, 64, 1)\"\r\n                                                    : selectedButton === \"영업이익률\"\r\n                                                        ? \"rgba(54, 162, 235, 1)\"\r\n                                                        : selectedButton === \"순이익\"\r\n                                                            ? \"rgba(153, 102, 255, 1)\"\r\n                                                            : selectedButton === \"부채비율\"\r\n                                                                ? \"rgba(255, 206, 86, 1)\"\r\n                                                                : \"rgba(75, 192, 192, 1)\",\r\n                                        borderWidth: 1,\r\n                                    },\r\n                                ],\r\n                            }}\r\n                            options={{\r\n                                responsive: true, // 반응형 활성화\r\n                                maintainAspectRatio: false, // 비율 유지\r\n                                plugins: {\r\n                                    legend: {\r\n                                        position: \"top\",\r\n                                    },\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: `${highlightedStock[\"종목명\"]} 연간 ${selectedButton}`,\r\n                                    },\r\n                                },\r\n                                scales: {\r\n                                    y: {\r\n                                        beginAtZero: false,\r\n                                        ticks: {\r\n                                            callback: function (value) {\r\n                                                if (isPercentage(selectedButton)) {\r\n                                                    return value.toFixed(1) + \"%\";\r\n                                                }\r\n                                                return value.toLocaleString() + \"억\";\r\n                                            },\r\n                                        },\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"6IAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,CAAEC,WAAW,KAAQ,OAAO,CACvE,MAAO,CAAAC,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,UAAU,KAAM,cAAc,CACrC,MAAO,sBAAsB,CAC7B,MAAO,0BAA0B,CACjC,OAASC,GAAG,KAAQ,iBAAiB,CACrC,MAAO,eAAe,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExB,KAAM,CAAAC,UAAU,CAAGA,CAAA,GAAM,CACrB,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CACxC,KAAM,CAACc,KAAK,CAAEC,QAAQ,CAAC,CAAGf,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACgB,gBAAgB,CAAEC,mBAAmB,CAAC,CAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAE;AAChE,KAAM,CAACkB,cAAc,CAAEC,iBAAiB,CAAC,CAAGnB,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAACoB,KAAK,CAAEC,QAAQ,CAAC,CAAGrB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACsB,cAAc,CAAEC,iBAAiB,CAAC,CAAGvB,QAAQ,CAAC,KAAK,CAAC,CAC3D,KAAM,CAAAwB,WAAW,CAAGtB,MAAM,CAAC,IAAI,CAAC,CAEhC;AACA,KAAM,CAACuB,aAAa,CAAEC,gBAAgB,CAAC,CAAG1B,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAAC2B,oBAAoB,CAAEC,uBAAuB,CAAC,CAAG5B,QAAQ,CAAC,KAAK,CAAC,CACvE,KAAM,CAAC6B,cAAc,CAAEC,iBAAiB,CAAC,CAAG9B,QAAQ,CAAC,EAAE,CAAC,CACxD,KAAM,CAAC+B,cAAc,CAAEC,iBAAiB,CAAC,CAAGhC,QAAQ,CAAC,KAAK,CAAC,CAAE;AAE7D;AACA,KAAM,CAAAiC,QAAQ,CAAG/B,MAAM,CAAC,IAAI,CAAC,CAE7B,KAAM,CAAAgC,UAAU,CAAIC,KAAK,EAAK,CAC1B,GAAI,MAAO,CAAAA,KAAK,GAAK,QAAQ,CAAE,CAC3B,MAAO,CAAAA,KAAK,CAACC,OAAO,CAAC,SAAS,CAAE,EAAE,CAAC,CAAE;AACzC,CACA,GAAID,KAAK,GAAK,IAAI,EAAIA,KAAK,GAAKE,SAAS,CAAE,CACvC,MAAO,KAAK,CAAE;AAClB,CACA,MAAO,CAAAF,KAAK,CAAE;AAClB,CAAC,CAED;AACA,KAAM,CAAAG,OAAO,CAAIC,UAAU,EAAK,CAC5B,KAAM,CAAAC,iBAAiB,CAAG,CAAC,OAAO,CAAE,MAAM,CAAC,CAC3C,GAAIA,iBAAiB,CAACC,QAAQ,CAACF,UAAU,CAAC,CAAE,CACxC,MAAO,GAAG,CACd,CACA,MAAO,GAAG,CACd,CAAC,CAED;AACA,KAAM,CAAAG,YAAY,CAAIH,UAAU,EAAK,CACjC,KAAM,CAAAC,iBAAiB,CAAG,CAAC,OAAO,CAAE,MAAM,CAAC,CAC3C,MAAO,CAAAA,iBAAiB,CAACC,QAAQ,CAACF,UAAU,CAAC,CACjD,CAAC,CAED;AACA;AACA;AACA,KAAM,CAAAI,SAAS,CAAGxC,WAAW,CAAC,UAAyB,IAAxB,CAAAyC,WAAW,CAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,MAAAR,SAAA,CAAAQ,SAAA,IAAG/B,KAAK,CAC9C,GAAI,CAAC8B,WAAW,CAACG,IAAI,CAAC,CAAC,CAAE,CACrB1B,QAAQ,CAAC,aAAa,CAAC,CACvB,OACJ,CACAA,QAAQ,CAAC,EAAE,CAAC,CACZF,iBAAiB,CAAC,EAAE,CAAC,CACrBI,iBAAiB,CAAC,KAAK,CAAC,CAExBnB,KAAK,CACA4C,GAAG,CAAC,uEAAuE,CAAE,CAAEC,MAAM,CAAE,CAAEnC,KAAK,CAAE8B,WAAY,CAAE,CAAC,CAAC,CAChHM,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAIA,QAAQ,CAACC,IAAI,CAAChC,KAAK,EAAI+B,QAAQ,CAACC,IAAI,CAACxC,MAAM,CAACkC,MAAM,GAAK,CAAC,CAAE,CAC1DzB,QAAQ,CAAC,cAAc,CAAC,CACxBR,SAAS,CAAC,EAAE,CAAC,CACjB,CAAC,IAAM,CACH,KAAM,CAAAwC,UAAU,CAAGF,QAAQ,CAACC,IAAI,CAACxC,MAAM,CAAC0C,GAAG,CAAEC,KAAK,EAAAC,aAAA,CAAAA,aAAA,IAC3CD,KAAK,MACRE,GAAG,CAAEvB,UAAU,CAACqB,KAAK,CAAC,KAAK,CAAC,CAAC,CAC7BG,IAAI,CAAExB,UAAU,CAACqB,KAAK,CAAC,MAAM,CAAC,CAAC,CAC/BI,KAAK,CAAEzB,UAAU,CAACqB,KAAK,CAAC,OAAO,CAAC,CAAC,CACjCK,KAAK,CAAE1B,UAAU,CAACqB,KAAK,CAAC,UAAU,CAAC,CAAC,CACpCM,IAAI,CAAE3B,UAAU,CAACqB,KAAK,CAAC,MAAM,CAAC,CAAG;AAAA,EACnC,CAAC,CAEH1C,SAAS,CAACwC,UAAU,CAAC,CACrBpC,mBAAmB,CAACoC,UAAU,CAAC,CAAC,CAAC,EAAI,IAAI,CAAC,CAC9C,CACJ,CAAC,CAAC,CACDS,KAAK,CAAE1C,KAAK,EAAK,CACd2C,OAAO,CAAC3C,KAAK,CAAC,YAAY,CAAEA,KAAK,CAAC,CAClCC,QAAQ,CAAC,iBAAiB,CAAC,CAC/B,CAAC,CAAC,CACV,CAAC,CAAE,CAACP,KAAK,CAAC,CAAC,CAEX;AACA;AACA;AACA,KAAM,CAAAkD,iBAAiB,CAAG7D,WAAW,CAAE8D,CAAC,EAAK,CACzC,KAAM,CAAAC,KAAK,CAAGD,CAAC,CAACE,MAAM,CAAChC,KAAK,CAC5BpB,QAAQ,CAACmD,KAAK,CAAC,CAEf,GAAIA,KAAK,CAACnB,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,CACrB5B,iBAAiB,CAAC,EAAE,CAAC,CACrBI,iBAAiB,CAAC,KAAK,CAAC,CAC5B,CAAC,IAAM,CACHnB,KAAK,CACA4C,GAAG,CAAC,uEAAuE,CAAE,CAAEC,MAAM,CAAE,CAAEnC,KAAK,CAAEoD,KAAM,CAAE,CAAC,CAAC,CAC1GhB,IAAI,CAAEC,QAAQ,EAAK,CAChB,GAAIA,QAAQ,CAACC,IAAI,CAACxC,MAAM,CAAE,CACtB,KAAM,CAAAwD,eAAe,CAAGF,KAAK,CAACG,WAAW,CAAC,CAAC,CAC3C,KAAM,CAAAC,QAAQ,CAAGnB,QAAQ,CAACC,IAAI,CAACxC,MAAM,CAAC2D,MAAM,CAAEhB,KAAK,EAAK,CACpD,KAAM,CAAAiB,SAAS,CAAGjB,KAAK,CAAC,MAAM,CAAC,CAACkB,QAAQ,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC,CACxD,KAAM,CAAAK,SAAS,CAAGnB,KAAK,CAAC,KAAK,CAAC,CAACc,WAAW,CAAC,CAAC,CAC5C,MACI,CAAAG,SAAS,CAAC/B,QAAQ,CAAC2B,eAAe,CAAC,EACnCM,SAAS,CAACjC,QAAQ,CAAC2B,eAAe,CAAC,CAE3C,CAAC,CAAC,CAEF;AACA,KAAM,CAAAO,eAAe,CAAGL,QAAQ,CAACC,MAAM,CAAEhB,KAAK,EAAK,CAC/C,KAAM,CAAAiB,SAAS,CAAGjB,KAAK,CAAC,MAAM,CAAC,CAACkB,QAAQ,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC,CACxD,KAAM,CAAAK,SAAS,CAAGnB,KAAK,CAAC,KAAK,CAAC,CAACc,WAAW,CAAC,CAAC,CAC5C,MACI,CAAAG,SAAS,CAACI,UAAU,CAACR,eAAe,CAAC,EACrCM,SAAS,CAACE,UAAU,CAACR,eAAe,CAAC,CAE7C,CAAC,CAAC,CACF,KAAM,CAAAS,MAAM,CAAGP,QAAQ,CAACC,MAAM,CAAEhB,KAAK,EAAK,CACtC,KAAM,CAAAiB,SAAS,CAAGjB,KAAK,CAAC,MAAM,CAAC,CAACkB,QAAQ,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC,CACxD,KAAM,CAAAK,SAAS,CAAGnB,KAAK,CAAC,KAAK,CAAC,CAACc,WAAW,CAAC,CAAC,CAC5C,MACI,CAACG,SAAS,CAACI,UAAU,CAACR,eAAe,CAAC,EACtC,CAACM,SAAS,CAACE,UAAU,CAACR,eAAe,CAAC,CAE9C,CAAC,CAAC,CAEF;AACAjD,iBAAiB,CAAC,CAAC,GAAGwD,eAAe,CAAE,GAAGE,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CAAC,CAC/DvD,iBAAiB,CAAC,IAAI,CAAC,CAC3B,CACJ,CAAC,CAAC,CACDuC,KAAK,CAAE1C,KAAK,EAAK,CACd2C,OAAO,CAAC3C,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CAC3C,CAAC,CAAC,CACV,CACJ,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAA2D,qBAAqB,CAAG5E,WAAW,CAAEoD,KAAK,EAAK,CACjDxC,QAAQ,CAACwC,KAAK,CAAC,KAAK,CAAC,CAAC,CACtBhC,iBAAiB,CAAC,KAAK,CAAC,CACxBN,mBAAmB,CAACsC,KAAK,CAAC,CAC1BZ,SAAS,CAACY,KAAK,CAAC,KAAK,CAAC,CAAC,CAC3B,CAAC,CAAE,CAACZ,SAAS,CAAC,CAAC,CAEf,KAAM,CAAAqC,cAAc,CAAG7E,WAAW,CAAE8D,CAAC,EAAK,CACtC,GAAIA,CAAC,CAACgB,GAAG,GAAK,OAAO,CAAE,CACnBtC,SAAS,CAAC,CAAC,CACf,CACJ,CAAC,CAAE,CAACA,SAAS,CAAC,CAAC,CAEf;AACA;AACA;AACA,KAAM,CAAAuC,UAAU,CAAG/E,WAAW,CAAC,IAAM,CACjCY,QAAQ,CAAC,EAAE,CAAC,CACZF,SAAS,CAAC,EAAE,CAAC,CACbM,iBAAiB,CAAC,EAAE,CAAC,CACrBE,QAAQ,CAAC,EAAE,CAAC,CACZE,iBAAiB,CAAC,KAAK,CAAC,CACxBN,mBAAmB,CAAC,IAAI,CAAC,CACzBS,gBAAgB,CAAC,IAAI,CAAC,CACtBI,iBAAiB,CAAC,EAAE,CAAC,CACzB,CAAC,CAAE,EAAE,CAAC,CAEN7B,SAAS,CAAC,IAAM,CACZ,KAAM,CAAAkF,kBAAkB,CAAIlB,CAAC,EAAK,CAC9B,GAAIzC,WAAW,CAAC4D,OAAO,EAAI,CAAC5D,WAAW,CAAC4D,OAAO,CAACC,QAAQ,CAACpB,CAAC,CAACE,MAAM,CAAC,CAAE,CAChE5C,iBAAiB,CAAC,KAAK,CAAC,CAC5B,CACJ,CAAC,CACD+D,QAAQ,CAACC,gBAAgB,CAAC,WAAW,CAAEJ,kBAAkB,CAAC,CAC1D,MAAO,IAAM,CACTG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,CAAEL,kBAAkB,CAAC,CACjE,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN,KAAM,CAAAM,cAAc,CAAGtF,WAAW,CAAC,CAACuF,IAAI,CAAE5E,KAAK,GAAK,CAChD,GAAI,CAACA,KAAK,CAAE,MAAO,CAAA4E,IAAI,CACvB,KAAM,CAAAC,KAAK,CAAG,GAAI,CAAAC,MAAM,KAAAC,MAAA,CAAK/E,KAAK,MAAK,IAAI,CAAC,CAC5C,MAAO,CAAA4E,IAAI,CAACtD,OAAO,CAACuD,KAAK,CAAGG,KAAK,+BAAAD,MAAA,CAAgCC,KAAK,WAAS,CAAC,CACpF,CAAC,CAAE,EAAE,CAAC,CAEN;AACA;AACA;AACA,KAAM,CAAAC,iBAAiB,CAAG5F,WAAW,CACjC,KAAO,CAAAoC,UAAU,EAAK,CAClB,GAAIZ,oBAAoB,CAAE,CACtBoC,OAAO,CAACiC,IAAI,IAAAH,MAAA,CAAItD,UAAU,uHAA2B,CAAC,CACtD,OACJ,CAEAwB,OAAO,CAACkC,GAAG,IAAAJ,MAAA,CAAItD,UAAU,mEAAe,CAAC,CAEzC,GAAI,CAAA2D,QAAQ,CAAG,EAAE,CACjB,GAAI3D,UAAU,GAAK,KAAK,CAAE,CACtB2D,QAAQ,CAAG,wBAAwB,CACvC,CAAC,IAAM,IAAI3D,UAAU,GAAK,MAAM,CAAE,CAC9B2D,QAAQ,CAAG,4BAA4B,CAC3C,CAAC,IAAM,IAAI3D,UAAU,GAAK,OAAO,CAAE,CAC/B2D,QAAQ,CAAG,iCAAiC,CAAE;AAClD,CAAC,IAAM,IAAI3D,UAAU,GAAK,KAAK,CAAE,CAC7B2D,QAAQ,CAAG,sBAAsB,CACrC,CAAC,IAAM,IAAI3D,UAAU,GAAK,MAAM,CAAE,CAC9B2D,QAAQ,CAAG,sBAAsB,CAAE;AACvC,CAAC,IAAM,CACHnC,OAAO,CAACiC,IAAI,CAAC,gBAAgB,CAAC,CAC9B,OACJ,CAEA,GAAI,CAAChF,gBAAgB,CAAE,CACnBc,iBAAiB,CAAC,8BAA8B,CAAC,CACjD,OACJ,CAEAF,uBAAuB,CAAC,IAAI,CAAC,CAC7BE,iBAAiB,CAAC,EAAE,CAAC,CACrBJ,gBAAgB,CAAC,IAAI,CAAC,CACtBM,iBAAiB,CAACO,UAAU,CAAC,CAAE;AAE/B,GAAI,CACA,KAAM,CAAAY,QAAQ,CAAG,KAAM,CAAA/C,KAAK,CAAC4C,GAAG,qEAAA6C,MAAA,CAAqEK,QAAQ,EAAI,CAC7GjD,MAAM,CAAE,CAAEkD,UAAU,CAAEnF,gBAAgB,CAAC,KAAK,CAAE,CAClD,CAAC,CAAC,CACF+C,OAAO,CAACkC,GAAG,IAAAJ,MAAA,CAAItD,UAAU,0CAAgBY,QAAQ,CAACC,IAAI,CAAC,CAEvD,GAAI,CAAAA,IAAI,CAAG,IAAI,CACf,GAAIb,UAAU,GAAK,KAAK,EAAIY,QAAQ,CAACC,IAAI,CAACgD,YAAY,CAAE,CACpDhD,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAACgD,YAAY,CACrC,CAAC,IAAM,IAAI7D,UAAU,GAAK,MAAM,EAAIY,QAAQ,CAACC,IAAI,CAACiD,gBAAgB,CAAE,CAChEjD,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAACiD,gBAAgB,CACzC,CAAC,IAAM,IAAI9D,UAAU,GAAK,OAAO,EAAIY,QAAQ,CAACC,IAAI,CAACkD,qBAAqB,CAAE,CACtElD,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAACkD,qBAAqB,CAAE;AAChD,CAAC,IAAM,IAAI/D,UAAU,GAAK,KAAK,EAAIY,QAAQ,CAACC,IAAI,CAACmD,UAAU,CAAE,CACzDnD,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAACmD,UAAU,CACnC,CAAC,IAAM,IAAIhE,UAAU,GAAK,MAAM,EAAIY,QAAQ,CAACC,IAAI,CAACoD,UAAU,CAAE,CAAE;AAC5DpD,IAAI,CAAGD,QAAQ,CAACC,IAAI,CAACoD,UAAU,CACnC,CAEA,GAAIpD,IAAI,CAAE,CACN1B,gBAAgB,CAAC0B,IAAI,CAAC,CAC1B,CAAC,IAAM,CACHtB,iBAAiB,IAAA+D,MAAA,CAAItD,UAAU,uDAAa,CAAC,CACjD,CACJ,CAAE,MAAOnB,KAAK,CAAE,CACZ2C,OAAO,CAAC3C,KAAK,IAAAyE,MAAA,CAAItD,UAAU,uEAAoBnB,KAAK,CAAC,CACrDU,iBAAiB,IAAA+D,MAAA,CAAItD,UAAU,sHAA0B,CAAC,CAC9D,CAAC,OAAS,CACNX,uBAAuB,CAAC,KAAK,CAAC,CAClC,CACJ,CAAC,CACD,CAACZ,gBAAgB,CAAEW,oBAAoB,CAC3C,CAAC,CAED;AACA;AACA;AACA1B,SAAS,CAAC,IAAM,CACZ,GAAIwB,aAAa,EAAIA,aAAa,CAACqB,MAAM,CAAG,CAAC,EAAIb,QAAQ,CAACmD,OAAO,CAAE,CAC/DnD,QAAQ,CAACmD,OAAO,CAACqB,cAAc,CAAC,CAAEC,QAAQ,CAAE,QAAQ,CAAEC,KAAK,CAAE,OAAQ,CAAC,CAAC,CAC3E,CACJ,CAAC,CAAE,CAAClF,aAAa,CAAC,CAAC,CAEnB;AACA;AACA;AACA,mBACIf,KAAA,QAAKkG,SAAS,CAAC,uBAAuB,CAAAC,QAAA,eAClCrG,IAAA,OACIsG,OAAO,CAAE5B,UAAW,CACpB6B,KAAK,CAAE,CAAEC,MAAM,CAAE,SAAS,CAAEC,KAAK,CAAE,SAAS,CAAEC,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,CACxE,0BAED,CAAI,CAAC,cAGLnG,KAAA,QAAKqG,KAAK,CAAE,CAAEI,QAAQ,CAAE,UAAU,CAAEC,KAAK,CAAE,MAAM,CAAEC,QAAQ,CAAE,OAAO,CAAEH,YAAY,CAAE,MAAO,CAAE,CAAAL,QAAA,eACzFnG,KAAA,QAAKqG,KAAK,CAAE,CAAEO,OAAO,CAAE,MAAO,CAAE,CAAAT,QAAA,eAC5BrG,IAAA,UACI+G,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,uEAAgB,CAC5BrF,KAAK,CAAErB,KAAM,CACb2G,QAAQ,CAAEzD,iBAAkB,CAC5B0D,UAAU,CAAE1C,cAAe,CAC9B,CAAC,cACFxE,IAAA,WAAQoG,SAAS,CAAC,eAAe,CAACE,OAAO,CAAEA,CAAA,GAAMnE,SAAS,CAAC,CAAE,CAAAkE,QAAA,CAAC,2BAE9D,CAAQ,CAAC,EACR,CAAC,CACLvF,cAAc,eACXd,IAAA,QAAKmH,GAAG,CAAEnG,WAAY,CAACoF,SAAS,CAAC,UAAU,CAAAC,QAAA,CACtC3F,cAAc,CAACoC,GAAG,CAAC,CAACC,KAAK,CAAEqE,KAAK,gBAC7BlH,KAAA,QAEIkG,SAAS,CAAC,eAAe,CACzBE,OAAO,CAAEA,CAAA,GAAM/B,qBAAqB,CAACxB,KAAK,CAAE,CAAAsD,QAAA,eAE5CrG,IAAA,SACIqH,uBAAuB,CAAE,CACrBC,MAAM,CAAErC,cAAc,CAAClC,KAAK,CAAC,KAAK,CAAC,EAAI,EAAE,CAAEzC,KAAK,CACpD,CAAE,CACC,CAAC,cACRN,IAAA,SAAMuG,KAAK,CAAE,CAAEgB,UAAU,CAAE,MAAM,CAAEd,KAAK,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAC9CtD,KAAK,CAAC,MAAM,CAAC,EAAI,EAAE,CAClB,CAAC,GAXFqE,KAYJ,CACR,CAAC,CACD,CACR,EACA,CAAC,CAELxG,KAAK,eAAIZ,IAAA,MAAGoG,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEzF,KAAK,CAAI,CAAC,CAGjDJ,gBAAgB,eACbN,KAAA,QAAKkG,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAC9BrG,IAAA,OAAAqG,QAAA,CAAI,2BAAK,CAAI,CAAC,cACdnG,KAAA,MAAAmG,QAAA,EAAG,gBAAI,CAAC7F,gBAAgB,CAAC,IAAI,CAAC,EAAI,KAAK,EAAI,CAAC,cAC5CN,KAAA,MAAAmG,QAAA,EAAG,4BAAM,CAAC7F,gBAAgB,CAAC,MAAM,CAAC,EAAI,KAAK,EAAI,CAAC,cAChDN,KAAA,MAAAmG,QAAA,EAAG,sBAAK,CAAC7F,gBAAgB,CAAC,KAAK,CAAC,EAAI,KAAK,EAAI,CAAC,cAC9CN,KAAA,MAAAmG,QAAA,EAAG,sBAAK,CAAC7F,gBAAgB,CAAC,KAAK,CAAC,EAAI,KAAK,EAAI,CAAC,cAC9CN,KAAA,MAAAmG,QAAA,EAAG,4BAAM,CAAC7F,gBAAgB,CAAC,MAAM,CAAC,EAAI,KAAK,EAAI,CAAC,EAC/C,CACR,CAGAJ,MAAM,CAACkC,MAAM,CAAG,CAAC,eACdtC,IAAA,CAACH,UAAU,EACPO,MAAM,CAAEA,MAAO,CACfoH,WAAW,CAAE,CACT,IAAI,CACJ,MAAM,CACN,KAAK,CACL,KAAK,CACL,MAAM,CACN,WAAW,CACX,WAAW,CACX,UAAU,CACV,MAAQ;AAAA,CACV,CACL,CACJ,CAGApH,MAAM,CAACkC,MAAM,CAAG,CAAC,eACdpC,KAAA,QACIkG,SAAS,CAAC,cAAc,CACxBG,KAAK,CAAE,CAAEkB,SAAS,CAAE,MAAM,CAAEX,OAAO,CAAE,MAAM,CAAEY,GAAG,CAAE,MAAM,CAAEC,QAAQ,CAAE,MAAO,CAAE,CAAAtB,QAAA,eAE7ErG,IAAA,WACIsG,OAAO,CAAEA,CAAA,GAAMf,iBAAiB,CAAC,KAAK,CAAE,CACxCqC,QAAQ,CAAEzG,oBAAoB,EAAII,cAAc,GAAK,KAAM,CAAA8E,QAAA,CAE1DlF,oBAAoB,EAAII,cAAc,GAAK,KAAK,CAAG,aAAa,CAAG,KAAK,CACrE,CAAC,cACTvB,IAAA,WACIsG,OAAO,CAAEA,CAAA,GAAMf,iBAAiB,CAAC,MAAM,CAAE,CACzCqC,QAAQ,CAAEzG,oBAAoB,EAAII,cAAc,GAAK,MAAO,CAAA8E,QAAA,CAE3DlF,oBAAoB,EAAII,cAAc,GAAK,MAAM,CAAG,cAAc,CAAG,MAAM,CACxE,CAAC,cACTvB,IAAA,WACIsG,OAAO,CAAEA,CAAA,GAAMf,iBAAiB,CAAC,OAAO,CAAE,CAC1CqC,QAAQ,CAAEzG,oBAAoB,EAAII,cAAc,GAAK,OAAQ,CAAA8E,QAAA,CAE5DlF,oBAAoB,EAAII,cAAc,GAAK,OAAO,CAAG,eAAe,CAAG,OAAO,CAC3E,CAAC,cACTvB,IAAA,WACIsG,OAAO,CAAEA,CAAA,GAAMf,iBAAiB,CAAC,KAAK,CAAE,CACxCqC,QAAQ,CAAEzG,oBAAoB,EAAII,cAAc,GAAK,KAAM,CAAA8E,QAAA,CAE1DlF,oBAAoB,EAAII,cAAc,GAAK,KAAK,CAAG,aAAa,CAAG,KAAK,CACrE,CAAC,cACTvB,IAAA,WACIsG,OAAO,CAAEA,CAAA,GAAMf,iBAAiB,CAAC,MAAM,CAAE,CACzCqC,QAAQ,CAAEzG,oBAAoB,EAAII,cAAc,GAAK,MAAO,CAAA8E,QAAA,CAE3DlF,oBAAoB,EAAII,cAAc,GAAK,MAAM,CAAG,cAAc,CAAG,MAAM,CACxE,CAAC,EACR,CACR,CAGAJ,oBAAoB,eAAInB,IAAA,MAAAqG,QAAA,CAAG,mEAAe,CAAG,CAAC,CAC9ChF,cAAc,eAAIrB,IAAA,MAAGoG,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEhF,cAAc,CAAI,CAAC,CAGnEJ,aAAa,EAAIA,aAAa,CAACqB,MAAM,CAAG,CAAC,eACtCtC,IAAA,QAAKoG,SAAS,CAAC,sBAAsB,CAACG,KAAK,CAAE,CAAEkB,SAAS,CAAE,MAAO,CAAE,CAAApB,QAAA,cAE/DrG,IAAA,QAAKoG,SAAS,CAAC,iBAAiB,CAACe,GAAG,CAAE1F,QAAS,CAAC8E,KAAK,CAAE,CAAEsB,MAAM,CAAE,OAAQ,CAAE,CAAAxB,QAAA,cACvErG,IAAA,CAACF,GAAG,EACA8C,IAAI,CAAE,CACFkF,MAAM,CAAE7G,aAAa,CAAC6B,GAAG,CAAEiF,IAAI,EAAKA,IAAI,CAACC,EAAE,CAAC,CAC5CC,QAAQ,CAAE,CACN,CACI;AACAC,KAAK,CAAEhG,YAAY,CAACX,cAAc,CAAC,IAAA8D,MAAA,CAAM9D,cAAc,YAAA8D,MAAA,CAAY9D,cAAc,aAAM,CACvFqB,IAAI,CAAE3B,aAAa,CAAC6B,GAAG,CAAEiF,IAAI,EACzB7F,YAAY,CAACX,cAAc,CAAC,CACtBwG,IAAI,CAACxG,cAAc,GAAK,OAAO,CAAG,OAAO,CAAG,MAAM,CAAC,CACnDwG,IAAI,CAACxG,cAAc,CAC7B,CAAC,CACD4G,eAAe,CACX5G,cAAc,GAAK,KAAK,CAClB,yBAAyB,CACzBA,cAAc,GAAK,MAAM,CACrB,yBAAyB,CACzBA,cAAc,GAAK,OAAO,CACtB,yBAAyB,CACzBA,cAAc,GAAK,KAAK,CACpB,0BAA0B,CAC1BA,cAAc,GAAK,MAAM,CACrB,yBAAyB,CACzB,yBAAyB,CACnD6G,WAAW,CACP7G,cAAc,GAAK,KAAK,CAClB,uBAAuB,CACvBA,cAAc,GAAK,MAAM,CACrB,uBAAuB,CACvBA,cAAc,GAAK,OAAO,CACtB,uBAAuB,CACvBA,cAAc,GAAK,KAAK,CACpB,wBAAwB,CACxBA,cAAc,GAAK,MAAM,CACrB,uBAAuB,CACvB,uBAAuB,CACjD8G,WAAW,CAAE,CACjB,CAAC,CAET,CAAE,CACFC,OAAO,CAAE,CACLC,UAAU,CAAE,IAAI,CAAE;AAClBC,mBAAmB,CAAE,KAAK,CAAE;AAC5BC,OAAO,CAAE,CACLC,MAAM,CAAE,CACJ/B,QAAQ,CAAE,KACd,CAAC,CACDgC,KAAK,CAAE,CACH7B,OAAO,CAAE,IAAI,CACb5B,IAAI,IAAAG,MAAA,CAAK7E,gBAAgB,CAAC,KAAK,CAAC,mBAAA6E,MAAA,CAAO9D,cAAc,CACzD,CACJ,CAAC,CACDqH,MAAM,CAAE,CACJC,CAAC,CAAE,CACCC,WAAW,CAAE,KAAK,CAClBC,KAAK,CAAE,CACHC,QAAQ,CAAE,QAAAA,CAAUrH,KAAK,CAAE,CACvB,GAAIO,YAAY,CAACX,cAAc,CAAC,CAAE,CAC9B,MAAO,CAAAI,KAAK,CAACsH,OAAO,CAAC,CAAC,CAAC,CAAG,GAAG,CACjC,CACA,MAAO,CAAAtH,KAAK,CAACuH,cAAc,CAAC,CAAC,CAAG,GAAG,CACvC,CACJ,CACJ,CACJ,CACJ,CAAE,CACL,CAAC,CACD,CAAC,CACL,CACR,EACA,CAAC,CAGd,CAAC,CAED,cAAe,CAAA/I,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}