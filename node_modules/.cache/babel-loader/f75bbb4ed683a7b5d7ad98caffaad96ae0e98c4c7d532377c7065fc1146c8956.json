{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\FinancialStatementsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SimpleTable from \"./SimpleTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/FinancialStatementsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialStatementsPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [currentMetric, setCurrentMetric] = useState(null);\n  const [showYearButtons, setShowYearButtons] = useState(false); // 연도 버튼 표시 여부\n  const [perDirection, setPerDirection] = useState(\"top\"); // PER 방향 상태\n\n  // 데이터 가져오기\n  const fetchTopStocksByMetric = () => {\n    if (currentMetric === \"시가총액\") {\n      axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"시가총액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"매출액\") {\n      axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"매출액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"영업이익\") {\n      axios.get(\"http://127.0.0.1:8000/top-operating-income\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"영업이익 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"영업이익률\") {\n      axios.get(\"http://127.0.0.1:8000/top-operating-income-rate\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"영업이익률 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"순이익률\") {\n      axios.get(\"http://127.0.0.1:8000/top-net-income\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"순이익률 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"EPS\") {\n      axios.get(\"http://127.0.0.1:8000/top-eps\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"EPS 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"PER\") {\n      const endpoint = perDirection === \"top\" ? \"top-per\" : \"bottom-per\";\n      axios.get(`http://127.0.0.1:8000/${endpoint}`, {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"PER 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"PBR\") {\n      // PBR 조건 추가\n      axios.get(\"http://127.0.0.1:8000/top-pbr\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"PBR 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else {\n      setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n    }\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    if (metric === \"PER\") {\n      if (currentMetric === \"PER\") {\n        // PER 방향 토글\n        setPerDirection(prevDirection => prevDirection === \"top\" ? \"bottom\" : \"top\");\n      } else {\n        setPerDirection(\"top\"); // 기본 방향 설정\n      }\n    }\n    setCurrentMetric(metric);\n    if (metric !== \"시가총액\") {\n      setShowYearButtons(true); // 시가총액 제외 모든 버튼 클릭 시 연도 버튼 표시\n      setSelectedYear(\"2024\"); // 기본 연도 설정\n    } else {\n      setShowYearButtons(false); // 시가총액 클릭 시 연도 버튼 숨기기\n      setSelectedYear(null);\n    }\n  };\n\n  // 연도 버튼 클릭 동작\n  const handleYearButtonClick = year => {\n    setSelectedYear(year);\n  };\n\n  // 데이터 요청 트리거\n  useEffect(() => {\n    if (currentMetric) {\n      fetchTopStocksByMetric();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedYear, currentMetric, perDirection]); // perDirection 추가\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financial-statements-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC7AC\\uBB34\\uC81C\\uD45C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"10px\",\n        marginBottom: \"10px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"시가총액\"),\n        style: {\n          backgroundColor: currentMetric === \"시가총액\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"시가총액\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"\\uC2DC\\uAC00\\uCD1D\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"매출액\"),\n        style: {\n          backgroundColor: currentMetric === \"매출액\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"매출액\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"\\uB9E4\\uCD9C\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"영업이익\"),\n        style: {\n          backgroundColor: currentMetric === \"영업이익\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"영업이익\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"\\uC601\\uC5C5\\uC774\\uC775\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"영업이익률\"),\n        style: {\n          backgroundColor: currentMetric === \"영업이익률\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"영업이익률\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"\\uC601\\uC5C5\\uC774\\uC775\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"순이익률\"),\n        style: {\n          backgroundColor: currentMetric === \"순이익률\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"순이익률\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"\\uC21C\\uC774\\uC775\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"EPS\"),\n        style: {\n          backgroundColor: currentMetric === \"EPS\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"EPS\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"EPS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"PER\"),\n        style: {\n          backgroundColor: currentMetric === \"PER\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"PER\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: [\"PER \", currentMetric === \"PER\" ? perDirection === \"top\" ? \"↑\" : \"↓\" : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"PBR\"),\n        style: {\n          backgroundColor: currentMetric === \"PBR\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"PBR\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"PBR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(\"시가배당률\"),\n        style: {\n          backgroundColor: currentMetric === \"시가배당률\" ? \"#007bff\" : \"#fff\",\n          color: currentMetric === \"시가배당률\" ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: \"\\uC2DC\\uAC00\\uBC30\\uB2F9\\uB960\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 13\n    }, this), showYearButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"5px\",\n        marginBottom: \"20px\"\n      },\n      children: [\"2021\", \"2022\", \"2023\", \"2024\"].map(year => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleYearButtonClick(year),\n        style: {\n          backgroundColor: selectedYear === year ? \"#007bff\" : \"#fff\",\n          color: selectedYear === year ? \"#fff\" : \"#000\",\n          border: \"1px solid #007bff\",\n          borderRadius: \"4px\",\n          padding: \"5px 10px\"\n        },\n        children: year\n      }, year, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 23\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(SimpleTable, {\n      stocks: stocks,\n      columnTitle: currentMetric // 동적으로 제목 변경\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 195,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancialStatementsPage, \"+XyHC1KqD7uPM5krUy9TiIsW1Sk=\");\n_c = FinancialStatementsPage;\nexport default FinancialStatementsPage;\nvar _c;\n$RefreshReg$(_c, \"FinancialStatementsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","SimpleTable","jsxDEV","_jsxDEV","FinancialStatementsPage","_s","stocks","setStocks","error","setError","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","showYearButtons","setShowYearButtons","perDirection","setPerDirection","fetchTopStocksByMetric","get","then","response","data","length","catch","console","params","year","endpoint","handleButtonClick","metric","prevDirection","handleYearButtonClick","className","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","alignItems","gap","onClick","backgroundColor","border","borderRadius","padding","map","columnTitle","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/FinancialStatementsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/FinancialStatementsPage.css\";\r\n\r\nconst FinancialStatementsPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(null);\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n    const [showYearButtons, setShowYearButtons] = useState(false); // 연도 버튼 표시 여부\r\n    const [perDirection, setPerDirection] = useState(\"top\"); // PER 방향 상태\r\n\r\n    // 데이터 가져오기\r\n    const fetchTopStocksByMetric = () => {\r\n        if (currentMetric === \"시가총액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"시가총액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"매출액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"매출액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"영업이익\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-operating-income\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"영업이익 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"영업이익률\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-operating-income-rate\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"영업이익률 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"순이익률\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-net-income\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"순이익률 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"EPS\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-eps\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"EPS 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"PER\") {\r\n            const endpoint = perDirection === \"top\" ? \"top-per\" : \"bottom-per\";\r\n            axios\r\n                .get(`http://127.0.0.1:8000/${endpoint}`, { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"PER 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"PBR\") { // PBR 조건 추가\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-pbr\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"PBR 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else {\r\n            setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        if (metric === \"PER\") {\r\n            if (currentMetric === \"PER\") {\r\n                // PER 방향 토글\r\n                setPerDirection((prevDirection) => (prevDirection === \"top\" ? \"bottom\" : \"top\"));\r\n            } else {\r\n                setPerDirection(\"top\"); // 기본 방향 설정\r\n            }\r\n        }\r\n\r\n        setCurrentMetric(metric);\r\n        if (metric !== \"시가총액\") {\r\n            setShowYearButtons(true); // 시가총액 제외 모든 버튼 클릭 시 연도 버튼 표시\r\n            setSelectedYear(\"2024\"); // 기본 연도 설정\r\n        } else {\r\n            setShowYearButtons(false); // 시가총액 클릭 시 연도 버튼 숨기기\r\n            setSelectedYear(null);\r\n        }\r\n    };\r\n\r\n    // 연도 버튼 클릭 동작\r\n    const handleYearButtonClick = (year) => {\r\n        setSelectedYear(year);\r\n    };\r\n\r\n    // 데이터 요청 트리거\r\n    useEffect(() => {\r\n        if (currentMetric) {\r\n            fetchTopStocksByMetric();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedYear, currentMetric, perDirection]); // perDirection 추가\r\n\r\n    return (\r\n        <div className=\"financial-statements-container\">\r\n            <h2 style={{ color: \"#007bff\", marginBottom: \"20px\" }}>재무제표</h2>\r\n\r\n            {/* 정렬기준 버튼 */}\r\n            <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\", marginBottom: \"10px\" }}>\r\n                {/* 시가총액 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"시가총액\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"시가총액\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"시가총액\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    시가총액\r\n                </button>\r\n\r\n                {/* 매출액 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"매출액\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"매출액\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"매출액\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    매출액\r\n                </button>\r\n\r\n                {/* 영업이익 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"영업이익\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"영업이익\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"영업이익\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    영업이익\r\n                </button>\r\n\r\n                {/* 영업이익률 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"영업이익률\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"영업이익률\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"영업이익률\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    영업이익률\r\n                </button>\r\n\r\n                {/* 순이익률 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"순이익률\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"순이익률\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"순이익률\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    순이익률\r\n                </button>\r\n\r\n                {/* EPS 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"EPS\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"EPS\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"EPS\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    EPS\r\n                </button>\r\n\r\n                {/* PER 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"PER\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"PER\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"PER\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    PER {currentMetric === \"PER\" ? (perDirection === \"top\" ? \"↑\" : \"↓\") : \"\"}\r\n                </button>\r\n\r\n                {/* PBR 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"PBR\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"PBR\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"PBR\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    PBR\r\n                </button>\r\n\r\n                {/* 시가배당률 버튼 */}\r\n                <button\r\n                    onClick={() => handleButtonClick(\"시가배당률\")}\r\n                    style={{\r\n                        backgroundColor: currentMetric === \"시가배당률\" ? \"#007bff\" : \"#fff\",\r\n                        color: currentMetric === \"시가배당률\" ? \"#fff\" : \"#000\",\r\n                        border: \"1px solid #007bff\",\r\n                        borderRadius: \"4px\",\r\n                        padding: \"5px 10px\",\r\n                    }}\r\n                >\r\n                    시가배당률\r\n                </button>\r\n            </div>\r\n\r\n            {/* 연도 버튼들 (시가총액을 제외한 모든 버튼 클릭 시 표시) */}\r\n            {showYearButtons && (\r\n                <div style={{ display: \"flex\", gap: \"5px\", marginBottom: \"20px\" }}>\r\n                    {[\"2021\", \"2022\", \"2023\", \"2024\"].map((year) => (\r\n                        <button\r\n                            key={year}\r\n                            onClick={() => handleYearButtonClick(year)}\r\n                            style={{\r\n                                backgroundColor: selectedYear === year ? \"#007bff\" : \"#fff\",\r\n                                color: selectedYear === year ? \"#fff\" : \"#000\",\r\n                                border: \"1px solid #007bff\",\r\n                                borderRadius: \"4px\",\r\n                                padding: \"5px 10px\",\r\n                            }}\r\n                        >\r\n                            {year}\r\n                        </button>\r\n                    ))}\r\n                </div>\r\n            )}\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <SimpleTable\r\n                    stocks={stocks}\r\n                    columnTitle={currentMetric} // 동적으로 제목 변경\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n\r\n};\r\n\r\nexport default FinancialStatementsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}