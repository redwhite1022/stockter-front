{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 검색어 강조 표시 함수\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 시가총액 상위 50개 가져오기\n  const fetchTopStocksByMarketCap = () => {\n    axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"시가총액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 매출액 상위 50개 가져오기\n  const fetchTopStocksByRevenue = year => {\n    if (!year) {\n      setError(\"년도를 입력하세요.\");\n      return;\n    }\n    axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n      params: {\n        year\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"매출액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 입력값 변경\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          setFilteredStocks(filtered.slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n\n  // 초기 상태로 리셋\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n  };\n\n  // 추천 클릭\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n\n  // 엔터 키 동작\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    if (metric === \"시가총액\") {\n      fetchTopStocksByMarketCap();\n    } else if (metric === \"매출액\") {\n      const year = prompt(\"매출액 데이터를 가져올 년도를 입력하세요 (예: 2021.12):\");\n      if (year) fetchTopStocksByRevenue(year);\n    }\n  };\n\n  // 외부 클릭 이벤트 감지\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      alignItems: \"center\",\n      paddingTop: \"50px\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\"\n      },\n      children: \"Stockter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"600px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n        value: query,\n        onChange: handleQueryChange,\n        onKeyPress: handleKeyPress,\n        style: {\n          width: \"100%\",\n          padding: \"10px\",\n          border: \"1px solid #ccc\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        style: {\n          position: \"absolute\",\n          top: \"40px\",\n          width: \"100%\",\n          background: \"#fff\",\n          border: \"1px solid #ccc\"\n        },\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: () => handleSuggestionClick(stock),\n          style: {\n            padding: \"10px\",\n            cursor: \"pointer\"\n          },\n          children: stock[\"종목명\"]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\n        gap: \"10px\",\n        marginTop: \"20px\"\n      },\n      children: [\"시가총액\", \"매출액\"].map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          border: \"1px solid #ccc\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 13\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      style: {\n        marginTop: \"20px\",\n        borderCollapse: \"collapse\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n            style: {\n              border: \"1px solid #ccc\",\n              padding: \"10px\"\n            },\n            children: key\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: Object.values(stock).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n            style: {\n              border: \"1px solid #ccc\",\n              padding: \"10px\"\n            },\n            children: value\n          }, idx, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"U2V+1toZ8IbdJsrXfSf8eT8BMc4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","highlightMatch","text","regex","RegExp","replace","match","fetchData","searchQuery","trim","get","params","then","response","data","length","catch","console","fetchTopStocksByMarketCap","fetchTopStocksByRevenue","year","handleQueryChange","e","input","target","value","lowercasedInput","toLowerCase","filtered","filter","stock","stockCode","toString","stockName","includes","slice","resetState","handleSuggestionClick","handleKeyPress","key","handleButtonClick","metric","prompt","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","style","display","flexDirection","alignItems","paddingTop","children","onClick","cursor","color","fileName","_jsxFileName","lineNumber","columnNumber","position","width","type","placeholder","onChange","onKeyPress","padding","border","ref","top","background","map","index","gridTemplateColumns","gap","marginTop","borderCollapse","Object","keys","values","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 검색어 강조 표시 함수\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 시가총액 상위 50개 가져오기\r\n    const fetchTopStocksByMarketCap = () => {\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"시가총액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 매출액 상위 50개 가져오기\r\n    const fetchTopStocksByRevenue = (year) => {\r\n        if (!year) {\r\n            setError(\"년도를 입력하세요.\");\r\n            return;\r\n        }\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"매출액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 입력값 변경\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks(filtered.slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    // 초기 상태로 리셋\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n    };\r\n\r\n    // 추천 클릭\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    // 엔터 키 동작\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        if (metric === \"시가총액\") {\r\n            fetchTopStocksByMarketCap();\r\n        } else if (metric === \"매출액\") {\r\n            const year = prompt(\"매출액 데이터를 가져올 년도를 입력하세요 (예: 2021.12):\");\r\n            if (year) fetchTopStocksByRevenue(year);\r\n        }\r\n    };\r\n\r\n    // 외부 클릭 이벤트 감지\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", paddingTop: \"50px\" }}>\r\n            <h1 onClick={resetState} style={{ cursor: \"pointer\", color: \"#007bff\" }}>\r\n                Stockter\r\n            </h1>\r\n            <div style={{ position: \"relative\", width: \"600px\" }}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"종목명 또는 종목코드 입력\"\r\n                    value={query}\r\n                    onChange={handleQueryChange}\r\n                    onKeyPress={handleKeyPress}\r\n                    style={{ width: \"100%\", padding: \"10px\", border: \"1px solid #ccc\" }}\r\n                />\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} style={{ position: \"absolute\", top: \"40px\", width: \"100%\", background: \"#fff\", border: \"1px solid #ccc\" }}>\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div key={index} onClick={() => handleSuggestionClick(stock)} style={{ padding: \"10px\", cursor: \"pointer\" }}>\r\n                                {stock[\"종목명\"]}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n            {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n            <div style={{ display: \"grid\", gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\", gap: \"10px\", marginTop: \"20px\" }}>\r\n                {[\"시가총액\", \"매출액\"].map((metric) => (\r\n                    <button key={metric} onClick={() => handleButtonClick(metric)} style={{ padding: \"10px\", border: \"1px solid #ccc\" }}>\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n            {stocks.length > 0 && (\r\n                <table style={{ marginTop: \"20px\", borderCollapse: \"collapse\", width: \"100%\" }}>\r\n                    <thead>\r\n                        <tr>\r\n                            {Object.keys(stocks[0]).map((key, index) => (\r\n                                <th key={index} style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                                    {key}\r\n                                </th>\r\n                            ))}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {stocks.map((stock, index) => (\r\n                            <tr key={index}>\r\n                                {Object.values(stock).map((value, idx) => (\r\n                                    <td key={idx} style={{ border: \"1px solid #ccc\", padding: \"10px\" }}>\r\n                                        {value}\r\n                                    </td>\r\n                                ))}\r\n                            </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}