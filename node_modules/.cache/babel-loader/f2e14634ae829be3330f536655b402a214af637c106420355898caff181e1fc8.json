{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [selectedYear, setSelectedYear] = useState(\"2021.12\");\n  const dropdownRef = useRef(null);\n\n  // 매출액 단위 변환 함수\n  const formatRevenue = value => {\n    if (value >= 10 ** 12) {\n      // 1조 이상\n      const trillion = Math.floor(value / 10 ** 12); // 1조 이상\n      const billion = Math.floor(value % 10 ** 12 / 10 ** 10); // 1천억\n      return `${trillion}조 ${billion}천억`;\n    } else if (value >= 10 ** 11) {\n      // 1천억 이상\n      const billion = Math.floor(value / 10 ** 10); // 1천억 단위\n      return `${billion}천억`;\n    } else if (value >= 10 ** 8) {\n      // 1억 이상\n      const billion = Math.floor(value / 10 ** 8); // 억 단위\n      return `${billion}억`;\n    }\n    return value; // 그 외에는 그대로 반환\n  };\n\n  // 검색어 강조 표시 함수\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n\n  // 년도 변경\n  const handleYearChange = e => {\n    setSelectedYear(e.target.value);\n    fetchTopStocksByRevenue(e.target.value); // 년도 변경 시 매출액 기준으로 데이터를 다시 가져옴\n  };\n\n  // 매출액 상위 50개 가져오기\n  const fetchTopStocksByRevenue = year => {\n    axios.get(`http://127.0.0.1:8000/top-revenue`, {\n      params: {\n        year: year\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"매출액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        // 매출액을 formatRevenue로 변환\n        const formattedStocks = response.data.stocks.map(stock => {\n          return {\n            ...stock,\n            \"매출액\": formatRevenue(stock[\"매출액(숫자형)\"]) // 변환된 매출액\n          };\n        });\n        setStocks(formattedStocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 시가총액 상위 50개 가져오기\n  const fetchTopStocksByMarketCap = () => {\n    axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"시가총액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        // 시가총액을 formatRevenue로 변환\n        const formattedStocks = response.data.stocks.map(stock => {\n          return {\n            ...stock,\n            \"시가총액\": formatRevenue(stock[\"시가총액(숫자형)\"]) // 변환된 시가총액\n          };\n        });\n        setStocks(formattedStocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    if (metric === \"시가총액\") {\n      fetchTopStocksByMarketCap();\n    } else if (metric === \"매출액\") {\n      fetchTopStocksByRevenue(selectedYear);\n    }\n  };\n\n  // 입력값 변경\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n\n  // 엔터 키 동작\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // 외부 클릭 이벤트 감지\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  useEffect(() => {\n    fetchTopStocksByRevenue(selectedYear); // 초기 로드 시 2021.12 데이터로 매출액 상위 50개 가져오기\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      paddingTop: \"50px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => setStocks([]),\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textAlign: \"center\"\n      },\n      children: \"Stockter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"\\uB144\\uB3C4 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year\",\n        value: selectedYear,\n        onChange: handleYearChange,\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021.12\",\n          children: \"2021\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022.12\",\n          children: \"2022\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2023.12\",\n          children: \"2023\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024.12\",\n          children: \"2024\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\n        gap: \"10px\",\n        width: \"80%\",\n        marginBottom: \"20px\"\n      },\n      children: [\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        marginTop: \"20px\",\n        textAlign: \"left\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"max-content\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"8px\",\n                background: \"#f2f2f2\",\n                textAlign: \"center\"\n              },\n              children: key\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(stock).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"8px\",\n                textAlign: \"center\"\n              },\n              children: value\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 169,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"hNxXjPxlKshEJ6MIyy14L/Nccjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","selectedYear","setSelectedYear","dropdownRef","formatRevenue","value","trillion","Math","floor","billion","highlightMatch","text","regex","RegExp","replace","match","handleYearChange","e","target","fetchTopStocksByRevenue","year","get","params","then","response","data","length","formattedStocks","map","stock","catch","console","fetchTopStocksByMarketCap","handleButtonClick","metric","handleQueryChange","input","trim","lowercasedInput","toLowerCase","filtered","filter","stockCode","toString","stockName","includes","startsWithQuery","startsWith","others","slice","handleKeyPress","key","fetchData","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","style","display","flexDirection","justifyContent","alignItems","height","paddingTop","fontFamily","children","onClick","cursor","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","marginRight","id","onChange","padding","fontSize","border","borderRadius","gridTemplateColumns","gap","width","background","overflowX","marginTop","borderCollapse","Object","keys","index","values","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [selectedYear, setSelectedYear] = useState(\"2021.12\");\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 매출액 단위 변환 함수\r\n    const formatRevenue = (value) => {\r\n        if (value >= 10 ** 12) {  // 1조 이상\r\n            const trillion = Math.floor(value / 10 ** 12); // 1조 이상\r\n            const billion = Math.floor((value % 10 ** 12) / 10 ** 10); // 1천억\r\n            return `${trillion}조 ${billion}천억`;\r\n        } else if (value >= 10 ** 11) {  // 1천억 이상\r\n            const billion = Math.floor(value / 10 ** 10); // 1천억 단위\r\n            return `${billion}천억`;\r\n        } else if (value >= 10 ** 8) {  // 1억 이상\r\n            const billion = Math.floor(value / 10 ** 8); // 억 단위\r\n            return `${billion}억`;\r\n        }\r\n        return value;  // 그 외에는 그대로 반환\r\n    };\r\n\r\n    // 검색어 강조 표시 함수\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    // 년도 변경\r\n    const handleYearChange = (e) => {\r\n        setSelectedYear(e.target.value);\r\n        fetchTopStocksByRevenue(e.target.value); // 년도 변경 시 매출액 기준으로 데이터를 다시 가져옴\r\n    };\r\n\r\n    // 매출액 상위 50개 가져오기\r\n    const fetchTopStocksByRevenue = (year) => {\r\n        axios.get(`http://127.0.0.1:8000/top-revenue`, { params: { year: year } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"매출액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    // 매출액을 formatRevenue로 변환\r\n                    const formattedStocks = response.data.stocks.map(stock => {\r\n                        return {\r\n                            ...stock,\r\n                            \"매출액\": formatRevenue(stock[\"매출액(숫자형)\"]),  // 변환된 매출액\r\n                        };\r\n                    });\r\n                    setStocks(formattedStocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 시가총액 상위 50개 가져오기\r\n    const fetchTopStocksByMarketCap = () => {\r\n        axios.get(\"http://127.0.0.1:8000/top-marketcap\")\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"시가총액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    // 시가총액을 formatRevenue로 변환\r\n                    const formattedStocks = response.data.stocks.map(stock => {\r\n                        return {\r\n                            ...stock,\r\n                            \"시가총액\": formatRevenue(stock[\"시가총액(숫자형)\"]),  // 변환된 시가총액\r\n                        };\r\n                    });\r\n                    setStocks(formattedStocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        if (metric === \"시가총액\") {\r\n            fetchTopStocksByMarketCap();\r\n        } else if (metric === \"매출액\") {\r\n            fetchTopStocksByRevenue(selectedYear);\r\n        }\r\n    };\r\n\r\n    // 입력값 변경\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios.get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    // 엔터 키 동작\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // 외부 클릭 이벤트 감지\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchTopStocksByRevenue(selectedYear); // 초기 로드 시 2021.12 데이터로 매출액 상위 50개 가져오기\r\n    }, [selectedYear]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                paddingTop: \"50px\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n            }}\r\n        >\r\n            <h1\r\n                onClick={() => setStocks([])}\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n                Stockter\r\n            </h1>\r\n\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <label htmlFor=\"year\" style={{ marginRight: \"10px\" }}>년도 선택:</label>\r\n                <select\r\n                    id=\"year\"\r\n                    value={selectedYear}\r\n                    onChange={handleYearChange}\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                    }}\r\n                >\r\n                    <option value=\"2021.12\">2021년 12월</option>\r\n                    <option value=\"2022.12\">2022년 12월</option>\r\n                    <option value=\"2023.12\">2023년 12월</option>\r\n                    <option value=\"2024.12\">2024년 12월</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\r\n                    gap: \"10px\",\r\n                    width: \"80%\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                {[\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map((metric) => (\r\n                    <button\r\n                        key={metric}\r\n                        onClick={() => handleButtonClick(metric)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    >\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    style={{\r\n                        overflowX: \"auto\",\r\n                        marginTop: \"20px\",\r\n                        textAlign: \"left\",\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <table\r\n                        border=\"1\"\r\n                        style={{\r\n                            width: \"max-content\",\r\n                            borderCollapse: \"collapse\",\r\n                        }}\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                {Object.keys(stocks[0]).map((key, index) => (\r\n                                    <th\r\n                                        key={index}\r\n                                        style={{\r\n                                            padding: \"8px\",\r\n                                            background: \"#f2f2f2\",\r\n                                            textAlign: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        {key}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {stocks.map((stock, index) => (\r\n                                <tr key={index}>\r\n                                    {Object.values(stock).map((value, idx) => (\r\n                                        <td\r\n                                            key={idx}\r\n                                            style={{\r\n                                                padding: \"8px\",\r\n                                                textAlign: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            {value}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAMoB,WAAW,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMmB,aAAa,GAAIC,KAAK,IAAK;IAC7B,IAAIA,KAAK,IAAI,EAAE,IAAI,EAAE,EAAE;MAAG;MACtB,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAC/C,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAAEH,KAAK,GAAG,EAAE,IAAI,EAAE,GAAI,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAC3D,OAAO,GAAGC,QAAQ,KAAKG,OAAO,IAAI;IACtC,CAAC,MAAM,IAAIJ,KAAK,IAAI,EAAE,IAAI,EAAE,EAAE;MAAG;MAC7B,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;MAC9C,OAAO,GAAGI,OAAO,IAAI;IACzB,CAAC,MAAM,IAAIJ,KAAK,IAAI,EAAE,IAAI,CAAC,EAAE;MAAG;MAC5B,MAAMI,OAAO,GAAGF,IAAI,CAACC,KAAK,CAACH,KAAK,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;MAC7C,OAAO,GAAGI,OAAO,GAAG;IACxB;IACA,OAAOJ,KAAK,CAAC,CAAE;EACnB,CAAC;;EAED;EACA,MAAMK,cAAc,GAAGA,CAACC,IAAI,EAAElB,KAAK,KAAK;IACpC,IAAI,CAACA,KAAK,EAAE,OAAOkB,IAAI;IACvB,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAIpB,KAAK,GAAG,EAAE,IAAI,CAAC;IAC5C,OAAOkB,IAAI,CAACG,OAAO,CAACF,KAAK,EAAGG,KAAK,IAAK,4BAA4BA,KAAK,SAAS,CAAC;EACrF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5Bf,eAAe,CAACe,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC;IAC/Bc,uBAAuB,CAACF,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMc,uBAAuB,GAAIC,IAAI,IAAK;IACtClC,KAAK,CAACmC,GAAG,CAAC,mCAAmC,EAAE;MAAEC,MAAM,EAAE;QAAEF,IAAI,EAAEA;MAAK;IAAE,CAAC,CAAC,CACrEG,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAAC5B,KAAK,IAAI2B,QAAQ,CAACC,IAAI,CAAClC,MAAM,CAACmC,MAAM,KAAK,CAAC,EAAE;QAC1D5B,QAAQ,CAAC,gBAAgB,CAAC;QAC1BN,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACH;QACA,MAAMmC,eAAe,GAAGH,QAAQ,CAACC,IAAI,CAAClC,MAAM,CAACqC,GAAG,CAACC,KAAK,IAAI;UACtD,OAAO;YACH,GAAGA,KAAK;YACR,KAAK,EAAEzB,aAAa,CAACyB,KAAK,CAAC,UAAU,CAAC,CAAC,CAAG;UAC9C,CAAC;QACL,CAAC,CAAC;QACFrC,SAAS,CAACmC,eAAe,CAAC;QAC1B7B,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,CACDgC,KAAK,CAAEjC,KAAK,IAAK;MACdkC,OAAO,CAAClC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BN,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMwC,yBAAyB,GAAGA,CAAA,KAAM;IACpC9C,KAAK,CAACmC,GAAG,CAAC,qCAAqC,CAAC,CAC3CE,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAAC5B,KAAK,IAAI2B,QAAQ,CAACC,IAAI,CAAClC,MAAM,CAACmC,MAAM,KAAK,CAAC,EAAE;QAC1D5B,QAAQ,CAAC,iBAAiB,CAAC;QAC3BN,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACH;QACA,MAAMmC,eAAe,GAAGH,QAAQ,CAACC,IAAI,CAAClC,MAAM,CAACqC,GAAG,CAACC,KAAK,IAAI;UACtD,OAAO;YACH,GAAGA,KAAK;YACR,MAAM,EAAEzB,aAAa,CAACyB,KAAK,CAAC,WAAW,CAAC,CAAC,CAAG;UAChD,CAAC;QACL,CAAC,CAAC;QACFrC,SAAS,CAACmC,eAAe,CAAC;QAC1B7B,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,CACDgC,KAAK,CAAEjC,KAAK,IAAK;MACdkC,OAAO,CAAClC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BN,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMyC,iBAAiB,GAAIC,MAAM,IAAK;IAClC,IAAIA,MAAM,KAAK,MAAM,EAAE;MACnBF,yBAAyB,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIE,MAAM,KAAK,KAAK,EAAE;MACzBf,uBAAuB,CAAClB,YAAY,CAAC;IACzC;EACJ,CAAC;;EAED;EACA,MAAMkC,iBAAiB,GAAIlB,CAAC,IAAK;IAC7B,MAAMmB,KAAK,GAAGnB,CAAC,CAACC,MAAM,CAACb,KAAK;IAC5BX,QAAQ,CAAC0C,KAAK,CAAC;IAEf,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACrBzC,iBAAiB,CAAC,EAAE,CAAC;MACrBI,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC,MAAM;MACHd,KAAK,CAACmC,GAAG,CAAC,4BAA4B,EAAE;QAAEC,MAAM,EAAE;UAAE7B,KAAK,EAAE2C;QAAM;MAAE,CAAC,CAAC,CAChEb,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAI,CAAClC,MAAM,EAAE;UACtB,MAAM+C,eAAe,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;UAC3C,MAAMC,QAAQ,GAAGhB,QAAQ,CAACC,IAAI,CAAClC,MAAM,CAACkD,MAAM,CAAEZ,KAAK,IAAK;YACpD,MAAMa,SAAS,GAAGb,KAAK,CAAC,MAAM,CAAC,CAACc,QAAQ,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC;YACxD,MAAMK,SAAS,GAAGf,KAAK,CAAC,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC;YAC5C,OAAOG,SAAS,CAACG,QAAQ,CAACP,eAAe,CAAC,IAAIM,SAAS,CAACC,QAAQ,CAACP,eAAe,CAAC;UACrF,CAAC,CAAC;UAEF,MAAMQ,eAAe,GAAGN,QAAQ,CAACC,MAAM,CAAEZ,KAAK,IAAK;YAC/C,MAAMa,SAAS,GAAGb,KAAK,CAAC,MAAM,CAAC,CAACc,QAAQ,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC;YACxD,MAAMK,SAAS,GAAGf,KAAK,CAAC,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC;YAC5C,OAAOG,SAAS,CAACK,UAAU,CAACT,eAAe,CAAC,IAAIM,SAAS,CAACG,UAAU,CAACT,eAAe,CAAC;UACzF,CAAC,CAAC;UAEF,MAAMU,MAAM,GAAGR,QAAQ,CAACC,MAAM,CAAEZ,KAAK,IAAK;YACtC,MAAMa,SAAS,GAAGb,KAAK,CAAC,MAAM,CAAC,CAACc,QAAQ,CAAC,CAAC,CAACJ,WAAW,CAAC,CAAC;YACxD,MAAMK,SAAS,GAAGf,KAAK,CAAC,KAAK,CAAC,CAACU,WAAW,CAAC,CAAC;YAC5C,OAAO,CAACG,SAAS,CAACK,UAAU,CAACT,eAAe,CAAC,IAAI,CAACM,SAAS,CAACG,UAAU,CAACT,eAAe,CAAC;UAC3F,CAAC,CAAC;UAEF1C,iBAAiB,CAAC,CAAC,GAAGkD,eAAe,EAAE,GAAGE,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAC/DjD,iBAAiB,CAAC,IAAI,CAAC;QAC3B;MACJ,CAAC,CAAC,CACD8B,KAAK,CAAEjC,KAAK,IAAK;QACdkC,OAAO,CAAClC,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ,CAAC;;EAED;EACA,MAAMqD,cAAc,GAAIjC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACkC,GAAG,KAAK,OAAO,EAAE;MACnBC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC;;EAED;EACApE,SAAS,CAAC,MAAM;IACZ,MAAMqE,kBAAkB,GAAIpC,CAAC,IAAK;MAC9B,IAAId,WAAW,CAACmD,OAAO,IAAI,CAACnD,WAAW,CAACmD,OAAO,CAACC,QAAQ,CAACtC,CAAC,CAACC,MAAM,CAAC,EAAE;QAChElB,iBAAiB,CAAC,KAAK,CAAC;MAC5B;IACJ,CAAC;IACDwD,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACTG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IACjE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAENrE,SAAS,CAAC,MAAM;IACZmC,uBAAuB,CAAClB,YAAY,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACIb,OAAA;IACIuE,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,YAAY;MAC5BC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,OAAO;MACfC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,gBAEF/E,OAAA;MACIgF,OAAO,EAAEA,CAAA,KAAM5E,SAAS,CAAC,EAAE,CAAE;MAC7BmE,KAAK,EAAE;QACHU,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,SAAS,EAAE;MACf,CAAE;MAAAJ,QAAA,EACL;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELvF,OAAA;MAAKuE,KAAK,EAAE;QAAEiB,YAAY,EAAE;MAAO,CAAE;MAAAT,QAAA,gBACjC/E,OAAA;QAAOyF,OAAO,EAAC,MAAM;QAAClB,KAAK,EAAE;UAAEmB,WAAW,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpEvF,OAAA;QACI2F,EAAE,EAAC,MAAM;QACT1E,KAAK,EAAEJ,YAAa;QACpB+E,QAAQ,EAAEhE,gBAAiB;QAC3B2C,KAAK,EAAE;UACHsB,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBC,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE;QAClB,CAAE;QAAAjB,QAAA,gBAEF/E,OAAA;UAAQiB,KAAK,EAAC,SAAS;UAAA8D,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1CvF,OAAA;UAAQiB,KAAK,EAAC,SAAS;UAAA8D,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1CvF,OAAA;UAAQiB,KAAK,EAAC,SAAS;UAAA8D,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1CvF,OAAA;UAAQiB,KAAK,EAAC,SAAS;UAAA8D,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENvF,OAAA;MACIuE,KAAK,EAAE;QACHC,OAAO,EAAE,MAAM;QACfyB,mBAAmB,EAAE,sCAAsC;QAC3DC,GAAG,EAAE,MAAM;QACXC,KAAK,EAAE,KAAK;QACZX,YAAY,EAAE;MAClB,CAAE;MAAAT,QAAA,EAED,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAACvC,GAAG,CAAEM,MAAM,iBAC1E9C,OAAA;QAEIgF,OAAO,EAAEA,CAAA,KAAMnC,iBAAiB,CAACC,MAAM,CAAE;QACzCyB,KAAK,EAAE;UACHsB,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBM,UAAU,EAAE,SAAS;UACrBL,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBf,MAAM,EAAE;QACZ,CAAE;QAAAF,QAAA,EAEDjC;MAAM,GAXFA,MAAM;QAAAsC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYP,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAELpF,MAAM,CAACmC,MAAM,GAAG,CAAC,iBACdtC,OAAA;MACIuE,KAAK,EAAE;QACH8B,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,MAAM;QACjBnB,SAAS,EAAE,MAAM;QACjBgB,KAAK,EAAE,MAAM;QACb3B,OAAO,EAAE,MAAM;QACfE,cAAc,EAAE;MACpB,CAAE;MAAAK,QAAA,eAEF/E,OAAA;QACI+F,MAAM,EAAC,GAAG;QACVxB,KAAK,EAAE;UACH4B,KAAK,EAAE,aAAa;UACpBI,cAAc,EAAE;QACpB,CAAE;QAAAxB,QAAA,gBAEF/E,OAAA;UAAA+E,QAAA,eACI/E,OAAA;YAAA+E,QAAA,EACKyB,MAAM,CAACC,IAAI,CAACtG,MAAM,CAAC,CAAC,CAAC,CAAC,CAACqC,GAAG,CAAC,CAACuB,GAAG,EAAE2C,KAAK,kBACnC1G,OAAA;cAEIuE,KAAK,EAAE;gBACHsB,OAAO,EAAE,KAAK;gBACdO,UAAU,EAAE,SAAS;gBACrBjB,SAAS,EAAE;cACf,CAAE;cAAAJ,QAAA,EAEDhB;YAAG,GAPC2C,KAAK;cAAAtB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRvF,OAAA;UAAA+E,QAAA,EACK5E,MAAM,CAACqC,GAAG,CAAC,CAACC,KAAK,EAAEiE,KAAK,kBACrB1G,OAAA;YAAA+E,QAAA,EACKyB,MAAM,CAACG,MAAM,CAAClE,KAAK,CAAC,CAACD,GAAG,CAAC,CAACvB,KAAK,EAAE2F,GAAG,kBACjC5G,OAAA;cAEIuE,KAAK,EAAE;gBACHsB,OAAO,EAAE,KAAK;gBACdV,SAAS,EAAE;cACf,CAAE;cAAAJ,QAAA,EAED9D;YAAK,GAND2F,GAAG;cAAAxB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOR,CACP;UAAC,GAXGmB,KAAK;YAAAtB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACrF,EAAA,CAlSID,GAAG;AAAA4G,EAAA,GAAH5G,GAAG;AAoST,eAAeA,GAAG;AAAC,IAAA4G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}