{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { Line } from \"react-chartjs-2\"; // Chart.js를 사용한 차트 컴포넌트\nimport Chart from \"chart.js/auto\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [revenueData, setRevenueData] = useState(null); // 매출액 데이터 상태\n  const dropdownRef = useRef(null);\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    console.log(\"Fetching data for query:\", searchQuery);\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      setStocks([]);\n      setHighlightedStock(null);\n      setRevenueData(null);\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    setRevenueData(null); // 새로운 검색 시 매출액 데이터 초기화\n\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      console.log(\"Data response:\", response.data);\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n        setHighlightedStock(null);\n      } else {\n        const rawData = response.data.stocks;\n\n        // 데이터 매핑 및 결측값 처리\n        const cleanValue = value => {\n          if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\n          return value.toString().replace(/,/g, \"\"); // 쉼표 제거\n        };\n        const mappedData = rawData.map(stock => ({\n          ...stock,\n          \"종목코드\": stock[\"종목코드\"] ? stock[\"종목코드\"].toString().padStart(6, '0') : \"N/A\",\n          eps: cleanValue(stock[`2021.12 EPS(원)`]) || cleanValue(stock[`2022.12 EPS(원)`]) || cleanValue(stock[`2023.12 EPS(원)`]) || cleanValue(stock[`2024.12 EPS(원)`]),\n          per: cleanValue(stock[`2021.12 PER(배)`]) || cleanValue(stock[`2022.12 PER(배)`]) || cleanValue(stock[`2023.12 PER(배)`]) || cleanValue(stock[`2024.12 PER(배)`]),\n          pbr: cleanValue(stock[`2021.12 PBR(배)`]) || cleanValue(stock[`2022.12 PBR(배)`]) || cleanValue(stock[`2023.12 PBR(배)`]) || cleanValue(stock[`2024.12 PBR(배)`]),\n          dividendPerShare: cleanValue(stock[`2021.12 주당배당금(원)`]) || cleanValue(stock[`2022.12 주당배당금(원)`]) || cleanValue(stock[`2023.12 주당배당금(원)`]) || cleanValue(stock[`2024.12 주당배당금(원)`]),\n          dividendYield: cleanValue(stock[`2021.12 시가배당률(%)`]) || cleanValue(stock[`2022.12 시가배당률(%)`]) || cleanValue(stock[`2023.12 시가배당률(%)`]) || cleanValue(stock[`2024.12 시가배당률(%)`])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0]); // 첫 번째 종목 설정\n        setError(\"\");\n\n        // 매출액 데이터 가져오기\n        fetchRevenueData(mappedData[0][\"종목코드\"]);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n      setHighlightedStock(null);\n      setRevenueData(null);\n    });\n  };\n\n  // 매출액 데이터 가져오기\n  const fetchRevenueData = stockCode => {\n    console.log(\"Fetching revenue data for stock code:\", stockCode);\n    if (!stockCode) {\n      setRevenueData(null);\n      return;\n    }\n    axios.get(\"http://127.0.0.1:8000/stock-revenue-history\", {\n      params: {\n        stock_code: stockCode\n      }\n    }).then(response => {\n      console.log(\"Revenue data response:\", response.data);\n      if (response.data.error) {\n        setError(`매출액 데이터를 가져올 수 없습니다: ${response.data.error}`);\n        setRevenueData(null);\n      } else if (!response.data.revenue) {\n        setError(\"매출액 데이터가 없습니다.\");\n        setRevenueData(null);\n      } else {\n        setRevenueData(response.data.revenue);\n        console.log(\"연간 매출액 데이터:\", response.data.revenue);\n      }\n    }).catch(error => {\n      console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setRevenueData(null);\n    });\n  };\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    console.log(\"Query changed to:\", input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n      return;\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        console.log(\"Autocomplete data response:\", response.data);\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          const top10 = [...startsWithQuery, ...others].slice(0, 10);\n          setFilteredStocks(top10);\n          setIsDropdownOpen(true);\n          console.log(\"Filtered stocks for autocomplete:\", top10);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n  const handleSuggestionClick = stock => {\n    console.log(\"Suggestion clicked:\", stock);\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      console.log(\"Enter key pressed\");\n      fetchData();\n    }\n  };\n  const resetState = () => {\n    console.log(\"Resetting state\");\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n    setRevenueData(null);\n  };\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n  const generateChartData = () => {\n    if (!revenueData) return null;\n    const labels = Object.keys(revenueData).sort(); // 연도 정렬\n    const data = labels.map(year => revenueData[year]);\n    console.log(\"Chart Labels:\", labels);\n    console.log(\"Chart Data:\", data);\n    return {\n      labels,\n      datasets: [{\n        label: \"연간 매출액 (억원)\",\n        data: data.map(value => value / 10 ** 8),\n        // 억 단위로 변환\n        borderColor: \"rgba(75, 192, 192, 1)\",\n        backgroundColor: \"rgba(75, 192, 192, 0.2)\"\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 254,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\"] // 제외할 키 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }, this), revenueData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"40px auto\",\n        backgroundColor: \"#f9f9f9\",\n        padding: \"20px\",\n        borderRadius: \"8px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5F0\\uAC04 \\uB9E4\\uCD9C\\uC561 \\uB370\\uC774\\uD130\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"pre\", {\n        children: JSON.stringify(revenueData, null, 2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 17\n    }, this), revenueData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"40px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5F0\\uAC04 \\uB9E4\\uCD9C\\uC561 \\uCC28\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Line, {\n        data: generateChartData()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 17\n    }, this), stocks.length > 0 && !revenueData && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"80%\",\n        margin: \"40px auto\",\n        color: \"red\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB9E4\\uCD9C\\uC561 \\uB370\\uC774\\uD130\\uB97C \\uBD88\\uB7EC\\uC624\\uB294 \\uC911\\uC774\\uAC70\\uB098, \\uB370\\uC774\\uD130\\uAC00 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 239,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"hxgc9HsRJ9GqqWV1lWBMsepxMc4=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Line","Chart","StockTable","jsxDEV","_jsxDEV","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","revenueData","setRevenueData","dropdownRef","fetchData","searchQuery","console","log","trim","get","params","then","response","data","length","rawData","cleanValue","value","toString","replace","mappedData","map","stock","padStart","eps","per","pbr","dividendPerShare","dividendYield","fetchRevenueData","catch","stockCode","stock_code","revenue","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockName","includes","startsWithQuery","startsWith","others","top10","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","generateChartData","labels","Object","keys","sort","year","datasets","label","borderColor","backgroundColor","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","margin","padding","borderRadius","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Line } from \"react-chartjs-2\"; // Chart.js를 사용한 차트 컴포넌트\r\nimport Chart from \"chart.js/auto\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [revenueData, setRevenueData] = useState(null); // 매출액 데이터 상태\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        console.log(\"Fetching data for query:\", searchQuery);\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            setStocks([]);\r\n            setHighlightedStock(null);\r\n            setRevenueData(null);\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n        setRevenueData(null); // 새로운 검색 시 매출액 데이터 초기화\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                console.log(\"Data response:\", response.data);\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                    setHighlightedStock(null);\r\n                } else {\r\n                    const rawData = response.data.stocks;\r\n\r\n                    // 데이터 매핑 및 결측값 처리\r\n                    const cleanValue = (value) => {\r\n                        if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\r\n                        return value.toString().replace(/,/g, \"\"); // 쉼표 제거\r\n                    };\r\n\r\n                    const mappedData = rawData.map((stock) => ({\r\n                        ...stock,\r\n                        \"종목코드\": stock[\"종목코드\"] ? stock[\"종목코드\"].toString().padStart(6, '0') : \"N/A\",\r\n                        eps:\r\n                            cleanValue(stock[`2021.12 EPS(원)`]) ||\r\n                            cleanValue(stock[`2022.12 EPS(원)`]) ||\r\n                            cleanValue(stock[`2023.12 EPS(원)`]) ||\r\n                            cleanValue(stock[`2024.12 EPS(원)`]),\r\n                        per:\r\n                            cleanValue(stock[`2021.12 PER(배)`]) ||\r\n                            cleanValue(stock[`2022.12 PER(배)`]) ||\r\n                            cleanValue(stock[`2023.12 PER(배)`]) ||\r\n                            cleanValue(stock[`2024.12 PER(배)`]),\r\n                        pbr:\r\n                            cleanValue(stock[`2021.12 PBR(배)`]) ||\r\n                            cleanValue(stock[`2022.12 PBR(배)`]) ||\r\n                            cleanValue(stock[`2023.12 PBR(배)`]) ||\r\n                            cleanValue(stock[`2024.12 PBR(배)`]),\r\n                        dividendPerShare:\r\n                            cleanValue(stock[`2021.12 주당배당금(원)`]) ||\r\n                            cleanValue(stock[`2022.12 주당배당금(원)`]) ||\r\n                            cleanValue(stock[`2023.12 주당배당금(원)`]) ||\r\n                            cleanValue(stock[`2024.12 주당배당금(원)`]),\r\n                        dividendYield:\r\n                            cleanValue(stock[`2021.12 시가배당률(%)`]) ||\r\n                            cleanValue(stock[`2022.12 시가배당률(%)`]) ||\r\n                            cleanValue(stock[`2023.12 시가배당률(%)`]) ||\r\n                            cleanValue(stock[`2024.12 시가배당률(%)`]),\r\n                    }));\r\n\r\n                    setStocks(mappedData);\r\n                    setHighlightedStock(mappedData[0]); // 첫 번째 종목 설정\r\n                    setError(\"\");\r\n\r\n                    // 매출액 데이터 가져오기\r\n                    fetchRevenueData(mappedData[0][\"종목코드\"]);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n                setHighlightedStock(null);\r\n                setRevenueData(null);\r\n            });\r\n    };\r\n\r\n    // 매출액 데이터 가져오기\r\n    const fetchRevenueData = (stockCode) => {\r\n        console.log(\"Fetching revenue data for stock code:\", stockCode);\r\n        if (!stockCode) {\r\n            setRevenueData(null);\r\n            return;\r\n        }\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/stock-revenue-history\", { params: { stock_code: stockCode } })\r\n            .then((response) => {\r\n                console.log(\"Revenue data response:\", response.data);\r\n                if (response.data.error) {\r\n                    setError(`매출액 데이터를 가져올 수 없습니다: ${response.data.error}`);\r\n                    setRevenueData(null);\r\n                } else if (!response.data.revenue) {\r\n                    setError(\"매출액 데이터가 없습니다.\");\r\n                    setRevenueData(null);\r\n                } else {\r\n                    setRevenueData(response.data.revenue);\r\n                    console.log(\"연간 매출액 데이터:\", response.data.revenue);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setRevenueData(null);\r\n            });\r\n    };\r\n\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n        console.log(\"Query changed to:\", input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n            return;\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    console.log(\"Autocomplete data response:\", response.data);\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const top10 = [...startsWithQuery, ...others].slice(0, 10);\r\n                        setFilteredStocks(top10);\r\n                        setIsDropdownOpen(true);\r\n                        console.log(\"Filtered stocks for autocomplete:\", top10);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleSuggestionClick = (stock) => {\r\n        console.log(\"Suggestion clicked:\", stock);\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            console.log(\"Enter key pressed\");\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const resetState = () => {\r\n        console.log(\"Resetting state\");\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n        setRevenueData(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    };\r\n\r\n    const generateChartData = () => {\r\n        if (!revenueData) return null;\r\n        const labels = Object.keys(revenueData).sort(); // 연도 정렬\r\n        const data = labels.map((year) => revenueData[year]);\r\n\r\n        console.log(\"Chart Labels:\", labels);\r\n        console.log(\"Chart Data:\", data);\r\n\r\n        return {\r\n            labels,\r\n            datasets: [\r\n                {\r\n                    label: \"연간 매출액 (억원)\",\r\n                    data: data.map((value) => value / 10 ** 8), // 억 단위로 변환\r\n                    borderColor: \"rgba(75, 192, 192, 1)\",\r\n                    backgroundColor: \"rgba(75, 192, 192, 0.2)\",\r\n                },\r\n            ],\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2 onClick={resetState} style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}>\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div style={{ position: \"relative\", width: \"100%\", maxWidth: \"600px\", marginBottom: \"20px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                    ]} // 제외할 키 전달\r\n                />\r\n            )}\r\n\r\n            {/* 매출액 데이터 확인 섹션 */}\r\n            {revenueData && (\r\n                <div style={{ width: \"80%\", margin: \"40px auto\", backgroundColor: \"#f9f9f9\", padding: \"20px\", borderRadius: \"8px\" }}>\r\n                    <h3>연간 매출액 데이터</h3>\r\n                    <pre>{JSON.stringify(revenueData, null, 2)}</pre>\r\n                </div>\r\n            )}\r\n\r\n            {/* 연간 매출액 차트 */}\r\n            {revenueData && (\r\n                <div style={{ width: \"80%\", margin: \"40px auto\" }}>\r\n                    <h3>연간 매출액 차트</h3>\r\n                    <Line data={generateChartData()} />\r\n                </div>\r\n            )}\r\n\r\n            {/* 매출액 데이터가 없을 때 메시지 표시 */}\r\n            {stocks.length > 0 && !revenueData && (\r\n                <div style={{ width: \"80%\", margin: \"40px auto\", color: \"red\" }}>\r\n                    <p>매출액 데이터를 불러오는 중이거나, 데이터가 없습니다.</p>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}