{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport { Line } from \"react-chartjs-2\"; // Chart 컴포넌트 추가\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\n\n// Chart.js 등록 (필수)\nimport { Chart as ChartJS, CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend } from 'chart.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(CategoryScale, LinearScale, PointElement, LineElement, Title, Tooltip, Legend);\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 추가된 상태\n  const [revenueData, setRevenueData] = useState(null);\n  const [isRevenueLoading, setIsRevenueLoading] = useState(false);\n  const [revenueError, setRevenueError] = useState(\"\");\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n        setHighlightedStock(null);\n        setRevenueData(null); // 검색 결과 없을 시 매출 데이터 초기화\n      } else {\n        const rawData = response.data.stocks;\n\n        // 데이터 매핑 및 결측값 처리\n        const cleanValue = value => {\n          if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\n          return value.toString().replace(/,/g, \"\"); // 쉼표 제거\n        };\n        const mappedData = rawData.map(stock => ({\n          ...stock,\n          eps: cleanValue(stock[`2021.12 EPS(원)`]) || cleanValue(stock[`2022.12 EPS(원)`]) || cleanValue(stock[`2023.12 EPS(원)`]) || cleanValue(stock[`2024.12 EPS(원)`]),\n          per: cleanValue(stock[`2021.12 PER(배)`]) || cleanValue(stock[`2022.12 PER(배)`]) || cleanValue(stock[`2023.12 PER(배)`]) || cleanValue(stock[`2024.12 PER(배)`]),\n          pbr: cleanValue(stock[`2021.12 PBR(배)`]) || cleanValue(stock[`2022.12 PBR(배)`]) || cleanValue(stock[`2023.12 PBR(배)`]) || cleanValue(stock[`2024.12 PBR(배)`]),\n          dividendPerShare: cleanValue(stock[`2021.12 주당배당금(원)`]) || cleanValue(stock[`2022.12 주당배당금(원)`]) || cleanValue(stock[`2023.12 주당배당금(원)`]) || cleanValue(stock[`2024.12 주당배당금(원)`]),\n          dividendYield: cleanValue(stock[`2021.12 시가배당률(%)`]) || cleanValue(stock[`2022.12 시가배당률(%)`]) || cleanValue(stock[`2023.12 시가배당률(%)`]) || cleanValue(stock[`2024.12 시가배당률(%)`])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0]); // 첫 번째 종목 설정\n        setError(\"\");\n\n        // 첫 번째 종목의 매출액 데이터 가져오기\n        if (mappedData.length > 0) {\n          fetchRevenueData(mappedData[0][\"종목코드\"]);\n        }\n\n        // 디버깅용 데이터 출력\n        console.log(\"Mapped Data:\", mappedData);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n      setHighlightedStock(null);\n      setRevenueData(null);\n    });\n  };\n\n  // 매출액 데이터 가져오기 함수\n  const fetchRevenueData = stockCode => {\n    setIsRevenueLoading(true);\n    setRevenueError(\"\");\n    setRevenueData(null);\n    axios.get(\"http://127.0.0.1:8000/stock-revenue-history\", {\n      params: {\n        stock_code: stockCode\n      }\n    }).then(response => {\n      if (response.data.error) {\n        setRevenueError(\"매출액 데이터를 가져올 수 없습니다.\");\n        setRevenueData(null);\n      } else {\n        setRevenueData(response.data.revenue);\n      }\n      setIsRevenueLoading(false);\n    }).catch(error => {\n      console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\n      setRevenueError(\"매출액 데이터를 가져오는 중 오류가 발생했습니다.\");\n      setRevenueData(null);\n      setIsRevenueLoading(false);\n    });\n  };\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n    setRevenueData(null);\n    setRevenueError(\"\");\n  };\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n\n  // 매출액 그래프 데이터 준비\n  const prepareChartData = () => {\n    if (!revenueData) return {};\n    const years = Object.keys(revenueData).sort();\n    const revenues = years.map(year => revenueData[year]);\n    return {\n      labels: years,\n      datasets: [{\n        label: '매출액 (억원)',\n        data: revenues,\n        fill: false,\n        backgroundColor: 'rgba(75,192,192,0.4)',\n        borderColor: 'rgba(75,192,192,1)'\n      }]\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\"] // 제외할 키 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 17\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"revenue-chart-container\",\n      style: {\n        marginTop: \"40px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC5F0\\uB3C4\\uBCC4 \\uB9E4\\uCD9C\\uC561\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }, this), isRevenueLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\uB9E4\\uCD9C\\uC561 \\uB370\\uC774\\uD130\\uB97C \\uB85C\\uB4DC \\uC911\\uC785\\uB2C8\\uB2E4...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 42\n      }, this), revenueError && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: revenueError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 38\n      }, this), revenueData && /*#__PURE__*/_jsxDEV(Line, {\n        data: prepareChartData(),\n        options: {\n          responsive: true,\n          plugins: {\n            legend: {\n              position: 'top'\n            },\n            title: {\n              display: true,\n              text: `${highlightedStock[\"종목명\"]} 연도별 매출액`\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"HzjIy0+OKyrqLIFRkAvXbr2Z1jk=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","StockTable","Line","Chart","ChartJS","CategoryScale","LinearScale","PointElement","LineElement","Title","Tooltip","Legend","jsxDEV","_jsxDEV","register","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","revenueData","setRevenueData","isRevenueLoading","setIsRevenueLoading","revenueError","setRevenueError","fetchData","searchQuery","trim","get","params","then","response","data","length","rawData","cleanValue","value","toString","replace","mappedData","map","stock","eps","per","pbr","dividendPerShare","dividendYield","fetchRevenueData","console","log","catch","stockCode","stock_code","revenue","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockName","includes","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","prepareChartData","years","Object","keys","sort","revenues","year","labels","datasets","label","fill","backgroundColor","borderColor","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","marginTop","options","responsive","plugins","legend","title","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport { Line } from \"react-chartjs-2\"; // Chart 컴포넌트 추가\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\n\r\n// Chart.js 등록 (필수)\r\nimport {\r\n    Chart as ChartJS,\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n    CategoryScale,\r\n    LinearScale,\r\n    PointElement,\r\n    LineElement,\r\n    Title,\r\n    Tooltip,\r\n    Legend\r\n);\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 추가된 상태\r\n    const [revenueData, setRevenueData] = useState(null);\r\n    const [isRevenueLoading, setIsRevenueLoading] = useState(false);\r\n    const [revenueError, setRevenueError] = useState(\"\");\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                    setHighlightedStock(null);\r\n                    setRevenueData(null); // 검색 결과 없을 시 매출 데이터 초기화\r\n                } else {\r\n                    const rawData = response.data.stocks;\r\n\r\n                    // 데이터 매핑 및 결측값 처리\r\n                    const cleanValue = (value) => {\r\n                        if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\r\n                        return value.toString().replace(/,/g, \"\"); // 쉼표 제거\r\n                    };\r\n\r\n                    const mappedData = rawData.map((stock) => ({\r\n                        ...stock,\r\n                        eps: cleanValue(stock[`2021.12 EPS(원)`]) || cleanValue(stock[`2022.12 EPS(원)`]) || cleanValue(stock[`2023.12 EPS(원)`]) || cleanValue(stock[`2024.12 EPS(원)`]),\r\n                        per: cleanValue(stock[`2021.12 PER(배)`]) || cleanValue(stock[`2022.12 PER(배)`]) || cleanValue(stock[`2023.12 PER(배)`]) || cleanValue(stock[`2024.12 PER(배)`]),\r\n                        pbr: cleanValue(stock[`2021.12 PBR(배)`]) || cleanValue(stock[`2022.12 PBR(배)`]) || cleanValue(stock[`2023.12 PBR(배)`]) || cleanValue(stock[`2024.12 PBR(배)`]),\r\n                        dividendPerShare: cleanValue(stock[`2021.12 주당배당금(원)`]) || cleanValue(stock[`2022.12 주당배당금(원)`]) || cleanValue(stock[`2023.12 주당배당금(원)`]) || cleanValue(stock[`2024.12 주당배당금(원)`]),\r\n                        dividendYield: cleanValue(stock[`2021.12 시가배당률(%)`]) || cleanValue(stock[`2022.12 시가배당률(%)`]) || cleanValue(stock[`2023.12 시가배당률(%)`]) || cleanValue(stock[`2024.12 시가배당률(%)`]),\r\n                    }));\r\n\r\n                    setStocks(mappedData);\r\n                    setHighlightedStock(mappedData[0]); // 첫 번째 종목 설정\r\n                    setError(\"\");\r\n\r\n                    // 첫 번째 종목의 매출액 데이터 가져오기\r\n                    if (mappedData.length > 0) {\r\n                        fetchRevenueData(mappedData[0][\"종목코드\"]);\r\n                    }\r\n\r\n                    // 디버깅용 데이터 출력\r\n                    console.log(\"Mapped Data:\", mappedData);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n                setHighlightedStock(null);\r\n                setRevenueData(null);\r\n            });\r\n    };\r\n\r\n    // 매출액 데이터 가져오기 함수\r\n    const fetchRevenueData = (stockCode) => {\r\n        setIsRevenueLoading(true);\r\n        setRevenueError(\"\");\r\n        setRevenueData(null);\r\n\r\n        axios\r\n            .get(\"http://127.0.0.1:8000/stock-revenue-history\", { params: { stock_code: stockCode } })\r\n            .then((response) => {\r\n                if (response.data.error) {\r\n                    setRevenueError(\"매출액 데이터를 가져올 수 없습니다.\");\r\n                    setRevenueData(null);\r\n                } else {\r\n                    setRevenueData(response.data.revenue);\r\n                }\r\n                setIsRevenueLoading(false);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"매출액 데이터 로드 중 오류 발생:\", error);\r\n                setRevenueError(\"매출액 데이터를 가져오는 중 오류가 발생했습니다.\");\r\n                setRevenueData(null);\r\n                setIsRevenueLoading(false);\r\n            });\r\n    };\r\n\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n        setRevenueData(null);\r\n        setRevenueError(\"\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    };\r\n\r\n    // 매출액 그래프 데이터 준비\r\n    const prepareChartData = () => {\r\n        if (!revenueData) return {};\r\n\r\n        const years = Object.keys(revenueData).sort();\r\n        const revenues = years.map(year => revenueData[year]);\r\n\r\n        return {\r\n            labels: years,\r\n            datasets: [\r\n                {\r\n                    label: '매출액 (억원)',\r\n                    data: revenues,\r\n                    fill: false,\r\n                    backgroundColor: 'rgba(75,192,192,0.4)',\r\n                    borderColor: 'rgba(75,192,192,1)',\r\n                },\r\n            ],\r\n        };\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2 onClick={resetState} style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}>\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div style={{ position: \"relative\", width: \"100%\", maxWidth: \"600px\", marginBottom: \"20px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                    ]} // 제외할 키 전달\r\n                />\r\n            )}\r\n\r\n            {/* 매출액 그래프 영역 */}\r\n            {highlightedStock && (\r\n                <div className=\"revenue-chart-container\" style={{ marginTop: \"40px\" }}>\r\n                    <h3>연도별 매출액</h3>\r\n                    {isRevenueLoading && <p>매출액 데이터를 로드 중입니다...</p>}\r\n                    {revenueError && <p className=\"error-message\">{revenueError}</p>}\r\n                    {revenueData && (\r\n                        <Line\r\n                            data={prepareChartData()}\r\n                            options={{\r\n                                responsive: true,\r\n                                plugins: {\r\n                                    legend: {\r\n                                        position: 'top',\r\n                                    },\r\n                                    title: {\r\n                                        display: true,\r\n                                        text: `${highlightedStock[\"종목명\"]} 연도별 매출액`,\r\n                                    },\r\n                                },\r\n                            }}\r\n                        />\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}