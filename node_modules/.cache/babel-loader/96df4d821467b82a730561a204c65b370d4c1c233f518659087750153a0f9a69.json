{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\FinancialStatementsPage.jsx\",\n  _s = $RefreshSig$();\n// FinancialStatementsPage.jsx\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SimpleTable from \"./SimpleTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/FinancialStatementsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialStatementsPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedYear, setSelectedYear] = useState(null);\n  const [currentMetric, setCurrentMetric] = useState(null);\n  const [showYearButtons, setShowYearButtons] = useState(false); // 연도 버튼 표시 여부\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n\n  // 메트릭별 엔드포인트 매핑\n  const metricEndpoints = {\n    \"시가총액\": \"top-marketcap\",\n    \"매출액\": \"top-revenue\",\n    \"영업이익\": \"top-operating-income\",\n    \"영업이익률\": \"top-operating-income-rate\",\n    \"순이익률\": \"top-net-income\",\n    \"EPS\": \"top-eps\",\n    \"PER\": \"top-per\",\n    \"PBR\": \"top-pbr\",\n    // PBR 추가\n    \"시가배당률\": \"top-dividend-yield\" // 시가배당률 추가 (백엔드에서 지원하는 경우)\n    // 추가 메트릭이 있다면 여기에\n  };\n\n  // 데이터 가져오기\n  const fetchTopStocksByMetric = () => {\n    if (!currentMetric || !metricEndpoints[currentMetric]) {\n      setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n      return;\n    }\n    setLoading(true); // 로딩 시작\n    setError(\"\"); // 기존 에러 메시지 초기화\n\n    const endpoint = metricEndpoints[currentMetric];\n    const params = currentMetric !== \"시가총액\" ? {\n      year: selectedYear\n    } : {};\n    axios.get(`http://127.0.0.1:8000/${endpoint}`, {\n      params\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(`${currentMetric} 데이터가 없습니다.`);\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    }).finally(() => {\n      setLoading(false); // 로딩 종료\n    });\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    setCurrentMetric(metric);\n    if (metric !== \"시가총액\") {\n      setShowYearButtons(true); // 시가총액 제외 모든 버튼 클릭 시 연도 버튼 표시\n      setSelectedYear(\"2024\"); // 기본 연도 설정\n    } else {\n      setShowYearButtons(false); // 시가총액 클릭 시 연도 버튼 숨기기\n      setSelectedYear(null);\n    }\n  };\n\n  // 연도 버튼 클릭 동작\n  const handleYearButtonClick = year => {\n    setSelectedYear(year);\n  };\n\n  // 데이터 요청 트리거\n  useEffect(() => {\n    if (currentMetric) {\n      fetchTopStocksByMetric();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedYear, currentMetric]);\n\n  // 메트릭 버튼 동적 생성\n  const renderMetricButtons = () => {\n    return Object.keys(metricEndpoints).map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleButtonClick(metric),\n      style: {\n        backgroundColor: currentMetric === metric ? \"#007bff\" : \"#fff\",\n        color: currentMetric === metric ? \"#fff\" : \"#000\",\n        border: \"1px solid #007bff\",\n        borderRadius: \"4px\",\n        padding: \"5px 10px\",\n        cursor: \"pointer\"\n      },\n      children: metric\n    }, metric, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this));\n  };\n\n  // 연도 버튼 동적 생성\n  const renderYearButtons = () => {\n    const years = [\"2021\", \"2022\", \"2023\", \"2024\"];\n    return years.map(year => /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handleYearButtonClick(year),\n      style: {\n        backgroundColor: selectedYear === year ? \"#007bff\" : \"#fff\",\n        color: selectedYear === year ? \"#fff\" : \"#000\",\n        border: \"1px solid #007bff\",\n        borderRadius: \"4px\",\n        padding: \"5px 10px\",\n        cursor: \"pointer\"\n      },\n      children: year\n    }, year, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financial-statements-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC7AC\\uBB34\\uC81C\\uD45C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        alignItems: \"center\",\n        gap: \"10px\",\n        marginBottom: \"10px\",\n        flexWrap: \"wrap\"\n      },\n      children: renderMetricButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), showYearButtons && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        gap: \"5px\",\n        marginBottom: \"20px\",\n        flexWrap: \"wrap\"\n      },\n      children: renderYearButtons()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"spinner\",\n      children: \"\\uB370\\uC774\\uD130 \\uB85C\\uB529 \\uC911...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 25\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 23\n    }, this), stocks.length > 0 && !loading && /*#__PURE__*/_jsxDEV(SimpleTable, {\n      stocks: stocks,\n      columnTitle: currentMetric // 동적으로 제목 변경\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancialStatementsPage, \"NJAWCmDEq7KpYrPH/ruN5IxGwtA=\");\n_c = FinancialStatementsPage;\nexport default FinancialStatementsPage;\nvar _c;\n$RefreshReg$(_c, \"FinancialStatementsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","SimpleTable","jsxDEV","_jsxDEV","FinancialStatementsPage","_s","stocks","setStocks","error","setError","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","showYearButtons","setShowYearButtons","loading","setLoading","metricEndpoints","fetchTopStocksByMetric","endpoint","params","year","get","then","response","data","length","catch","console","finally","handleButtonClick","metric","handleYearButtonClick","renderMetricButtons","Object","keys","map","onClick","style","backgroundColor","color","border","borderRadius","padding","cursor","children","fileName","_jsxFileName","lineNumber","columnNumber","renderYearButtons","years","className","marginBottom","display","alignItems","gap","flexWrap","columnTitle","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/FinancialStatementsPage.jsx"],"sourcesContent":["// FinancialStatementsPage.jsx\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/FinancialStatementsPage.css\";\r\n\r\nconst FinancialStatementsPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(null);\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n    const [showYearButtons, setShowYearButtons] = useState(false); // 연도 버튼 표시 여부\r\n    const [loading, setLoading] = useState(false); // 로딩 상태 추가\r\n\r\n    // 메트릭별 엔드포인트 매핑\r\n    const metricEndpoints = {\r\n        \"시가총액\": \"top-marketcap\",\r\n        \"매출액\": \"top-revenue\",\r\n        \"영업이익\": \"top-operating-income\",\r\n        \"영업이익률\": \"top-operating-income-rate\",\r\n        \"순이익률\": \"top-net-income\",\r\n        \"EPS\": \"top-eps\",\r\n        \"PER\": \"top-per\",\r\n        \"PBR\": \"top-pbr\", // PBR 추가\r\n        \"시가배당률\": \"top-dividend-yield\", // 시가배당률 추가 (백엔드에서 지원하는 경우)\r\n        // 추가 메트릭이 있다면 여기에\r\n    };\r\n\r\n    // 데이터 가져오기\r\n    const fetchTopStocksByMetric = () => {\r\n        if (!currentMetric || !metricEndpoints[currentMetric]) {\r\n            setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n            return;\r\n        }\r\n\r\n        setLoading(true); // 로딩 시작\r\n        setError(\"\"); // 기존 에러 메시지 초기화\r\n\r\n        const endpoint = metricEndpoints[currentMetric];\r\n        const params = currentMetric !== \"시가총액\" ? { year: selectedYear } : {};\r\n\r\n        axios\r\n            .get(`http://127.0.0.1:8000/${endpoint}`, { params })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(`${currentMetric} 데이터가 없습니다.`);\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            })\r\n            .finally(() => {\r\n                setLoading(false); // 로딩 종료\r\n            });\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        setCurrentMetric(metric);\r\n        if (metric !== \"시가총액\") {\r\n            setShowYearButtons(true); // 시가총액 제외 모든 버튼 클릭 시 연도 버튼 표시\r\n            setSelectedYear(\"2024\"); // 기본 연도 설정\r\n        } else {\r\n            setShowYearButtons(false); // 시가총액 클릭 시 연도 버튼 숨기기\r\n            setSelectedYear(null);\r\n        }\r\n    };\r\n\r\n    // 연도 버튼 클릭 동작\r\n    const handleYearButtonClick = (year) => {\r\n        setSelectedYear(year);\r\n    };\r\n\r\n    // 데이터 요청 트리거\r\n    useEffect(() => {\r\n        if (currentMetric) {\r\n            fetchTopStocksByMetric();\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [selectedYear, currentMetric]);\r\n\r\n    // 메트릭 버튼 동적 생성\r\n    const renderMetricButtons = () => {\r\n        return Object.keys(metricEndpoints).map((metric) => (\r\n            <button\r\n                key={metric}\r\n                onClick={() => handleButtonClick(metric)}\r\n                style={{\r\n                    backgroundColor: currentMetric === metric ? \"#007bff\" : \"#fff\",\r\n                    color: currentMetric === metric ? \"#fff\" : \"#000\",\r\n                    border: \"1px solid #007bff\",\r\n                    borderRadius: \"4px\",\r\n                    padding: \"5px 10px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                {metric}\r\n            </button>\r\n        ));\r\n    };\r\n\r\n    // 연도 버튼 동적 생성\r\n    const renderYearButtons = () => {\r\n        const years = [\"2021\", \"2022\", \"2023\", \"2024\"];\r\n        return years.map((year) => (\r\n            <button\r\n                key={year}\r\n                onClick={() => handleYearButtonClick(year)}\r\n                style={{\r\n                    backgroundColor: selectedYear === year ? \"#007bff\" : \"#fff\",\r\n                    color: selectedYear === year ? \"#fff\" : \"#000\",\r\n                    border: \"1px solid #007bff\",\r\n                    borderRadius: \"4px\",\r\n                    padding: \"5px 10px\",\r\n                    cursor: \"pointer\",\r\n                }}\r\n            >\r\n                {year}\r\n            </button>\r\n        ));\r\n    };\r\n\r\n    return (\r\n        <div className=\"financial-statements-container\">\r\n            <h2 style={{ color: \"#007bff\", marginBottom: \"20px\" }}>재무제표</h2>\r\n\r\n            {/* 정렬기준 버튼 */}\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    gap: \"10px\",\r\n                    marginBottom: \"10px\",\r\n                    flexWrap: \"wrap\",\r\n                }}\r\n            >\r\n                {renderMetricButtons()}\r\n            </div>\r\n\r\n            {/* 연도 버튼들 (시가총액을 제외한 모든 버튼 클릭 시 표시) */}\r\n            {showYearButtons && (\r\n                <div\r\n                    style={{\r\n                        display: \"flex\",\r\n                        gap: \"5px\",\r\n                        marginBottom: \"20px\",\r\n                        flexWrap: \"wrap\",\r\n                    }}\r\n                >\r\n                    {renderYearButtons()}\r\n                </div>\r\n            )}\r\n\r\n            {/* 로딩 상태 표시 */}\r\n            {loading && <div className=\"spinner\">데이터 로딩 중...</div>}\r\n\r\n            {/* 에러 메시지 표시 */}\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && !loading && (\r\n                <SimpleTable\r\n                    stocks={stocks}\r\n                    columnTitle={currentMetric} // 동적으로 제목 변경\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinancialStatementsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}