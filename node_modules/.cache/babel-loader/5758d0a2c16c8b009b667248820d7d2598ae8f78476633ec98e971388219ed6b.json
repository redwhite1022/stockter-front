{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [selectedYear, setSelectedYear] = useState(\"2021.12\");\n  const dropdownRef = useRef(null);\n\n  // 검색어 강조 표시 함수\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span style=\"color: red\">${match}</span>`);\n  };\n\n  // 년도 변경\n  const handleYearChange = e => {\n    setSelectedYear(e.target.value);\n    fetchTopStocksByRevenue(e.target.value); // 년도 변경 시 매출액 기준으로 데이터를 다시 가져옴\n  };\n\n  // 매출액 상위 50개 가져오기\n  const fetchTopStocksByRevenue = year => {\n    axios.get(`http://127.0.0.1:8000/top-revenue`, {\n      params: {\n        year: year\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"매출액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 시가총액 상위 50개 가져오기\n  const fetchTopStocksByMarketCap = () => {\n    axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"시가총액 데이터가 없습니다.\");\n        setStocks([]);\n      } else {\n        setStocks(response.data.stocks);\n        setError(\"\");\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n    });\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    if (metric === \"시가총액\") {\n      fetchTopStocksByMarketCap();\n    } else if (metric === \"매출액\") {\n      fetchTopStocksByRevenue(selectedYear);\n    }\n  };\n\n  // 입력값 변경\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n\n  // 엔터 키 동작\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n\n  // 외부 클릭 이벤트 감지\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  useEffect(() => {\n    fetchTopStocksByRevenue(selectedYear); // 초기 로드 시 2021.12 데이터로 매출액 상위 50개 가져오기\n  }, [selectedYear]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      justifyContent: \"flex-start\",\n      alignItems: \"center\",\n      height: \"100vh\",\n      paddingTop: \"50px\",\n      fontFamily: \"Arial, sans-serif\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      onClick: () => setStocks([]),\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        textAlign: \"center\"\n      },\n      children: \"Stockter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"year\",\n        style: {\n          marginRight: \"10px\"\n        },\n        children: \"\\uB144\\uB3C4 \\uC120\\uD0DD:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"year\",\n        value: selectedYear,\n        onChange: handleYearChange,\n        style: {\n          padding: \"10px\",\n          fontSize: \"16px\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2021.12\",\n          children: \"2021\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2022.12\",\n          children: \"2022\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2023.12\",\n          children: \"2023\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"2024.12\",\n          children: \"2024\\uB144 12\\uC6D4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\n        gap: \"10px\",\n        width: \"80%\",\n        marginBottom: \"20px\"\n      },\n      children: [\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map(metric => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleButtonClick(metric),\n        style: {\n          padding: \"10px\",\n          fontSize: \"14px\",\n          background: \"#f0f0f0\",\n          border: \"1px solid #ccc\",\n          borderRadius: \"4px\",\n          cursor: \"pointer\"\n        },\n        children: metric\n      }, metric, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        overflowX: \"auto\",\n        marginTop: \"20px\",\n        textAlign: \"left\",\n        width: \"100%\",\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        style: {\n          width: \"max-content\",\n          borderCollapse: \"collapse\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.keys(stocks[0]).map((key, index) => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                padding: \"8px\",\n                background: \"#f2f2f2\",\n                textAlign: \"center\"\n              },\n              children: key\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 37\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: stocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: Object.values(stock).map((value, idx) => /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                padding: \"8px\",\n                textAlign: \"center\"\n              },\n              children: value\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 41\n            }, this))\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"hNxXjPxlKshEJ6MIyy14L/Nccjc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","jsxDEV","_jsxDEV","App","_s","stocks","setStocks","query","setQuery","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","selectedYear","setSelectedYear","dropdownRef","highlightMatch","text","regex","RegExp","replace","match","handleYearChange","e","target","value","fetchTopStocksByRevenue","year","get","params","then","response","data","length","catch","console","fetchTopStocksByMarketCap","handleButtonClick","metric","handleQueryChange","input","trim","lowercasedInput","toLowerCase","filtered","filter","stock","stockCode","toString","stockName","includes","startsWithQuery","startsWith","others","slice","handleKeyPress","key","fetchData","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","style","display","flexDirection","justifyContent","alignItems","height","paddingTop","fontFamily","children","onClick","cursor","color","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","htmlFor","marginRight","id","onChange","padding","fontSize","border","borderRadius","gridTemplateColumns","gap","width","map","background","overflowX","marginTop","borderCollapse","Object","keys","index","values","idx","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst App = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const [selectedYear, setSelectedYear] = useState(\"2021.12\");\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 검색어 강조 표시 함수\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span style=\"color: red\">${match}</span>`);\r\n    };\r\n\r\n    // 년도 변경\r\n    const handleYearChange = (e) => {\r\n        setSelectedYear(e.target.value);\r\n        fetchTopStocksByRevenue(e.target.value); // 년도 변경 시 매출액 기준으로 데이터를 다시 가져옴\r\n    };\r\n\r\n    // 매출액 상위 50개 가져오기\r\n    const fetchTopStocksByRevenue = (year) => {\r\n        axios.get(`http://127.0.0.1:8000/top-revenue`, { params: { year: year } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"매출액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 시가총액 상위 50개 가져오기\r\n    const fetchTopStocksByMarketCap = () => {\r\n        axios.get(\"http://127.0.0.1:8000/top-marketcap\")\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"시가총액 데이터가 없습니다.\");\r\n                    setStocks([]);\r\n                } else {\r\n                    setStocks(response.data.stocks);\r\n                    setError(\"\");\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n            });\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        if (metric === \"시가총액\") {\r\n            fetchTopStocksByMarketCap();\r\n        } else if (metric === \"매출액\") {\r\n            fetchTopStocksByRevenue(selectedYear);\r\n        }\r\n    };\r\n\r\n    // 입력값 변경\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios.get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    // 엔터 키 동작\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    // 외부 클릭 이벤트 감지\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        fetchTopStocksByRevenue(selectedYear); // 초기 로드 시 2021.12 데이터로 매출액 상위 50개 가져오기\r\n    }, [selectedYear]);\r\n\r\n    return (\r\n        <div\r\n            style={{\r\n                display: \"flex\",\r\n                flexDirection: \"column\",\r\n                justifyContent: \"flex-start\",\r\n                alignItems: \"center\",\r\n                height: \"100vh\",\r\n                paddingTop: \"50px\",\r\n                fontFamily: \"Arial, sans-serif\",\r\n            }}\r\n        >\r\n            <h1\r\n                onClick={() => setStocks([])}\r\n                style={{\r\n                    cursor: \"pointer\",\r\n                    color: \"#007bff\",\r\n                    textAlign: \"center\",\r\n                }}\r\n            >\r\n                Stockter\r\n            </h1>\r\n\r\n            <div style={{ marginBottom: \"20px\" }}>\r\n                <label htmlFor=\"year\" style={{ marginRight: \"10px\" }}>년도 선택:</label>\r\n                <select\r\n                    id=\"year\"\r\n                    value={selectedYear}\r\n                    onChange={handleYearChange}\r\n                    style={{\r\n                        padding: \"10px\",\r\n                        fontSize: \"16px\",\r\n                        border: \"1px solid #ccc\",\r\n                        borderRadius: \"4px\",\r\n                    }}\r\n                >\r\n                    <option value=\"2021.12\">2021년 12월</option>\r\n                    <option value=\"2022.12\">2022년 12월</option>\r\n                    <option value=\"2023.12\">2023년 12월</option>\r\n                    <option value=\"2024.12\">2024년 12월</option>\r\n                </select>\r\n            </div>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"grid\",\r\n                    gridTemplateColumns: \"repeat(auto-fit, minmax(150px, 1fr))\",\r\n                    gap: \"10px\",\r\n                    width: \"80%\",\r\n                    marginBottom: \"20px\",\r\n                }}\r\n            >\r\n                {[\"시가총액\", \"매출액\", \"영업이익률\", \"순이익률\", \"EPS\", \"PER\", \"PBR\", \"시가배당률(%)\"].map((metric) => (\r\n                    <button\r\n                        key={metric}\r\n                        onClick={() => handleButtonClick(metric)}\r\n                        style={{\r\n                            padding: \"10px\",\r\n                            fontSize: \"14px\",\r\n                            background: \"#f0f0f0\",\r\n                            border: \"1px solid #ccc\",\r\n                            borderRadius: \"4px\",\r\n                            cursor: \"pointer\",\r\n                        }}\r\n                    >\r\n                        {metric}\r\n                    </button>\r\n                ))}\r\n            </div>\r\n\r\n            {stocks.length > 0 && (\r\n                <div\r\n                    style={{\r\n                        overflowX: \"auto\",\r\n                        marginTop: \"20px\",\r\n                        textAlign: \"left\",\r\n                        width: \"100%\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <table\r\n                        border=\"1\"\r\n                        style={{\r\n                            width: \"max-content\",\r\n                            borderCollapse: \"collapse\",\r\n                        }}\r\n                    >\r\n                        <thead>\r\n                            <tr>\r\n                                {Object.keys(stocks[0]).map((key, index) => (\r\n                                    <th\r\n                                        key={index}\r\n                                        style={{\r\n                                            padding: \"8px\",\r\n                                            background: \"#f2f2f2\",\r\n                                            textAlign: \"center\",\r\n                                        }}\r\n                                    >\r\n                                        {key}\r\n                                    </th>\r\n                                ))}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {stocks.map((stock, index) => (\r\n                                <tr key={index}>\r\n                                    {Object.values(stock).map((value, idx) => (\r\n                                        <td\r\n                                            key={idx}\r\n                                            style={{\r\n                                                padding: \"8px\",\r\n                                                textAlign: \"center\",\r\n                                            }}\r\n                                        >\r\n                                            {value}\r\n                                        </td>\r\n                                    ))}\r\n                                </tr>\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgB,cAAc,EAAEC,iBAAiB,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,SAAS,CAAC;EAC3D,MAAMoB,WAAW,GAAGlB,MAAM,CAAC,IAAI,CAAC;;EAEhC;EACA,MAAMmB,cAAc,GAAGA,CAACC,IAAI,EAAEZ,KAAK,KAAK;IACpC,IAAI,CAACA,KAAK,EAAE,OAAOY,IAAI;IACvB,MAAMC,KAAK,GAAG,IAAIC,MAAM,CAAC,IAAId,KAAK,GAAG,EAAE,IAAI,CAAC;IAC5C,OAAOY,IAAI,CAACG,OAAO,CAACF,KAAK,EAAGG,KAAK,IAAK,4BAA4BA,KAAK,SAAS,CAAC;EACrF,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5BT,eAAe,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC/BC,uBAAuB,CAACH,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAC7C,CAAC;;EAED;EACA,MAAMC,uBAAuB,GAAIC,IAAI,IAAK;IACtC7B,KAAK,CAAC8B,GAAG,CAAC,mCAAmC,EAAE;MAAEC,MAAM,EAAE;QAAEF,IAAI,EAAEA;MAAK;IAAE,CAAC,CAAC,CACrEG,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACvB,KAAK,IAAIsB,QAAQ,CAACC,IAAI,CAAC7B,MAAM,CAAC8B,MAAM,KAAK,CAAC,EAAE;QAC1DvB,QAAQ,CAAC,gBAAgB,CAAC;QAC1BN,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACHA,SAAS,CAAC2B,QAAQ,CAACC,IAAI,CAAC7B,MAAM,CAAC;QAC/BO,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,CACDwB,KAAK,CAAEzB,KAAK,IAAK;MACd0B,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BN,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMgC,yBAAyB,GAAGA,CAAA,KAAM;IACpCtC,KAAK,CAAC8B,GAAG,CAAC,qCAAqC,CAAC,CAC3CE,IAAI,CAAEC,QAAQ,IAAK;MAChB,IAAIA,QAAQ,CAACC,IAAI,CAACvB,KAAK,IAAIsB,QAAQ,CAACC,IAAI,CAAC7B,MAAM,CAAC8B,MAAM,KAAK,CAAC,EAAE;QAC1DvB,QAAQ,CAAC,iBAAiB,CAAC;QAC3BN,SAAS,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACHA,SAAS,CAAC2B,QAAQ,CAACC,IAAI,CAAC7B,MAAM,CAAC;QAC/BO,QAAQ,CAAC,EAAE,CAAC;MAChB;IACJ,CAAC,CAAC,CACDwB,KAAK,CAAEzB,KAAK,IAAK;MACd0B,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MACvCC,QAAQ,CAAC,iBAAiB,CAAC;MAC3BN,SAAS,CAAC,EAAE,CAAC;IACjB,CAAC,CAAC;EACV,CAAC;;EAED;EACA,MAAMiC,iBAAiB,GAAIC,MAAM,IAAK;IAClC,IAAIA,MAAM,KAAK,MAAM,EAAE;MACnBF,yBAAyB,CAAC,CAAC;IAC/B,CAAC,MAAM,IAAIE,MAAM,KAAK,KAAK,EAAE;MACzBZ,uBAAuB,CAACb,YAAY,CAAC;IACzC;EACJ,CAAC;;EAED;EACA,MAAM0B,iBAAiB,GAAIhB,CAAC,IAAK;IAC7B,MAAMiB,KAAK,GAAGjB,CAAC,CAACC,MAAM,CAACC,KAAK;IAC5BnB,QAAQ,CAACkC,KAAK,CAAC;IAEf,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACrBjC,iBAAiB,CAAC,EAAE,CAAC;MACrBI,iBAAiB,CAAC,KAAK,CAAC;IAC5B,CAAC,MAAM;MACHd,KAAK,CAAC8B,GAAG,CAAC,4BAA4B,EAAE;QAAEC,MAAM,EAAE;UAAExB,KAAK,EAAEmC;QAAM;MAAE,CAAC,CAAC,CAChEV,IAAI,CAAEC,QAAQ,IAAK;QAChB,IAAIA,QAAQ,CAACC,IAAI,CAAC7B,MAAM,EAAE;UACtB,MAAMuC,eAAe,GAAGF,KAAK,CAACG,WAAW,CAAC,CAAC;UAC3C,MAAMC,QAAQ,GAAGb,QAAQ,CAACC,IAAI,CAAC7B,MAAM,CAAC0C,MAAM,CAAEC,KAAK,IAAK;YACpD,MAAMC,SAAS,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;YACxD,MAAMM,SAAS,GAAGH,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC;YAC5C,OAAOI,SAAS,CAACG,QAAQ,CAACR,eAAe,CAAC,IAAIO,SAAS,CAACC,QAAQ,CAACR,eAAe,CAAC;UACrF,CAAC,CAAC;UAEF,MAAMS,eAAe,GAAGP,QAAQ,CAACC,MAAM,CAAEC,KAAK,IAAK;YAC/C,MAAMC,SAAS,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;YACxD,MAAMM,SAAS,GAAGH,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC;YAC5C,OAAOI,SAAS,CAACK,UAAU,CAACV,eAAe,CAAC,IAAIO,SAAS,CAACG,UAAU,CAACV,eAAe,CAAC;UACzF,CAAC,CAAC;UAEF,MAAMW,MAAM,GAAGT,QAAQ,CAACC,MAAM,CAAEC,KAAK,IAAK;YACtC,MAAMC,SAAS,GAAGD,KAAK,CAAC,MAAM,CAAC,CAACE,QAAQ,CAAC,CAAC,CAACL,WAAW,CAAC,CAAC;YACxD,MAAMM,SAAS,GAAGH,KAAK,CAAC,KAAK,CAAC,CAACH,WAAW,CAAC,CAAC;YAC5C,OAAO,CAACI,SAAS,CAACK,UAAU,CAACV,eAAe,CAAC,IAAI,CAACO,SAAS,CAACG,UAAU,CAACV,eAAe,CAAC;UAC3F,CAAC,CAAC;UAEFlC,iBAAiB,CAAC,CAAC,GAAG2C,eAAe,EAAE,GAAGE,MAAM,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;UAC/D1C,iBAAiB,CAAC,IAAI,CAAC;QAC3B;MACJ,CAAC,CAAC,CACDsB,KAAK,CAAEzB,KAAK,IAAK;QACd0B,OAAO,CAAC1B,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAAC;MAC3C,CAAC,CAAC;IACV;EACJ,CAAC;;EAED;EACA,MAAM8C,cAAc,GAAIhC,CAAC,IAAK;IAC1B,IAAIA,CAAC,CAACiC,GAAG,KAAK,OAAO,EAAE;MACnBC,SAAS,CAAC,CAAC;IACf;EACJ,CAAC;;EAED;EACA7D,SAAS,CAAC,MAAM;IACZ,MAAM8D,kBAAkB,GAAInC,CAAC,IAAK;MAC9B,IAAIR,WAAW,CAAC4C,OAAO,IAAI,CAAC5C,WAAW,CAAC4C,OAAO,CAACC,QAAQ,CAACrC,CAAC,CAACC,MAAM,CAAC,EAAE;QAChEZ,iBAAiB,CAAC,KAAK,CAAC;MAC5B;IACJ,CAAC;IACDiD,QAAQ,CAACC,gBAAgB,CAAC,WAAW,EAAEJ,kBAAkB,CAAC;IAC1D,OAAO,MAAM;MACTG,QAAQ,CAACE,mBAAmB,CAAC,WAAW,EAAEL,kBAAkB,CAAC;IACjE,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN9D,SAAS,CAAC,MAAM;IACZ8B,uBAAuB,CAACb,YAAY,CAAC,CAAC,CAAC;EAC3C,CAAC,EAAE,CAACA,YAAY,CAAC,CAAC;EAElB,oBACIb,OAAA;IACIgE,KAAK,EAAE;MACHC,OAAO,EAAE,MAAM;MACfC,aAAa,EAAE,QAAQ;MACvBC,cAAc,EAAE,YAAY;MAC5BC,UAAU,EAAE,QAAQ;MACpBC,MAAM,EAAE,OAAO;MACfC,UAAU,EAAE,MAAM;MAClBC,UAAU,EAAE;IAChB,CAAE;IAAAC,QAAA,gBAEFxE,OAAA;MACIyE,OAAO,EAAEA,CAAA,KAAMrE,SAAS,CAAC,EAAE,CAAE;MAC7B4D,KAAK,EAAE;QACHU,MAAM,EAAE,SAAS;QACjBC,KAAK,EAAE,SAAS;QAChBC,SAAS,EAAE;MACf,CAAE;MAAAJ,QAAA,EACL;IAED;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAELhF,OAAA;MAAKgE,KAAK,EAAE;QAAEiB,YAAY,EAAE;MAAO,CAAE;MAAAT,QAAA,gBACjCxE,OAAA;QAAOkF,OAAO,EAAC,MAAM;QAAClB,KAAK,EAAE;UAAEmB,WAAW,EAAE;QAAO,CAAE;QAAAX,QAAA,EAAC;MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACpEhF,OAAA;QACIoF,EAAE,EAAC,MAAM;QACT3D,KAAK,EAAEZ,YAAa;QACpBwE,QAAQ,EAAE/D,gBAAiB;QAC3B0C,KAAK,EAAE;UACHsB,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBC,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE;QAClB,CAAE;QAAAjB,QAAA,gBAEFxE,OAAA;UAAQyB,KAAK,EAAC,SAAS;UAAA+C,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1ChF,OAAA;UAAQyB,KAAK,EAAC,SAAS;UAAA+C,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1ChF,OAAA;UAAQyB,KAAK,EAAC,SAAS;UAAA+C,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC1ChF,OAAA;UAAQyB,KAAK,EAAC,SAAS;UAAA+C,QAAA,EAAC;QAAS;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENhF,OAAA;MACIgE,KAAK,EAAE;QACHC,OAAO,EAAE,MAAM;QACfyB,mBAAmB,EAAE,sCAAsC;QAC3DC,GAAG,EAAE,MAAM;QACXC,KAAK,EAAE,KAAK;QACZX,YAAY,EAAE;MAClB,CAAE;MAAAT,QAAA,EAED,CAAC,MAAM,EAAE,KAAK,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,UAAU,CAAC,CAACqB,GAAG,CAAEvD,MAAM,iBAC1EtC,OAAA;QAEIyE,OAAO,EAAEA,CAAA,KAAMpC,iBAAiB,CAACC,MAAM,CAAE;QACzC0B,KAAK,EAAE;UACHsB,OAAO,EAAE,MAAM;UACfC,QAAQ,EAAE,MAAM;UAChBO,UAAU,EAAE,SAAS;UACrBN,MAAM,EAAE,gBAAgB;UACxBC,YAAY,EAAE,KAAK;UACnBf,MAAM,EAAE;QACZ,CAAE;QAAAF,QAAA,EAEDlC;MAAM,GAXFA,MAAM;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAYP,CACX;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,EAEL7E,MAAM,CAAC8B,MAAM,GAAG,CAAC,iBACdjC,OAAA;MACIgE,KAAK,EAAE;QACH+B,SAAS,EAAE,MAAM;QACjBC,SAAS,EAAE,MAAM;QACjBpB,SAAS,EAAE,MAAM;QACjBgB,KAAK,EAAE,MAAM;QACb3B,OAAO,EAAE,MAAM;QACfE,cAAc,EAAE;MACpB,CAAE;MAAAK,QAAA,eAEFxE,OAAA;QACIwF,MAAM,EAAC,GAAG;QACVxB,KAAK,EAAE;UACH4B,KAAK,EAAE,aAAa;UACpBK,cAAc,EAAE;QACpB,CAAE;QAAAzB,QAAA,gBAEFxE,OAAA;UAAAwE,QAAA,eACIxE,OAAA;YAAAwE,QAAA,EACK0B,MAAM,CAACC,IAAI,CAAChG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC0F,GAAG,CAAC,CAACrC,GAAG,EAAE4C,KAAK,kBACnCpG,OAAA;cAEIgE,KAAK,EAAE;gBACHsB,OAAO,EAAE,KAAK;gBACdQ,UAAU,EAAE,SAAS;gBACrBlB,SAAS,EAAE;cACf,CAAE;cAAAJ,QAAA,EAEDhB;YAAG,GAPC4C,KAAK;cAAAvB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAQV,CACP;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eACRhF,OAAA;UAAAwE,QAAA,EACKrE,MAAM,CAAC0F,GAAG,CAAC,CAAC/C,KAAK,EAAEsD,KAAK,kBACrBpG,OAAA;YAAAwE,QAAA,EACK0B,MAAM,CAACG,MAAM,CAACvD,KAAK,CAAC,CAAC+C,GAAG,CAAC,CAACpE,KAAK,EAAE6E,GAAG,kBACjCtG,OAAA;cAEIgE,KAAK,EAAE;gBACHsB,OAAO,EAAE,KAAK;gBACdV,SAAS,EAAE;cACf,CAAE;cAAAJ,QAAA,EAED/C;YAAK,GAND6E,GAAG;cAAAzB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAOR,CACP;UAAC,GAXGoB,KAAK;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYV,CACP;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CACR;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAC9E,EAAA,CApQID,GAAG;AAAAsG,EAAA,GAAHtG,GAAG;AAsQT,eAAeA,GAAG;AAAC,IAAAsG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}