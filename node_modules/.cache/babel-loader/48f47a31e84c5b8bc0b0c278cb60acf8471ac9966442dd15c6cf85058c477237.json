{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\FinancialStatementsPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport SimpleTable from \"./SimpleTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/FinancialStatementsPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FinancialStatementsPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [selectedYear, setSelectedYear] = useState(\"2024\");\n  const [currentMetric, setCurrentMetric] = useState(null);\n\n  // 데이터 가져오기\n  const fetchTopStocksByMetric = () => {\n    if (currentMetric === \"시가총액\") {\n      axios.get(\"http://127.0.0.1:8000/top-marketcap\").then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"시가총액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else if (currentMetric === \"매출액\") {\n      axios.get(\"http://127.0.0.1:8000/top-revenue\", {\n        params: {\n          year: selectedYear\n        }\n      }).then(response => {\n        if (response.data.error || response.data.stocks.length === 0) {\n          setError(\"매출액 데이터가 없습니다.\");\n          setStocks([]);\n        } else {\n          setStocks(response.data.stocks);\n          setError(\"\");\n        }\n      }).catch(error => {\n        console.error(\"데이터 로드 중 오류 발생:\", error);\n        setError(\"서버와 연결할 수 없습니다.\");\n        setStocks([]);\n      });\n    } else {\n      setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\n      setStocks([]);\n    }\n  };\n\n  // 버튼 클릭 동작\n  const handleButtonClick = metric => {\n    setCurrentMetric(metric);\n  };\n\n  // 연도 버튼 클릭 동작\n  const handleYearButtonClick = year => {\n    setSelectedYear(year);\n  };\n\n  // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\n  useEffect(() => {\n    if (currentMetric) {\n      fetchTopStocksByMetric();\n    }\n  }, [selectedYear, currentMetric]);\n\n  // 메트릭 버튼 목록\n  const metrics = [\"시가총액2024\", \"매출액\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"financial-statements-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC7AC\\uBB34\\uC81C\\uD45C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          fontSize: \"14px\",\n          fontWeight: \"bold\",\n          marginBottom: \"5px\"\n        },\n        children: \"\\uC815\\uB82C\\uAE30\\uC900:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"10px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"시가총액\"),\n          children: \"\\uC2DC\\uAC00\\uCD1D\\uC561\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"5px\"\n          },\n          children: [\"2021\", \"2022\", \"2023\", \"2024\"].map(year => /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleYearButtonClick(year),\n            style: {\n              backgroundColor: selectedYear === year ? \"#007bff\" : \"#fff\",\n              color: selectedYear === year ? \"#fff\" : \"#000\",\n              border: \"1px solid #007bff\",\n              borderRadius: \"4px\",\n              padding: \"5px 10px\"\n            },\n            children: year\n          }, year, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleButtonClick(\"매출액\"),\n          children: \"\\uB9E4\\uCD9C\\uC561\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 23\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(SimpleTable, {\n      stocks: stocks,\n      columnTitle: currentMetric // 동적으로 제목 변경\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n_s(FinancialStatementsPage, \"S5/mWbcsSPUG7qtC4FartPMCWVo=\");\n_c = FinancialStatementsPage;\nexport default FinancialStatementsPage;\nvar _c;\n$RefreshReg$(_c, \"FinancialStatementsPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","SimpleTable","jsxDEV","_jsxDEV","FinancialStatementsPage","_s","stocks","setStocks","error","setError","selectedYear","setSelectedYear","currentMetric","setCurrentMetric","fetchTopStocksByMetric","get","then","response","data","length","catch","console","params","year","handleButtonClick","metric","handleYearButtonClick","metrics","className","children","style","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","display","flexDirection","gap","fontSize","fontWeight","alignItems","onClick","map","backgroundColor","border","borderRadius","padding","columnTitle","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/FinancialStatementsPage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport SimpleTable from \"./SimpleTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/FinancialStatementsPage.css\";\r\n\r\nconst FinancialStatementsPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [selectedYear, setSelectedYear] = useState(\"2024\");\r\n    const [currentMetric, setCurrentMetric] = useState(null);\r\n\r\n    // 데이터 가져오기\r\n    const fetchTopStocksByMetric = () => {\r\n        if (currentMetric === \"시가총액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-marketcap\")\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"시가총액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else if (currentMetric === \"매출액\") {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/top-revenue\", { params: { year: selectedYear } })\r\n                .then((response) => {\r\n                    if (response.data.error || response.data.stocks.length === 0) {\r\n                        setError(\"매출액 데이터가 없습니다.\");\r\n                        setStocks([]);\r\n                    } else {\r\n                        setStocks(response.data.stocks);\r\n                        setError(\"\");\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                    setError(\"서버와 연결할 수 없습니다.\");\r\n                    setStocks([]);\r\n                });\r\n        } else {\r\n            setError(`\"${currentMetric}\" 기능은 아직 구현되지 않았습니다.`);\r\n            setStocks([]);\r\n        }\r\n    };\r\n\r\n    // 버튼 클릭 동작\r\n    const handleButtonClick = (metric) => {\r\n        setCurrentMetric(metric);\r\n    };\r\n\r\n    // 연도 버튼 클릭 동작\r\n    const handleYearButtonClick = (year) => {\r\n        setSelectedYear(year);\r\n    };\r\n\r\n    // 연도 변경 시 현재 선택된 메트릭에 따라 데이터 재요청\r\n    useEffect(() => {\r\n        if (currentMetric) {\r\n            fetchTopStocksByMetric();\r\n        }\r\n    }, [selectedYear, currentMetric]);\r\n\r\n    // 메트릭 버튼 목록\r\n    const metrics = [\"시가총액2024\", \"매출액\"];\r\n\r\n    return (\r\n        <div className=\"financial-statements-container\">\r\n            <h2 style={{ color: \"#007bff\", marginBottom: \"20px\" }}>재무제표</h2>\r\n\r\n            {/* 정렬기준과 버튼들 */}\r\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"10px\", marginBottom: \"20px\" }}>\r\n                <div style={{ fontSize: \"14px\", fontWeight: \"bold\", marginBottom: \"5px\" }}>\r\n                    정렬기준:\r\n                </div>\r\n                <div style={{ display: \"flex\", alignItems: \"center\", gap: \"10px\" }}>\r\n                    {/* 시가총액 버튼 */}\r\n                    <button onClick={() => handleButtonClick(\"시가총액\")}>시가총액</button>\r\n\r\n                    {/* 연도 버튼들 */}\r\n                    <div style={{ display: \"flex\", gap: \"5px\" }}>\r\n                        {[\"2021\", \"2022\", \"2023\", \"2024\"].map((year) => (\r\n                            <button\r\n                                key={year}\r\n                                onClick={() => handleYearButtonClick(year)}\r\n                                style={{\r\n                                    backgroundColor: selectedYear === year ? \"#007bff\" : \"#fff\",\r\n                                    color: selectedYear === year ? \"#fff\" : \"#000\",\r\n                                    border: \"1px solid #007bff\",\r\n                                    borderRadius: \"4px\",\r\n                                    padding: \"5px 10px\",\r\n                                }}\r\n                            >\r\n                                {year}\r\n                            </button>\r\n                        ))}\r\n                    </div>\r\n\r\n                    {/* 매출액 버튼 */}\r\n                    <button onClick={() => handleButtonClick(\"매출액\")}>매출액</button>\r\n                </div>\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <SimpleTable\r\n                    stocks={stocks}\r\n                    columnTitle={currentMetric} // 동적으로 제목 변경\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FinancialStatementsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}