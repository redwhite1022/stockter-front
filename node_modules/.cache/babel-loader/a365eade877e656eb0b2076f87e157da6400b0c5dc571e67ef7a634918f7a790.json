{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\redwh\\\\Desktop\\\\\\uAC1C\\uBC1C\\\\stock\\\\stock-table\\\\src\\\\components\\\\SearchPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport StockTable from \"./StockTable\";\nimport \"../styles/Common.css\";\nimport \"../styles/SearchPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchPage = () => {\n  _s();\n  const [stocks, setStocks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\n  const [filteredStocks, setFilteredStocks] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const dropdownRef = useRef(null);\n\n  // 검색 데이터 가져오기\n  const fetchData = (searchQuery = query) => {\n    if (!searchQuery.trim()) {\n      setError(\"검색어를 입력하세요.\");\n      return;\n    }\n    setError(\"\");\n    setFilteredStocks([]);\n    setIsDropdownOpen(false);\n    axios.get(\"http://127.0.0.1:8000/data\", {\n      params: {\n        query: searchQuery\n      }\n    }).then(response => {\n      if (response.data.error || response.data.stocks.length === 0) {\n        setError(\"검색 결과가 없습니다.\");\n        setStocks([]);\n        setHighlightedStock(null);\n      } else {\n        const rawData = response.data.stocks;\n\n        // 데이터 매핑 및 결측값 처리\n        const cleanValue = value => {\n          if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\n          return value.toString().replace(/,/g, \"\"); // 쉼표 제거\n        };\n        const mappedData = rawData.map(stock => ({\n          ...stock,\n          eps: cleanValue(stock[`2021.12 EPS(원)`]) || cleanValue(stock[`2022.12 EPS(원)`]) || cleanValue(stock[`2023.12 EPS(원)`]) || cleanValue(stock[`2024.12 EPS(원)`]),\n          per: cleanValue(stock[`2021.12 PER(배)`]) || cleanValue(stock[`2022.12 PER(배)`]) || cleanValue(stock[`2023.12 PER(배)`]) || cleanValue(stock[`2024.12 PER(배)`]),\n          pbr: cleanValue(stock[`2021.12 PBR(배)`]) || cleanValue(stock[`2022.12 PBR(배)`]) || cleanValue(stock[`2023.12 PBR(배)`]) || cleanValue(stock[`2024.12 PBR(배)`]),\n          dividendPerShare: cleanValue(stock[`2021.12 주당배당금(원)`]) || cleanValue(stock[`2022.12 주당배당금(원)`]) || cleanValue(stock[`2023.12 주당배당금(원)`]) || cleanValue(stock[`2024.12 주당배당금(원)`]),\n          dividendYield: cleanValue(stock[`2021.12 시가배당률(%)`]) || cleanValue(stock[`2022.12 시가배당률(%)`]) || cleanValue(stock[`2023.12 시가배당률(%)`]) || cleanValue(stock[`2024.12 시가배당률(%)`])\n        }));\n        setStocks(mappedData);\n        setHighlightedStock(mappedData[0]); // 첫 번째 종목 설정\n        setError(\"\");\n\n        // 디버깅용 데이터 출력\n        console.log(\"Mapped Data:\", mappedData);\n      }\n    }).catch(error => {\n      console.error(\"데이터 로드 중 오류 발생:\", error);\n      setError(\"서버와 연결할 수 없습니다.\");\n      setStocks([]);\n      setHighlightedStock(null);\n    });\n  };\n  const handleQueryChange = e => {\n    const input = e.target.value;\n    setQuery(input);\n    if (input.trim() === \"\") {\n      setFilteredStocks([]);\n      setIsDropdownOpen(false);\n    } else {\n      axios.get(\"http://127.0.0.1:8000/data\", {\n        params: {\n          query: input\n        }\n      }).then(response => {\n        if (response.data.stocks) {\n          const lowercasedInput = input.toLowerCase();\n          const filtered = response.data.stocks.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\n          });\n          const startsWithQuery = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\n          });\n          const others = filtered.filter(stock => {\n            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\n            const stockName = stock[\"종목명\"].toLowerCase();\n            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\n          });\n          setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\n          setIsDropdownOpen(true);\n        }\n      }).catch(error => {\n        console.error(\"자동완성 데이터 로드 오류:\", error);\n      });\n    }\n  };\n  const handleSuggestionClick = stock => {\n    setQuery(stock[\"종목명\"]);\n    setIsDropdownOpen(false);\n    fetchData(stock[\"종목명\"]);\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      fetchData();\n    }\n  };\n  const resetState = () => {\n    setQuery(\"\");\n    setStocks([]);\n    setFilteredStocks([]);\n    setError(\"\");\n    setIsDropdownOpen(false);\n    setHighlightedStock(null);\n  };\n  useEffect(() => {\n    const handleOutsideClick = e => {\n      if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\n        setIsDropdownOpen(false);\n      }\n    };\n    document.addEventListener(\"mousedown\", handleOutsideClick);\n    return () => {\n      document.removeEventListener(\"mousedown\", handleOutsideClick);\n    };\n  }, []);\n  const highlightMatch = (text, query) => {\n    if (!query) return text;\n    const regex = new RegExp(`(${query})`, \"gi\");\n    return text.replace(regex, match => `<span class=\"highlight\">${match}</span>`);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      onClick: resetState,\n      style: {\n        cursor: \"pointer\",\n        color: \"#007bff\",\n        marginBottom: \"20px\"\n      },\n      children: \"\\uC885\\uBAA9\\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"relative\",\n        width: \"100%\",\n        maxWidth: \"600px\",\n        marginBottom: \"20px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"flex\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"\\uC885\\uBAA9\\uBA85 \\uB610\\uB294 \\uC885\\uBAA9\\uCF54\\uB4DC \\uC785\\uB825\",\n          value: query,\n          onChange: handleQueryChange,\n          onKeyPress: handleKeyPress\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"search-button\",\n          onClick: () => fetchData(),\n          children: \"\\uC885\\uBAA9 \\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: dropdownRef,\n        className: \"dropdown\",\n        children: filteredStocks.map((stock, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-item\",\n          onClick: () => handleSuggestionClick(stock),\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: highlightMatch(stock[\"종목명\"] || \"\", query)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              marginLeft: \"10px\",\n              color: \"gray\"\n            },\n            children: stock[\"종목코드\"] || \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 33\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 23\n    }, this), highlightedStock && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"highlighted-stock\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC885\\uBAA9 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uC7A5: \", highlightedStock[\"시장\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uCF54\\uB4DC: \", highlightedStock[\"종목코드\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC885\\uBAA9\\uBA85: \", highlightedStock[\"종목명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC5C5\\uC885\\uBA85: \", highlightedStock[\"업종명\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC2DC\\uAC00\\uCD1D\\uC561: \", highlightedStock[\"시가총액\"] || \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }, this), stocks.length > 0 && /*#__PURE__*/_jsxDEV(StockTable, {\n      stocks: stocks,\n      excludeKeys: [\"시장\", \"종목코드\", \"종목명\", \"업종명\", \"시가총액\", \"시가총액(숫자형)\", \"종목명_lower\", \"종목코드_str\"] // 제외할 키 전달\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchPage, \"Jsnl/DREpm0VvWI5AnQBuNpS+M0=\");\n_c = SearchPage;\nexport default SearchPage;\nvar _c;\n$RefreshReg$(_c, \"SearchPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","StockTable","jsxDEV","_jsxDEV","SearchPage","_s","stocks","setStocks","query","setQuery","highlightedStock","setHighlightedStock","filteredStocks","setFilteredStocks","error","setError","isDropdownOpen","setIsDropdownOpen","dropdownRef","fetchData","searchQuery","trim","get","params","then","response","data","length","rawData","cleanValue","value","toString","replace","mappedData","map","stock","eps","per","pbr","dividendPerShare","dividendYield","console","log","catch","handleQueryChange","e","input","target","lowercasedInput","toLowerCase","filtered","filter","stockCode","stockName","includes","startsWithQuery","startsWith","others","slice","handleSuggestionClick","handleKeyPress","key","resetState","handleOutsideClick","current","contains","document","addEventListener","removeEventListener","highlightMatch","text","regex","RegExp","match","className","children","onClick","style","cursor","color","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","position","width","maxWidth","display","type","placeholder","onChange","onKeyPress","ref","index","dangerouslySetInnerHTML","__html","marginLeft","excludeKeys","_c","$RefreshReg$"],"sources":["C:/Users/redwh/Desktop/개발/stock/stock-table/src/components/SearchPage.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport StockTable from \"./StockTable\";\r\nimport \"../styles/Common.css\";\r\nimport \"../styles/SearchPage.css\";\r\n\r\nconst SearchPage = () => {\r\n    const [stocks, setStocks] = useState([]);\r\n    const [query, setQuery] = useState(\"\");\r\n    const [highlightedStock, setHighlightedStock] = useState(null); // 상단 정보용 상태\r\n    const [filteredStocks, setFilteredStocks] = useState([]);\r\n    const [error, setError] = useState(\"\");\r\n    const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n    const dropdownRef = useRef(null);\r\n\r\n    // 검색 데이터 가져오기\r\n    const fetchData = (searchQuery = query) => {\r\n        if (!searchQuery.trim()) {\r\n            setError(\"검색어를 입력하세요.\");\r\n            return;\r\n        }\r\n        setError(\"\");\r\n        setFilteredStocks([]);\r\n        setIsDropdownOpen(false);\r\n    \r\n        axios\r\n            .get(\"http://127.0.0.1:8000/data\", { params: { query: searchQuery } })\r\n            .then((response) => {\r\n                if (response.data.error || response.data.stocks.length === 0) {\r\n                    setError(\"검색 결과가 없습니다.\");\r\n                    setStocks([]);\r\n                    setHighlightedStock(null);\r\n                } else {\r\n                    const rawData = response.data.stocks;\r\n    \r\n                    // 데이터 매핑 및 결측값 처리\r\n                    const cleanValue = (value) => {\r\n                        if (!value || value === \"-\" || value === \"NaN\") return \"N/A\";\r\n                        return value.toString().replace(/,/g, \"\"); // 쉼표 제거\r\n                    };\r\n    \r\n                    const mappedData = rawData.map((stock) => ({\r\n                        ...stock,\r\n                        eps: cleanValue(stock[`2021.12 EPS(원)`]) || cleanValue(stock[`2022.12 EPS(원)`]) || cleanValue(stock[`2023.12 EPS(원)`]) || cleanValue(stock[`2024.12 EPS(원)`]),\r\n                        per: cleanValue(stock[`2021.12 PER(배)`]) || cleanValue(stock[`2022.12 PER(배)`]) || cleanValue(stock[`2023.12 PER(배)`]) || cleanValue(stock[`2024.12 PER(배)`]),\r\n                        pbr: cleanValue(stock[`2021.12 PBR(배)`]) || cleanValue(stock[`2022.12 PBR(배)`]) || cleanValue(stock[`2023.12 PBR(배)`]) || cleanValue(stock[`2024.12 PBR(배)`]),\r\n                        dividendPerShare: cleanValue(stock[`2021.12 주당배당금(원)`]) || cleanValue(stock[`2022.12 주당배당금(원)`]) || cleanValue(stock[`2023.12 주당배당금(원)`]) || cleanValue(stock[`2024.12 주당배당금(원)`]),\r\n                        dividendYield: cleanValue(stock[`2021.12 시가배당률(%)`]) || cleanValue(stock[`2022.12 시가배당률(%)`]) || cleanValue(stock[`2023.12 시가배당률(%)`]) || cleanValue(stock[`2024.12 시가배당률(%)`]),\r\n                    }));\r\n    \r\n                    setStocks(mappedData);\r\n                    setHighlightedStock(mappedData[0]); // 첫 번째 종목 설정\r\n                    setError(\"\");\r\n    \r\n                    // 디버깅용 데이터 출력\r\n                    console.log(\"Mapped Data:\", mappedData);\r\n                }\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"데이터 로드 중 오류 발생:\", error);\r\n                setError(\"서버와 연결할 수 없습니다.\");\r\n                setStocks([]);\r\n                setHighlightedStock(null);\r\n            });\r\n    };\r\n    \r\n    \r\n\r\n    const handleQueryChange = (e) => {\r\n        const input = e.target.value;\r\n        setQuery(input);\r\n\r\n        if (input.trim() === \"\") {\r\n            setFilteredStocks([]);\r\n            setIsDropdownOpen(false);\r\n        } else {\r\n            axios\r\n                .get(\"http://127.0.0.1:8000/data\", { params: { query: input } })\r\n                .then((response) => {\r\n                    if (response.data.stocks) {\r\n                        const lowercasedInput = input.toLowerCase();\r\n                        const filtered = response.data.stocks.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.includes(lowercasedInput) || stockName.includes(lowercasedInput);\r\n                        });\r\n\r\n                        const startsWithQuery = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return stockCode.startsWith(lowercasedInput) || stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        const others = filtered.filter((stock) => {\r\n                            const stockCode = stock[\"종목코드\"].toString().toLowerCase();\r\n                            const stockName = stock[\"종목명\"].toLowerCase();\r\n                            return !stockCode.startsWith(lowercasedInput) && !stockName.startsWith(lowercasedInput);\r\n                        });\r\n\r\n                        setFilteredStocks([...startsWithQuery, ...others].slice(0, 10));\r\n                        setIsDropdownOpen(true);\r\n                    }\r\n                })\r\n                .catch((error) => {\r\n                    console.error(\"자동완성 데이터 로드 오류:\", error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const handleSuggestionClick = (stock) => {\r\n        setQuery(stock[\"종목명\"]);\r\n        setIsDropdownOpen(false);\r\n        fetchData(stock[\"종목명\"]);\r\n    };\r\n\r\n    const handleKeyPress = (e) => {\r\n        if (e.key === \"Enter\") {\r\n            fetchData();\r\n        }\r\n    };\r\n\r\n    const resetState = () => {\r\n        setQuery(\"\");\r\n        setStocks([]);\r\n        setFilteredStocks([]);\r\n        setError(\"\");\r\n        setIsDropdownOpen(false);\r\n        setHighlightedStock(null);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const handleOutsideClick = (e) => {\r\n            if (dropdownRef.current && !dropdownRef.current.contains(e.target)) {\r\n                setIsDropdownOpen(false);\r\n            }\r\n        };\r\n        document.addEventListener(\"mousedown\", handleOutsideClick);\r\n        return () => {\r\n            document.removeEventListener(\"mousedown\", handleOutsideClick);\r\n        };\r\n    }, []);\r\n\r\n    const highlightMatch = (text, query) => {\r\n        if (!query) return text;\r\n        const regex = new RegExp(`(${query})`, \"gi\");\r\n        return text.replace(regex, (match) => `<span class=\"highlight\">${match}</span>`);\r\n    };\r\n\r\n    return (\r\n        <div className=\"search-page-container\">\r\n            <h2 onClick={resetState} style={{ cursor: \"pointer\", color: \"#007bff\", marginBottom: \"20px\" }}>\r\n                종목검색\r\n            </h2>\r\n\r\n            {/* 검색창 */}\r\n            <div style={{ position: \"relative\", width: \"100%\", maxWidth: \"600px\", marginBottom: \"20px\" }}>\r\n                <div style={{ display: \"flex\" }}>\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"종목명 또는 종목코드 입력\"\r\n                        value={query}\r\n                        onChange={handleQueryChange}\r\n                        onKeyPress={handleKeyPress}\r\n                    />\r\n                    <button className=\"search-button\" onClick={() => fetchData()}>\r\n                        종목 검색\r\n                    </button>\r\n                </div>\r\n                {isDropdownOpen && (\r\n                    <div ref={dropdownRef} className=\"dropdown\">\r\n                        {filteredStocks.map((stock, index) => (\r\n                            <div\r\n                                key={index}\r\n                                className=\"dropdown-item\"\r\n                                onClick={() => handleSuggestionClick(stock)}\r\n                            >\r\n                                <span\r\n                                    dangerouslySetInnerHTML={{\r\n                                        __html: highlightMatch(stock[\"종목명\"] || \"\", query),\r\n                                    }}\r\n                                ></span>\r\n                                <span style={{ marginLeft: \"10px\", color: \"gray\" }}>\r\n                                    {stock[\"종목코드\"] || \"\"}\r\n                                </span>\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n            {error && <p className=\"error-message\">{error}</p>}\r\n\r\n            {/* 상단 종목 정보 */}\r\n            {highlightedStock && (\r\n                <div className=\"highlighted-stock\">\r\n                    <h3>종목 정보</h3>\r\n                    <p>시장: {highlightedStock[\"시장\"] || \"N/A\"}</p>\r\n                    <p>종목코드: {highlightedStock[\"종목코드\"] || \"N/A\"}</p>\r\n                    <p>종목명: {highlightedStock[\"종목명\"] || \"N/A\"}</p>\r\n                    <p>업종명: {highlightedStock[\"업종명\"] || \"N/A\"}</p>\r\n                    <p>시가총액: {highlightedStock[\"시가총액\"] || \"N/A\"}</p>\r\n                </div>\r\n            )}\r\n\r\n            {/* 데이터 테이블 */}\r\n            {stocks.length > 0 && (\r\n                <StockTable\r\n                    stocks={stocks}\r\n                    excludeKeys={[\r\n                        \"시장\",\r\n                        \"종목코드\",\r\n                        \"종목명\",\r\n                        \"업종명\",\r\n                        \"시가총액\",\r\n                        \"시가총액(숫자형)\",\r\n                        \"종목명_lower\",\r\n                        \"종목코드_str\",\r\n                    ]} // 제외할 키 전달\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}